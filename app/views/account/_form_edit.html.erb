<%# app/views/account/_form_edit.html.erb -%>
<%-
  # Form for modifying an existing local user account.

  user     ||= current_user
  form_opt ||= nil

  # If form_opt was supplied, that indicates the template is being included
  # within 'user/registrations/edit', which means that the form is being used
  # to change the user's own information.

  get_password         = user.administrator?
  bookshare_user_menu  = user.administrator?
  get_current_password = get_password && form_opt.present?

  form_opt ||= {
    url:  update_account_path,
    html: { class: 'account-form edit' }
  }

  label_opt = { class: 'label' }
  value_opt = { class: 'value' }
  input_opt = { class: 'input single' }
  menu_opt  = { class: 'menu single' }

  input_label_opt = label_opt
  input_value_opt = prepend_classes(input_opt, value_opt[:class])

  email_label_opt = append_classes(input_label_opt, 'disabled')
  email_value_opt = append_classes(input_value_opt, 'disabled')
  email_value_opt.merge!(
    autocomplete: 'email',
    readonly:     true,
    title:        'Cannot change the account identifier' # TODO: I18n
  )

  menu_label_opt  = label_opt
  menu_value_opt  = prepend_classes(menu_opt, value_opt[:class])
  menu_label      = 'Equivalent Bookshare user' # TODO: I18n
  menu_choices    = bookshare_user_menu
  menu_choices  &&= User.test_user_menu
  menu_choices  &&= [['Not applicable', '']] + menu_choices

  pwd_label_opt   = input_label_opt
  pwd_value_opt   = input_value_opt.merge(autocomplete: 'new-password')
  pwd_note        = get_password
  pwd_note      &&= t('emma.user.registrations.edit.password')
  pwd_note      &&= html_tag(:i, "(#{pwd_note})")

  min_length      = get_password
  min_length    &&= @minimum_password_length
  min_length    &&= t('emma.user.password.length', min: min_length)
  min_length    &&= '<br/>'.html_safe << html_tag(:em, "(#{min_length})")

  confirm_label_opt = input_label_opt
  confirm_value_opt = input_value_opt.merge(autocomplete: 'current-password')
  confirm_note      = get_current_password
  confirm_note    &&= t('emma.user.registrations.edit.current')
  confirm_note    &&= html_tag(:i, "(#{confirm_note})")

-%>

<%= form_for(user, form_opt) do |f| %>

  <%= f.hidden_field :id %>

  <div class="account-fields">

    <%= f.label       :email,       email_label_opt %>
    <%= f.email_field :email,       email_value_opt %>

    <%= f.label       :first_name,  input_label_opt %>
    <%= f.text_field  :first_name,  input_value_opt %>

    <%= f.label       :last_name,   input_label_opt %>
    <%= f.text_field  :last_name,   input_value_opt %>

    <%- if get_password -%>

      <%= f.label          :password,              pwd_label_opt %>
      <%= f.password_field :password,              pwd_value_opt %>
      <%#= pwd_note # TODO: ??? %>
      <%#= min_length # TODO: ??? %>

      <%= f.label          :password_confirmation, confirm_label_opt %>
      <%= f.password_field :password_confirmation, confirm_value_opt %>

    <%- end -%>

    <%- if get_current_password -%>
      <%= f.label          :current_password,      confirm_label_opt %>
      <%= f.password_field :current_password,      confirm_value_opt %>
      <%#= confirm_note # TODO: ??? %>
    <%- end -%>

    <%- if bookshare_user_menu -%>
      <%= f.label  :effective_id, menu_label,       menu_label_opt %>
      <%= # noinspection RubyMismatchedArgumentType
          f.select :effective_id, menu_choices, {}, menu_value_opt %>
    <%- end -%>

  </div>

  <div class="button-tray">
    <%= account_submit_button(class: 'best-choice') %>
    <%= account_cancel_button %>
  </div>

<%- end -%>
