// app/assets/stylesheets/layouts/header/_search.scss

@use 'shared/variables'        as v;
@use 'shared/controls/buttons' as b;
@use 'shared/controls/grids'   as g;
@use 'shared/layouts/header'   as h;

//=============================================================================
// Internal constants
//=============================================================================

// Preferred button dimensions.
$advanced-toggle-width:  5rem;
$search-button-width:    6rem;

//=============================================================================
// Internal mixins
//=============================================================================

// When the advanced search grid is closed, each affected grid cell is
// flattened to an invisible element which continues to contribute to
// the layout of grid columns but takes up no vertical space.
@mixin hidden-grid-cell {
    &, & * {
        height:        0;
        margin-top:    0;
        margin-bottom: 0;
        line-height:   2; // NOTE: I *really* don't know why this works
        visibility:    hidden;
    }
}

//=============================================================================
// Sections - generic
//=============================================================================

// Header sections whose content is a single .enclosure child element.
.layout-section:not(.enclosure) {

    // noinspection SassScssResolvedByNameOnly
    @extend %banner;

    display:    block;
    margin:     0;
    overflow-y: hidden;

    @media #{v.$wide-screen} {
        padding: 0 h.$enclosure-indent-wide;
    }

    @media #{v.$medium-width} {
        padding: 0 h.$enclosure-indent-medium;
    }

    @media #{v.$narrow-screen} {
        padding: 0 h.$enclosure-indent-narrow;
    }
}

// Header section enclosures (including layout sections which are standalone
// enclosures).
.layout-section.enclosure,
.layout-section > .enclosure {

    // noinspection SassScssResolvedByNameOnly
    @extend %banner;
    // noinspection SassScssResolvedByNameOnly
    @extend %enclosure;

    justify-content: flex-start;
    align-items:     flex-start;

    > * {
        background: inherit;
    }
}

//=============================================================================
// Sections - search
//=============================================================================

// Header row for search (input bar or filters) with contents inside an
// .enclosure child element.
.layout-section.search.bar:not(.enclosure) {
    // TODO: definition common between search inputs and search filters?
}

// Search input bar or search filters (sort, per-page, language).
.layout-section.search.enclosure,
.layout-section.search > .enclosure {

    // There seem to be some display widths where grids may not work right.
    // Rather than deforming the display, make the problematic section scroll
    // so that at least its controls are fully accessible.
    overflow-x: auto;

    //=========================================================================
    // Elements
    //=========================================================================

    // @see LayoutHelper#menu_spacer
    .menu-spacer {
        // noinspection SassScssResolvedByNameOnly
        @extend %invisible-height;
    }

    // @see LayoutHelper#reset_button
    .menu-button {
        // noinspection SassScssResolvedByNameOnly
        @extend %header-button;
    }

    // @see LayoutHelper#menu_label
    .menu-label,
    .date-label {

        font-size: large;

        @media #{v.$not-narrow-screen} {
            text-align: right;
        }
    }

    // @see LayoutHelper#menu_control
    .menu-control,
    .date-control {

        // noinspection SassScssResolvedByNameOnly
        @extend %header-control-interior;

        /**
         * After Select2 initializes, multi-select <select> elements will be
         * visually hidden in favor of the replacement that Select2 manages.
         * Since there is a noticeable span of time between the initial page
         * load and the completion of the Select2 initialization, these styles
         * are applied to the <select> element to keep it from flashing into
         * existence in a jarring way.
         *
         * If there is only one row of buttons in the control then this will
         * have the effect of the selections disappearing briefly.
         *
         * Unfortunately, if there is more than one row of buttons, then the
         * control will obviously shrink in size until Select2 can create the
         * replacement control.
         */
        select[multiple]:not(.select2-hidden-accessible) {

            margin:         auto 0;
            height:         34px;
            max-height:     34px;
            overflow:       hidden;
            border:         1px solid v.$root-bg-color;
            border-radius:  4px;
            pointer-events: none;

            /**
             * On Chrome with 500 search results, it takes quite a while to get
             * to the point where Select2 creates its replacements for the
             * native <select> elements.  This is required so that the original
             * is obscured until that point.
             */
            // noinspection CssOverwrittenProperties
            option:before {
                display:        block;
                color:          v.$uva-text-gray;
                background:     v.$root-bg-color;
                border:         6px solid v.$root-bg-color;
                content:        "...";
                content:        "\22EF"; // MIDLINE HORIZONTAL ELLIPSIS
                outline:        3px solid white;
                outline-offset: -2px;
            }
        }
    }

    .search-input-label {
        // noinspection SassScssResolvedByNameOnly
        @extend %sr-only;
    }

    // @see LayoutHelper#search_input
    .search-input {
        max-width: 100%;
        // Prevent Chrome from showing its own ghost cancel button.
        &::-webkit-search-cancel-button { -webkit-appearance: unset; }
    }

    // @see LayoutHelper#search_bar
    .search-bar {
        // noinspection SassScssResolvedByNameOnly
        @extend %header-control-interior;
    }

    // @see LayoutHelper#search_button
    .search-button {

        // noinspection SassScssResolvedByNameOnly
        @extend %header-button;

        &:focus {
            // noinspection SassScssResolvedByNameOnly
            @extend %focus;
        }

        &:not(.ready):hover{
            box-shadow: none;
        }

        &.ready:not(:hover) {

            @include b.link-button(lightgray, gray);

            box-shadow: 0 0 0.75rem 0.5rem v.$button-accent;

            &:focus {
                @include b.link-button(gray, gray);
            }
        }
    }

    // @see LayoutHelper#advanced_search_button
    .advanced-search-toggle {

        // noinspection SassScssResolvedByNameOnly
        @extend %control-button-base;

        width:            $advanced-toggle-width;
        margin:           0;
        color:            inherit;
        background-color: v.$panel-accent;
        border:           2px outset;

        &:hover {
            background-color: v.$panel-accent;
        }
    }

    // A container for search buttons, including the submit button.
    .search-controls {

        display:       grid;
        margin:        0;
        grid-template: 'search' 'toggle' 'reset' / 1fr;
        row-gap:       1rem;

        .search-button          { grid-area: search; }
        .advanced-search-toggle { grid-area: toggle; }
        .menu-button.reset      { grid-area: reset; }
    }

    //=========================================================================
    // Variations
    //=========================================================================

    // noinspection SassScssResolvedByNameOnly
    &.shadow {

        &.top      { @extend %top-shadow-enclosure; }
        &.bottom   { @extend %bottom-shadow-enclosure; }
        &.complete { @extend %complete-shadow-enclosure; }

        &.top,
        &.complete {

            margin-top: 2rem; // Keep shadow from being clipped.

            @media #{v.$wide-screen} {
                padding-top: calc(#{h.$enclosure-padding-wide} + 0.5rem);
            }

            @media #{v.$medium-width} {
                padding-top: calc(#{h.$enclosure-padding-medium} + 0.5rem);
            }

            @media #{v.$narrow-screen} {
                padding-top: calc(#{h.$enclosure-padding-narrow} + 0.5rem);
                margin-top:  4.5vh;
            }
        }

        &.bottom,
        &.complete {

            @media #{v.$wide-screen} {
                margin-bottom: 4vh;
            }

            @media #{v.$medium-width} {
                //margin-bottom: 1vh;
                margin-bottom: 2.5vh;
            }

            @media #{v.$narrow-screen} {
                margin-bottom: 4vh;
            }
        }

        &.bottom {
            //margin-top: -0.5vh; // Meet up with .top.shadow.enclosure.
            margin-top: 0; // Meet up with .top.shadow.enclosure.
        }
    }
}

//=============================================================================
// Sections - search input
//=============================================================================

// Header row for search input bar(s) with contents inside an .enclosure child
// element.
.layout-section.search.bar:not(.enclosure) {

    //padding-top: 2vh; // For .top.shadow.enclosure child.

    @media #{v.$narrow-screen} {
        //padding-top: 4vh; // For .top.shadow.enclosure child.
    }
}

// Header row element containing the search input bar(s).
.layout-section.search.bar.enclosure,
.layout-section.search.bar > .enclosure {

    display:               grid;
    grid-template-columns: [container] 1fr [controls] auto;
    column-gap:            1rem;

    @media #{v.$narrow-screen} {
        grid-template-columns: 1fr;
    }

    //=========================================================================
    // Elements
    //=========================================================================

    .search-input {
        margin: auto 0;
        flex:   1 1 auto;
    }

    // @see LayoutHelper#search_clear_button
    // @see file:app/assets/javascripts/feature/advanced-search.js *clearSearchTerms()*
    .search-clear {

        @include b.clear-selection-button; // clear-selection-button;

        position:          relative;
        margin:            auto 0;
        padding:           0 0.25rem;
        color:             v.$uva-text-gray;
        background-color:  white;
        border-color:      transparent;

        &:focus {
            outline-offset: -4px;
        }

        * {
            display: block;
            color:   inherit;
        }
    }

    //=========================================================================
    // Sections
    //=========================================================================

    .search-bar-row {

        // noinspection SassScssResolvedByNameOnly
        @extend %header-section;

        flex-wrap:       nowrap;
        justify-content: flex-start;

        @media #{v.$not-wide-screen} {
            flex-wrap:       wrap;
            justify-content: space-between;
        }

        //=====================================================================
        // Elements
        //=====================================================================

        // @see LayoutHelper#search_input_select
        .search-input-select {

            height:       1.75rem;
            margin-right: 0.5rem;
            margin-left:  calc(#{v.$gap-x} / 2);
            font-size:    large;
            color:        v.$root-fg-color;

            // noinspection CssReplaceWithShorthandSafely
            @media #{v.$narrow-screen} {
                flex:         1 1 auto;
                height:       2rem;
                max-width:    80vw;
                margin:       0;
                margin-right: 0.5rem;
                font-weight:  bold;
                color:        #555;
            }

            option {
                color: inherit; // Needed everywhere except Firefox.

                // This is needed for the Firefox Accessibility panel because
                // the default color (transparent) is #0000 (black with an
                // opacity of 0), which does not play well with color contrast
                // evaluation.
                background-color: inherit;
            }
        }

        .search-bar {

            display:      flex;
            flex-wrap:    nowrap;
            margin-right: calc(2 * #{v.$gap-x});
            flex:         1 1 auto;

            @media #{v.$medium-width} {
                margin-right: calc(4 * #{v.$gap-x});
            }

            @media #{v.$narrow-screen} {
                max-width: 80vw;
                margin:    calc(2 * #{v.$gap-y}) 0;
            }
        }
    }

    // @see LayoutHelper#search_bar_container
    .search-bar-container {

        $sb-row-vertical-gap:        v.$gap-y;
        $sb-row-narrow-vertical-gap: calc(3 * #{v.$gap-y});
        $sb-clear-inset:             -1.75rem;

        display:               grid;
        grid-template-columns: [group] 1fr [add] auto [submit] auto;

        //=====================================================================
        // Elements
        //=====================================================================

        // noinspection SassScssResolvedByNameOnly
        @extend %header-control-interior;

        .search-bar {
            .search-clear {

                left:         $sb-clear-inset;
                margin-right: $sb-clear-inset;

                * {
                    font-size: 80%;
                }
            }
        }

        // Controls for adding/removing search input rows.
        .search-row-control {

            user-select:  none;

            &:focus {
                // noinspection SassScssResolvedByNameOnly
                @extend %focus;
            }

            // This is a technique for rendering the icon in a color since the
            // HTML entity itself can't be given a color (for some reason...).
            * {
                color:        transparent;
                text-shadow:  0 0 0 white;
                cursor:       pointer;
            }
        }

        .search-bar-group {

            // noinspection SassScssResolvedByNameOnly
            @extend %header-section;

            flex-direction:  column;
            flex-wrap:       nowrap;
            justify-content: flex-start;

            @media #{v.$not-wide-screen} {
                flex-wrap:       wrap;
                justify-content: space-between;
            }

            .search-bar-row {

                margin: 0;

                &:not(.first) {

                    margin-top: $sb-row-vertical-gap;

                    @media #{v.$narrow-screen} {
                        margin-top: $sb-row-narrow-vertical-gap;
                    }
                }
            }
        }
    }

    .search-controls {

        row-gap: 0;

        @media #{v.$not-narrow-screen} {
            .advanced-search-toggle:not(.visible) { display: none; }
            .menu-button.reset:not(.visible)      { display: none; }
        }

        // noinspection CssReplaceWithShorthandSafely
        @media #{v.$narrow-screen} {
            grid-template:   'search reset toggle' / 1fr 1fr 1fr;
            column-gap:      1rem;
            justify-content: space-between;
            justify-items:   center;
            width:           100%;
            margin:          0;
            margin-top:      calc(3 * #{v.$page-padding-y});
            margin-bottom:   calc(2 * #{v.$page-padding-y});
        }
    }
}

//=============================================================================
// Sections - search filters
//=============================================================================

// Header row( for search filters (sort, per-page, format, etc.) with contents
// inside an .enclosure child element.
.layout-section.search.filters:not(.enclosure) {

    //padding-top: 0.5vh; // For .bottom.shadow.enclosure child.

    @media #{v.$wide-screen} {
        //padding-bottom: 2vh;
    }

    @media #{v.$medium-width} {
        //padding-bottom: 1.5vh;
    }

    @media #{v.$narrow-screen} {
        //padding-bottom: 1vh;
    }
}

// Header row element containing search filters.
.layout-section.search.filters.enclosure,
.layout-section.search.filters > .enclosure {

    display:         grid;
    padding-bottom:  3vh;
    justify-content: space-between;

    @media #{v.$wide-screen} {
        grid-template-columns: [container] 1fr [controls] auto;
        column-gap:            1rem;
    }

    @media #{v.$medium-width} {
        grid-template-columns: [container] 0.9375fr [controls] auto;
        padding-bottom:        2vh;
    }

    @media #{v.$narrow-screen} {
        grid-template-columns: 1fr;
        overflow-y:            hidden;
    }

    //=========================================================================
    // Sections
    //=========================================================================

    // @see LayoutHelper#search_filter_container
    .search-filter-container {

        // noinspection SassScssResolvedByNameOnly
        @extend %header-search-section;
        // noinspection SassScssResolvedByNameOnly
        @extend %header-control-panel;

        //=====================================================================
        // Grid layout
        //=====================================================================

        display:    grid;
        max-width:  unset;
        overflow-y: hidden;
        box-sizing: border-box;
        gap:        0 v.$gap-x; // @see %grid-cell

        // Maximum number of physical columns per width breakpoint.

        $max-columns: 6;
        $columns-map: (
            'wide':   ('columns': $max-columns),
            'medium': ('columns': 2),
            'narrow': ('columns': 1)
        );

        // Layout of each logical column.

        @media #{v.$narrow-screen} {
            $column: minmax(25vw, 1fr);
            @include g.grid-column-classes($max-columns, $column, $columns-map);
        }

        @media #{v.$not-narrow-screen} {
            $column: [label] max-content [menu] minmax(10vw, 1fr);
            @include g.grid-column-classes($max-columns, $column, $columns-map);
        }

        //=====================================================================
        // Grid cell placeholder classes
        //=====================================================================

        // In order for %hidden-grid-cell to work, vertical grid gap must be
        // managed "manually" here rather than via grid-gap.
        %grid-cell {
            display: block;
            margin:  0 0 v.$gap-y;
        }

        //=====================================================================
        // Elements
        //=====================================================================

        // This takes up space to the left of .menu-button so that a pair of
        // .menu-spacer/.menu-button can be treated by the grid the same way as
        // a pair of .menu-label/.menu-control.
        .menu-spacer {

            @extend %grid-cell;

            @media #{v.$not-wide-screen} {
                display: none;
            }
        }

        // A button embedded within the grid (paired with a .menu-spacer to the
        // left).
        .menu-button {

            @extend %grid-cell;

            @media #{v.$not-wide-screen} {
                display: none;
            }

            $padding-x:    20px;

            margin-bottom: auto;
            margin-left:   2 * $padding-x; // Needed to keep grid from growing.
            padding:       2px $padding-x;
            line-height:   1;
            justify-self:  flex-end;
        }

        // The label to the left of a .menu-control.
        .menu-label,
        .date-label {

            @extend %grid-cell;

            margin-top:   calc(3 * #{v.$gap-y} / 2);
            margin-right: v.$gap-x;
            user-select:  none;

            &.col-first {
                @media #{v.$wide-screen} {
                    @include g.grid-column(1);
                }
            }
        }

        // A dropdown menu (paired with a .menu-label to the left).
        .menu-control,
        .date-control {

            @extend %grid-cell;

            margin-top:   calc(#{v.$gap-y} / 2);
            margin-right: calc(3 * #{v.$gap-x});

            > * {
                min-height:  2.25rem;
            }

            select {
                height: 2rem;
                width:  100%;
            }

            input[type="date"] {
                height:      1.75rem;
                width:       97.5%;
                font-family: inherit;
            }
        }

        //=====================================================================
        // Conditions
        //=====================================================================

        // In the "opened" state, the advanced search control grid element
        // includes the '.open' class.  In the "not-opened" state, the grid is
        // limited to the top row of controls (without a visible "reset"
        // button).
        &:not(.open) {
            > * {

                &.reset,
                &:not(.row-first) {
                    @include hidden-grid-cell;
                }

                @media #{v.$narrow-screen} {
                    &:not(.col-first) {
                        @include hidden-grid-cell;
                    }
                }
            }
        }
    }

    .search-controls {

        @media #{v.$narrow-screen} {
            display: none;
        }

        @media #{v.$not-narrow-screen} {

            row-gap: 0.9rem;

            .search-button:not(.visible) { display: none; }
        }
    }

    //=========================================================================
    // Variations
    //=========================================================================

    &.shadow {

        // noinspection CssReplaceWithShorthandSafely
        .search-filter-container {
            padding:       1rem;
            padding-left:  1.25rem;
            padding-right: 0.25rem;
            border:        none;
            box-shadow:    inset 0 0 8px 1px v.$uva-accent-teal;
        }

        .search-controls {
            @media #{v.$not-narrow-screen} {
                row-gap: 1.25rem;
            }
        }
    }
}
