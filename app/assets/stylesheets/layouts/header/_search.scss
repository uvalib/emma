// app/assets/stylesheets/layouts/header/_search.scss

@use 'shared/variables'        as *;
@use 'shared/mixins'           as *;
@use 'shared/controls/buttons' as button;
@use 'shared/controls/grids'   as grid;
@use 'shared/layouts/header'   as header;

//=============================================================================
// Internal constants
//=============================================================================

// Preferred button dimensions.
$advanced-toggle-width:  5rem;
$search-button-width:    6rem;
$control-height:         2.25rem;

//=============================================================================
// Internal mixins
//=============================================================================

@mixin grid-cell {
    display: block;
    margin:  auto 0;
}

// When the advanced search grid is closed, each affected grid cell is
// flattened to an invisible element which continues to contribute to
// the layout of grid columns but takes up no vertical space.
@mixin hidden-grid-cell {
    &, & * {
        height:        0;
        margin-top:    0;
        margin-bottom: 0;
        line-height:   2; // NOTE: I *really* don't know why this works
        visibility:    hidden;
    }
}

// Treat the including class as the top part of a visually enclosed header
// area which is actually comprised of individual enclosures, one per layout
// section.
@mixin complete-shadow-enclosure {

    @include header.enclosure;

    border:        2px solid whitesmoke;
    border-radius: 1rem;

    $offset: 6px;
    $x:      $offset;
    $y:      $offset;
    $blur:   18px;
    $spread: 8px;
    $color:  rgba($uva-accent-teal, 0.35);

    box-shadow:
         #{$x}  #{$y} $blur $spread $color,
        -#{$x}  #{$y} $blur $spread $color,
         #{$x} -#{$y} $blur $spread $color,
        -#{$x} -#{$y} $blur $spread $color;
}

// Treat the including class as the top part of a visually enclosed header
// area which is actually comprised of individual enclosures, one per layout
// section.
@mixin top-shadow-enclosure {

    @include complete-shadow-enclosure;

    border-bottom-left-radius:  0;
    border-bottom-right-radius: 0;
    border-bottom:              none;
}

// Treat the including class as the bottom part of a visually enclosed header
// area which is actually comprised of individual enclosures, one per layout
// section.
@mixin bottom-shadow-enclosure {

    @include complete-shadow-enclosure;

    border-top-left-radius:  0;
    border-top-right-radius: 0;
    border-top:              none;
}

//=============================================================================
// Sections - generic
//=============================================================================

// Header sections.
.layout-section,
.layout-section > .enclosure {
    @include banner;
}

// Header sections whose content is a single .enclosure child element.
.layout-section:not(.enclosure) {

    display:        block;
    margin:         0;
    overflow-y:     hidden;

    @media #{$wide-screen} {
        padding:    0 header.$enclosure-indent-wide;
    }

    @media #{$medium-width} {
        padding:    0 header.$enclosure-indent-medium;
    }

    @media #{$narrow-screen} {
        padding:    0 header.$enclosure-indent-narrow;
    }
}

// Header section enclosures (including layout sections which are standalone
// enclosures).
.layout-section.enclosure,
.layout-section > .enclosure {

    @include header.enclosure;

    justify-content: flex-start;
    align-items:     flex-start;

    > * {
        background: inherit;
    }
}

//=============================================================================
// Sections - search
//=============================================================================

// Header row for search (input bar or filters) with contents inside an
// .enclosure child element.
.layout-section.search.bar:not(.enclosure) {
    // TODO: definition common between search inputs and search filters?
}

// Search input bar or search filters (sort, per-page, language).
.layout-section.search.enclosure,
.layout-section.search > .enclosure {

    // There seem to be some display widths where grids may not work right.
    // Rather than deforming the display, make the problematic section scroll
    // so that at least its controls are fully accessible.
    overflow-x: auto;

    //=========================================================================
    // Elements
    //=========================================================================

    // @see LayoutHelper::SearchFilters#menu_spacer
    .menu-spacer {
        @include invisible-height;
    }

    // @see LayoutHelper::SearchFilters#reset_button
    .menu-button,
    .search-button {
        @include header.button;
    }

    // @see LayoutHelper::SearchFilters#menu_label
    .menu-label,
    .date-label {

        font-size:      large;

        @media #{$not-narrow-screen} {
            text-align: right;
        }
    }

    // @see LayoutHelper::SearchFilters#menu_control
    .menu-control,
    .date-control {

        @include header.control-interior;

        // After Select2 initializes, multi-select `<select>` elements will be
        // visually hidden in favor of the replacement that Select2 manages.
        // Since there is a noticeable span of time between the initial page
        // load and the completion of the Select2 initialization, these styles
        // are applied to the `<select>` element to keep it from flashing into
        // existence in a jarring way.
        //
        // If there is only one row of buttons in the control then this will
        // have the effect of the selections disappearing briefly.
        //
        // Unfortunately, if there is more than one row of buttons, then the
        // control will obviously shrink in size until Select2 can create the
        // replacement control.

        select[multiple]:not(.select2-hidden-accessible) {

            min-height:     $control-height;
            margin:         2px 0 4px;
            padding:        0;
            overflow:       hidden;
            pointer-events: none;

            // On Chrome with 500 search results, it takes quite a while to get
            // to the point where Select2 creates its replacements for the
            // native `<select>` elements.  This is required so that the
            // original is obscured until that point.

            option {

                width:       inherit;
                height:      inherit;
                padding:     0;
                font-family: sans-serif;
                color:       transparent;

                &::before {
                    display:     block;
                    padding-top: 1px;
                    color:       $uva-text-gray;
                    background:  var(--bg-color);
                    border:      3px solid var(--bg-color);
                    content:     "(any)";
                }
            }
        }
    }

    .search-input-label {
        @include sr-only;
    }

    // @see LayoutHelper::SearchBar#search_input
    .search-input {
        max-width: 100%;
        // Prevent Chrome from showing its own ghost cancel button.
        &::-webkit-search-cancel-button { -webkit-appearance: unset; }
    }

    // @see LayoutHelper::SearchBar#search_bar
    .search-bar {
        @include header.control-interior;
    }

    // @see LayoutHelper::SearchBar#search_button
    .search-button {

        &:focus {
            @include focus;
        }

        &:not(.ready):hover{
            box-shadow: none;
        }

        &.ready:not(:hover) {

            @include button.link(lightgray, gray, 1px);

            box-shadow: 0 0 0.75rem 0.5rem $button-accent;

            &:focus {
                @include button.link(gray, gray, 1px);
            }
        }
    }

    // @see LayoutHelper::SearchFilters#advanced_search_button
    .advanced-search-toggle {

        @include button.basic;
        @include text-contrast;

        width:            $advanced-toggle-width;
        margin:           0;
        color:            inherit;
        background-color: $panel-accent;
        border:           2px outset;

        &:hover {
            background-color: $panel-accent;
        }
    }

    // A container for search buttons, including the submit button.
    .search-controls {

        display:       grid;
        margin:        0;
        grid-template: 'search' 'toggle' 'reset' / max-content;
        row-gap:       1rem;

        .search-button          { grid-area: search; }
        .advanced-search-toggle { grid-area: toggle; }
        .menu-button.reset      { grid-area: reset; }
    }

    //=========================================================================
    // Variations
    //=========================================================================

    &.shadow {

        &.top      { @include top-shadow-enclosure; }
        &.bottom   { @include bottom-shadow-enclosure; }
        &.complete { @include complete-shadow-enclosure; }

        &.top,
        &.complete {

            // Set margin-top to keep shadow from being clipped above.

            @media #{$wide-screen} {
                margin-top:     calc(#{$page-padding-y} * 1.5);
                padding-top:    calc(#{header.$enclosure-pad-wide} + 0.5rem);
            }

            @media #{$medium-width} {
                margin-top:     calc(#{$page-padding-y} * 3);
                padding-top:    calc(#{header.$enclosure-pad-medium} + 0.5rem);
                padding-bottom: 0.5rem;
            }

            @media #{$narrow-screen} {
                margin-top:     calc(#{$page-padding-y} * 4);
                padding-top:    calc(#{header.$enclosure-pad-narrow} + 0.5rem);
            }
        }

        &.bottom,
        &.complete {

            // Set margin-bottom to keep shadow from being clipped below.

            @media #{$wide-screen} {
                margin-bottom:  calc(#{$page-padding-y} * 2);
            }

            @media #{$medium-width} {
                margin-bottom:  calc(#{$page-padding-y} * 3);
            }

            @media #{$narrow-screen} {
                margin-bottom:  calc(#{$page-padding-y} * 4);
            }
        }

        &.bottom {
            margin-top: 0; // Meet up with .top.shadow.enclosure.
        }
    }
}

//=============================================================================
// Sections - search input
//=============================================================================

// Header row element containing the search input bar(s).
.layout-section.search.bar.enclosure,
.layout-section.search.bar > .enclosure {

    display:    grid;
    column-gap: 1rem;

    @media #{$not-narrow-screen} {
        grid-template-columns: [container] 1fr [controls] auto;
    }

    @media #{$narrow-screen} {
        grid-template-columns: 1fr;
    }

    //=========================================================================
    // Elements
    //=========================================================================

    .search-input {
        margin: auto 0;
        flex:   1 1 auto;
    }

    // @see LayoutHelper::SearchBar#search_clear_button
    // @see file:javascripts/feature/advanced-search.js *clearSearchTerms()*
    .search-clear {

        @include button.clear-input;

        position:          relative;
        margin:            auto 0;
        padding:           0 0.25rem;
        color:             $uva-text-gray;
        background-color:  white;
        border-color:      transparent;

        &:focus {
            outline-offset: -4px;
        }

        * {
            display: block;
            color:   inherit;
        }
    }

    //=========================================================================
    // Sections
    //=========================================================================

    .search-bar-row {

        @include header.section;

        @media #{$wide-screen} {
            flex-wrap:       nowrap;
            justify-content: flex-start;
        }

        @media #{$not-wide-screen} {
            flex-wrap:       wrap;
            justify-content: space-between;
        }

        //=====================================================================
        // Elements
        //=====================================================================

        // @see LayoutHelper::SearchBar#search_input_select
        .search-input-select {

            font-size:          large;

            @media #{$not-narrow-screen} {
                height:         1.75rem;
                color:          var(--fg-color);
            }

            // noinspection CssReplaceWithShorthandSafely
            @media #{$narrow-screen} {
                flex:           1 1 auto;
                height:         2rem;
                max-width:      80vw;
                margin:         0;
                margin-right:   0.5rem;
                font-weight:    bold;
                color:          #555;
            }

            option {
                color: inherit; // Needed everywhere except Firefox.

                // This is needed for the Firefox Accessibility panel because
                // the default color (transparent) is #0000 (black with an
                // opacity of 0), which does not play well with color contrast
                // evaluation.
                background-color: inherit;
            }
        }

        .search-bar {

            display:       flex;
            flex-wrap:     nowrap;
            flex:          1 1 auto;

            @media #{$narrow-screen} {
                max-width: 80vw;
                margin:    calc(2 * #{$gap-y}) 0;
            }
        }
    }

    // @see LayoutHelper::SearchBar#search_bar_container
    .search-bar-container {

        $sb-row-vertical-gap:        $gap-y;
        $sb-row-narrow-vertical-gap: calc(3 * #{$gap-y});
        $sb-clear-inset:             -1.75rem;

        display:               grid;
        grid-template-columns: [group] 1fr [add] auto [submit] auto;

        //=====================================================================
        // Elements
        //=====================================================================

        @include header.control-interior;

        .search-bar {
            .search-clear {

                left:         $sb-clear-inset;
                margin-right: $sb-clear-inset;

                * {
                    font-size: 80%;
                }
            }
        }

        // Controls for adding/removing search input rows.
        .search-row-control {

            height:       min-content;
            user-select:  none;

            &:focus {
                @include focus;
            }

            // This is a technique for rendering the icon in a color since the
            // HTML entity itself can't be given a color (for some reason...).
            * {
                color:        transparent;
                text-shadow:  0 0 0 white;
                cursor:       pointer;
            }
        }

        .search-bar-group {

            @include header.section;

            flex-direction:         column;

            @media #{$wide-screen} {
                flex-wrap:          nowrap;
                justify-content:    flex-start;
            }

            @media #{$medium-width} {
                flex-wrap:          wrap;
                justify-content:    space-between;
            }

            @media #{$narrow-screen} {
                flex-wrap:          wrap;
                row-gap:            $sb-row-narrow-vertical-gap;
            }

            .search-bar-row {

                margin:         0;

                @media #{$wide-screen} {
                    column-gap: calc(2 * #{$gap-x});
                }

                @media #{$medium-width} {
                    column-gap: calc(4 * #{$gap-x});
                }

                @media #{$narrow-screen} {
                    row-gap:    $sb-row-narrow-vertical-gap;
                }


                &:not(.first) {

                    @media #{$not-narrow-screen} {
                        margin-top: $sb-row-vertical-gap;
                    }

                    @media #{$narrow-screen} {
                        margin-top: $sb-row-narrow-vertical-gap;
                    }
                }

                @media #{$not-narrow-screen} {
                    > :first-child { margin-left:  $gap-x; }
                    > :last-child  { margin-right: $gap-x; }
                }
            }
        }
    }

    .search-controls {

        row-gap: 0;

        @media #{$not-narrow-screen} {
            .advanced-search-toggle:not(.visible) { display: none; }
            .menu-button.reset:not(.visible)      { display: none; }
        }

        // noinspection CssReplaceWithShorthandSafely
        @media #{$narrow-screen} {
            grid-template:   'search reset toggle' / 1fr 1fr 1fr;
            column-gap:      1rem;
            justify-content: space-between;
            justify-items:   center;
            width:           100%;
            margin:          0;
            margin-top:      calc(4 * #{$page-padding-y});
        }

        .search-button          { order: 1; }
        .menu-button.reset      { order: 2; }
        .advanced-search-toggle { order: 3; }
    }
}

//=============================================================================
// Sections - search filters
//=============================================================================

// Header row element containing search filters.
.layout-section.search.filters.enclosure,
.layout-section.search.filters > .enclosure {

    display:                    grid;
    padding-bottom:             3vh;
    justify-content:            space-between;

    @media #{$wide-screen} {
        grid-template-columns:  [container] 1fr [controls] auto;
        column-gap:             1rem;
    }

    @media #{$medium-width} {
        grid-template-columns:  [container] 0.975fr [controls] auto;
    }

    @media #{$narrow-screen} {
        grid-template-columns:  1fr;
        overflow-y:             hidden;
    }

    //=========================================================================
    // Sections
    //=========================================================================

    // @see LayoutHelper::SearchFilters#search_filter_container
    .search-filter-container {

        @include header.search-section;
        @include header.control-panel;

        //=====================================================================
        // Grid layout
        //=====================================================================

        display:    grid;
        max-width:  unset;
        overflow-y: hidden;
        box-sizing: border-box;
        row-gap:    calc(2 * #{$gap-y});
        column-gap: $gap-x;

        // Maximum number of physical columns per width breakpoint.

        $max-columns:  6;
        $template-map: (
            'wide':   ('columns': $max-columns),
            'medium': ('columns': 2),
            'narrow': ('columns': 1)
        );

        // Layout of each logical column.

        @media #{$not-narrow-screen} {

            $column: [label] max-content [menu] minmax(10vw, 1fr);

            @include grid.column-classes($max-columns, $column, $template-map);
        }

        @media #{$medium-width} {
            column-gap: calc(2 * #{$gap-x});
        }

        @media #{$narrow-screen} {

            $column: minmax(25vw, 1fr);

            @include grid.column-classes($max-columns, $column, $template-map);

            column-gap: calc(6 * #{$gap-x});
        }

        //=====================================================================
        // Elements
        //=====================================================================

        // This takes up space to the left of .menu-button so that a pair of
        // .menu-spacer/.menu-button can be treated by the grid the same way as
        // a pair of .menu-label/.menu-control.
        .menu-spacer {

            @include grid-cell;

            @media #{$not-wide-screen} {
                display: none;
            }
        }

        // A button embedded within the grid (paired with a .menu-spacer to the
        // left).
        .menu-button {

            @include grid-cell;

            @media #{$not-wide-screen} {
                display: none;
            }

            $padding-x:    20px;

            margin-left:   2 * $padding-x; // Needed to keep grid from growing.
            padding:       2px $padding-x;
            line-height:   1;
            justify-self:  flex-end;
        }

        // The label to the left of a .menu-control.
        .menu-label,
        .date-label {

            @include grid-cell;

            user-select:        none;

            @media #{$not-narrow-screen} {
                margin-right:   $gap-x;
            }

            &.col-first {
                @media #{$wide-screen} {
                    @include grid.column(1);
                }
            }
        }

        // A dropdown menu (paired with a .menu-label to the left).
        .menu-control,
        .date-control {

            @include grid-cell;

            @media #{$not-narrow-screen} {
                margin-right: calc(3 * #{$gap-x});
            }

            > * {
                min-height: $control-height;
            }

            select {
                height: 2rem;
                width:  100%;
            }

            input[type="date"] {
                height:      1.75rem;
                width:       97.5%;
                font-family: inherit;
            }

            .select2-selection--multiple {

                min-height:    $control-height;
                margin-top:    2px;
                border-radius: 0;

                .select2-selection__choice {
                    @media #{$not-wide-screen} {
                        max-width:   95%;
                    }
                }

                .select2-selection__choice__display {
                    @media #{$not-wide-screen} {
                        font-size:   medium;
                        white-space: normal;
                    }
                }
            }

            .select2-search__field:focus {
                outline-color: transparent;
            }
        }

        //=====================================================================
        // Conditions
        //=====================================================================

        // In the "opened" state, the advanced search control grid element
        // includes the '.open' class.  In the "not-opened" state, the grid is
        // limited to the top row of controls (without a visible "reset"
        // button).
        &:not(.open) {

            row-gap: 0;

            > * {

                &.reset,
                &:not(.row-first) {
                    @include hidden-grid-cell;
                }

                &:not(.col-first) {
                    @media #{$narrow-screen} {
                        @include hidden-grid-cell;
                    }
                }

                &.disabled {
                    @media #{$not-wide-screen} {
                        @include hidden;
                    }
                }
            }
        }
    }

    .search-controls {

        @media #{$narrow-screen} {
            display: none;
        }

        @media #{$not-narrow-screen} {

            row-gap: 0.9rem;

            .search-button:not(.visible) { display: none; }
        }

        .search-button          { order: 1; }
        .menu-button.reset      { order: 3; }
        .advanced-search-toggle { order: 2; }
    }

    //=========================================================================
    // Variations
    //=========================================================================

    &.shadow {

        // noinspection CssReplaceWithShorthandSafely
        .search-filter-container {
            @media #{$wide-screen}   { padding: 1.25rem; }
            @media #{$medium-width}  { padding: 0.75rem; }
            @media #{$narrow-screen} { padding: 1rem;    }
            padding-right: 0.25rem;
            border:        none;
            box-shadow:    inset 0 0 8px 1px $uva-accent-teal;
        }

        .search-controls {
            @media #{$wide-screen} {
                row-gap: 1.25rem;
            }
            @media #{$medium-width} {
                row-gap: 2rem;
            }
        }
    }
}
