// app/assets/stylesheets/feature/_model.scss

@use 'sass:math';
@use 'shared/variables'      as v;
@use 'shared/functions'      as f;
@use 'shared/mixins'         as x;
@use 'shared/controls/grids' as g;
@use 'shared/feature/model'  as m;

//=============================================================================
// Internal mixins
//=============================================================================

@mixin value-box($color: black) {
    padding:       0 0.25rem;
    border:        1px solid $color;
    border-radius: 0.125rem;
}

//=============================================================================
// Item metadata
//=============================================================================

// A collection of one or more label/value pairs.
//
// noinspection CssOverwrittenProperties
.label-value-pairs {

    @extend .list-2-column;

    margin-bottom: m.$results-entry-gap-y;
    break-inside:  avoid;
    break-inside:  avoid-column;
    break-after:   left;
    align-content: flex-start;

    @media #{v.$narrow-screen} {
        grid-template-columns: 100%;
    }

    //=========================================================================
    // Classes
    //=========================================================================

    // Make focus outline follow the perimeter of the area of clickable text
    // rather than the individual lines.
    a {
        display:   inline-block;
        min-width: 48px; // Accessibility best practice. // TODO: reference
        max-width: max-content;
    }

    //=========================================================================
    // Components
    //=========================================================================

    // Used to group .label and .value grid elements to provide a logical
    // pairing (for accessibility purposes) while not interfering with grid
    // layout.
    .pair {
        // noinspection SassScssResolvedByNameOnly
        @extend %logical-grouping;
    }

    // noinspection CssOverwrittenProperties
    .label,
    .value {
        margin-bottom: m.$results-entry-margin-y;
        word-break:    break-word;
        break-inside:  avoid;
        break-inside:  avoid-column;
    }

    .label {

        font-weight: bold;
        align-self:  baseline;

        @media #{v.$narrow-screen} {
            margin-bottom: v.$flex-gap-y;
        }
    }

    .value {

        @media #{v.$narrow-screen} {
            margin-bottom: calc(3 * #{m.$results-entry-gap-y} / 2);
        }

        // noinspection CssOverwrittenProperties
        &.field-Links {

            word-break: break-all;
            word-break: break-word;

            > * {

                display:    block;
                margin-top: m.$results-entry-margin-y;

                &:first-child {
                    margin-top: 0;
                }
            }
        }
    }
}

//=============================================================================
// Item list (index page) support
//=============================================================================

// Metadata label/value pairs on index pages.
// @see ModelHelper::List#model_list_item
.model-list-item {

    @extend .label-value-pairs;

    &.empty {
        margin-bottom:         0;
        grid-template-columns: max-content;
    }

    //=========================================================================
    // Components
    //=========================================================================

    .label {}

    .value {
        &.field-None {
            width: max-content;
        }
    }
}

// Zero or more .model-list-item elements.
.model-list {

    @extend .list-2-column;

    margin:        m.$results-entry-gap-y 0;
    align-content: flex-start;

    //=========================================================================
    // Components
    //=========================================================================

    .number {

        font-family: v.$font-condensed;
        cursor:      text;

        // Sticky container which keeps the item number and icon tray in view
        // as the item is scrolled off the top of the screen.
        .container {

            // noinspection SassScssResolvedByNameOnly
            @extend %clear-default-styling;

            display:        flex;
            flex-direction: column;
            align-items:    center;
            position:       sticky;
            top:            2%;
            margin:         0;
            padding:        0;

            //=================================================================
            // Components
            //=================================================================

            // Item number value.
            .value {

                margin-bottom: 1rem;
                font-size:     large;
                font-weight:   bold;

                @media #{v.$narrow-screen} {
                    font-size: larger;
                }
            }

            // Vertical tray of action button icons.
            .icon-tray {

                display:        flex;
                flex-direction: column;
                align-items:    center;
                padding:        m.$tray-pad;
                margin-left:    -(m.$tray-pad);
                margin-right:   -(m.$tray-pad);
                background:     whitesmoke;
                border:         1px solid v.$root-fg-color;
                border-radius:  0.25rem;

                @media #{v.$narrow-screen} {
                    padding-left:  m.$icon-pad;
                    padding-right: m.$icon-pad;
                }
            }

            // Action button icon to perform an operation to the current item.
            .icon {

                // noinspection SassScssResolvedByNameOnly
                @extend %button-hover;

                @include x.user-select(none);

                padding:         0 m.$icon-pad;
                margin-left:     -(m.$icon-pad);
                margin-right:    -(m.$icon-pad);
                text-decoration: none;
                font-size:       large;
                color:           v.$uva-accent-blue;
                border-radius:   50%;

                &:hover {
                    text-decoration:  none;
                    background-color: v.$root-bg-color;
                }

                &:focus {
                    outline-offset: -0.05rem;
                }
            }
        }
    }
}

// Model metadata fields for index listings.
//
// noinspection CssReplaceWithShorthandSafely
.model-list-item-panel {

    $item-padding:     0.5rem;
    $value-separation: 2px;
    $max-columns:      20;

    @extend .model-list-item;

    padding:        $item-padding;
    padding-bottom: 2 * $item-padding;
    overflow-x:     auto;
    border:         2px solid v.$root-fg-color;
    border-radius:  0.5rem;
    background:     f.lighter(v.$uva-accent-yellow, 95%);

    gap: 0 2rem;

    // Special-case listing when no records are found.
    &.empty {
        margin-top:  0;
        padding-top: 0;
        border:      none;
        background:  inherit;
    }

    // List data items in horizontal columns when there is enough room.
    @media #{v.$wide-screen} {

        @include g.grid-column-classes($max-columns, auto);

        grid-template-columns: repeat($max-columns, auto);

        > .label { grid-row-start: 1; }
        > .value { grid-row-start: 2; }
    }

    // Revert to one data item label/value per line with less room.
    @media #{v.$medium-width} {
        grid-template-columns: [label] minmax(10%,auto) [value] 1fr;
    }

    // Each label and value on a separate line on narrow screens.
    @media #{v.$narrow-screen} {

        grid-template-columns: 1fr;

        padding-bottom: 0;
    }

    //=========================================================================
    // Components
    //=========================================================================

    .label {

        // Don't show the help icons when displaying the upload record.
        .help-popup {
            display: none;
        }

        // Make data values easier to distinguish from labels in single-column
        // display if they are not already clear.
        @media #{v.$narrow-screen} {

            .text {
                padding-bottom: $value-separation;
                border-bottom:  2px solid lightgray;
            }

            &.array,
            &.textbox {
                .text {
                    border-bottom: none;
                }
            }
        }
    }

    .value {

        @media #{v.$narrow-screen} {
            padding-top: $value-separation;
        }

        // Display multi-line fields inside a box.
        // @see ModelHelper::List#render_pair
        &.list,
        &.textbox {
            @include x.width-fit-content;
            @include value-box(darkgray);
        }

        // Display fields with multiple values horizontally.
        // @see ModelHelper::List#render_pair
        &.array {

            display:        flex;
            flex-direction: row;
            flex-wrap:      wrap;
            margin-bottom:  0;

            > * {

                @include value-box(blue);

                margin-right:  0.5rem;
                margin-bottom: 0.5rem;
                padding-top:   0.0625rem;
            }

            @media #{v.$narrow-screen} {

                flex-direction: column;
                margin-bottom:  0.5rem;
                border-top:     none;

                &:last-of-type {
                    margin-bottom: 0;
                }

                > * {
                    margin-right: 0;
                }
            }
        }

        &.field-Description {
            white-space: pre-wrap;
        }
    }

    // Hierarchical display for data items containing JSON.
    .data-list {

        @extend .model-list;

        $wide-margin:   2rem;
        $medium-margin: 1rem;
        $narrow-margin: 0.5rem;

        margin:  0 $wide-margin;
        padding: $item-padding;

        @media #{v.$medium-width} {
            margin: 0 $medium-margin;
        }

        @media #{v.$narrow-screen} {

            margin: 0 $narrow-margin;

            grid-template-columns: 1fr;
        }

        @if not m.$data-list-border-color == none {
            border:         2px solid m.$data-list-border-color;
            border-radius:  0.5rem;
        }

        // Adjustment for a hierarchical element which is itself a hierarchy.
        .data-list {

            margin-top:   1.75rem;
            margin-left:  -4rem;
            margin-right: $wide-margin;

            @media #{v.$medium-width} {
                margin-right: $medium-margin * 1.25;
            }

            @media #{v.$narrow-screen} {
                margin-top:   math.div($narrow-margin, 2);
                margin-left:  $narrow-margin;
                margin-right: $narrow-margin;
            }
        }
    }
}

// Metadata in tabular form.
.model-table {
    @extend .grid-table;
}

//=============================================================================
// Item details (show page) support
//=============================================================================

// Metadata label/value pairs on show pages.
.model-details {

    @extend .label-value-pairs;

    //=========================================================================
    // Components
    //=========================================================================

    // Add a top margin except to the first label/value pair.
    .value + .label,
    .value + .label + .value {
        margin-top: m.$results-entry-margin-y;
    }
}

// Wrapper for item details which supports a second column of information to
// the right of the details listing.
.model-container {

    display:        flex;
    flex-direction: column;

    @media #{v.$wide-screen} {
        margin-top:     v.$page-padding;
        flex-direction: row;
    }

    //=========================================================================
    // Sections
    //=========================================================================

    > * {

        margin: 0 0 v.$page-padding-y 0;

        &:last-child {
            img {
                max-width: 100%;
            }
        }

        @media #{v.$wide-screen} {

            flex:         1 1 50%;
            margin-right: v.$page-padding-x;

            &:last-child {
                margin-right: 0;
            }
        }

        @media #{v.$narrow-screen} {

            margin-top: calc(2 * #{v.$page-padding});

            &:first-child {
                margin-top: 0;
            }
        }
    }
}
