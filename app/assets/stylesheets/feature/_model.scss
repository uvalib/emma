// app/assets/stylesheets/feature/_model.scss

@use "shared/variables"       as *;
@use "shared/functions"       as *;
@use "shared/mixins"          as *;
@use "shared/controls/grids"  as grid;
@use "shared/controls/lists"  as list;
@use "shared/controls/tables" as table;
@use "shared/feature/icons"   as icon;
@use "shared/feature/model"   as model;

//=============================================================================
// Internal mixins
//=============================================================================

@mixin value-box($color: black) {
    & {
        padding:       0 0.25rem;
        border:        1px solid $color;
        border-radius: 0.125rem;
    }
}

//=============================================================================
// Item list (index page) support
//=============================================================================

// Metadata label/value pairs on index pages.
// @see BaseDecorator::List#list_item
.model-list-item {

    @include model.label-value-pairs;

    &.empty {
        margin-bottom:         0;
        grid-template-columns: max-content;
    }

    //=========================================================================
    // Components
    //=========================================================================

    .label {}

    .value {
        &.field-None {
            width: max-content;
        }
    }
}

// Zero or more .model-list-item elements.
.model-list {

    @include list.columns-2;

    & {
        margin:        model.$list-item-gap-y 0;
        align-content: flex-start;
    }

    @media #{$not-wide-screen} {
        grid-template-columns: [label] min-content [value] 1fr;
    }

    //=========================================================================
    // Components
    //=========================================================================

    .number {

        font-family: $font-condensed;
        cursor:      text;

        // Sticky container which keeps the item number and icon tray in view
        // as the item is scrolled off the top of the screen.
        .container {

            @include clear-default-styling;

            & {
                display:        flex;
                flex-direction: column;
                align-items:    center;
                position:       sticky;
                top:            2%;
                margin:         0;
                padding:        0;
            }

            //=================================================================
            // Components
            //=================================================================

            $tray-pad: (model.$tray-pad);
            $icon-pad: (model.$icon-pad);

            // Item number value.
            .value {

                margin-bottom:  1rem;
                font-weight:    bold;

                @media #{$not-narrow-screen} {
                    font-size:  large;
                }

                @media #{$narrow-screen} {
                    font-size:  larger;
                }
            }

            // Vertical tray of action button icons.
            .icon-tray {

                display:            flex;
                flex-direction:     column;
                align-items:        center;
                background:         whitesmoke;
                border:             1px solid $fg-color;
                border-radius:      0.25rem;

                @media #{$not-narrow-screen} {
                    margin-left:    -$tray-pad;
                    margin-right:   -$tray-pad;
                    padding:        $tray-pad;
                }

                @media #{$narrow-screen} {
                    padding:        $icon-pad ($icon-pad * 0.5);
                }
            }

            // Action button icon to perform an operation to the current item.
            .icon {

                @include hover-highlight;
                @include user-select(none);

                & {
                    padding:            0 $icon-pad;
                    margin-left:        -$icon-pad;
                    margin-right:       -$icon-pad;
                    text-decoration:    none;
                    font-size:          large;
                    color:              $uva-accent-blue;
                    border-radius:      50%;
                }

                &.edit {

                    @include icon.edit($pad: calc(0.25 * $icon-pad) $icon-pad);

                    .symbol { font-size: large; }
                }

                &.delete {

                    @include icon.delete($pad: 0 calc(1.25 * $icon-pad));

                    .symbol { font-size: large; }
                }

                &:hover {
                    text-decoration:    none;
                    background-color:   $bg-color;
                }

                &:focus {
                    outline-offset:     -0.05rem;
                    outline-color:      darker($uva-accent-teal, 30%);
                }
            }
        }
    }
}

$item-padding:      0.5rem;

// Hierarchical display for data items containing JSON.
.file_data,
.emma_data {

    .data-list {

        @extend .model-list;

        gap:     $gap-y $gap-x;
        grid-template-columns: [label] max-content [value] max-content;

        @media #{$wide-screen} {
            margin: 0;
        }

        @media #{$medium-width} {
            margin: 0;
        }

        @media #{$narrow-screen} {
            grid-template-columns: 1fr;
        }

        .inline-popup {
            display: none;
        }

        $w-label-max-width: 10vw;
        $m-label-max-width: 15vw;

        $w-value-max-width: 25vw;
        $m-value-max-width: 30vw;

        $w-hierarchy-left:  5rem;
        $m-hierarchy-left:  3rem;
        $n-hierarchy-left:  2rem;

        .label {

            font-weight:    bold;

            @media #{$wide-screen} {
                max-width:  $w-label-max-width;
            }

            @media #{$medium-width} {
                max-width:  $m-label-max-width;
            }
        }

        .value {

            position:       relative;

            @media #{$wide-screen} {
                max-width:  $w-value-max-width;
            }

            @media #{$medium-width} {
                max-width:  $m-value-max-width;
            }
        }

        // Adjustment for a hierarchical element which is itself a hierarchy.
        .data-list {

            @media #{$not-narrow-screen} {
                position:   absolute;
                margin:     0;
                column-gap: calc(2 * $gap-x);
            }

            @media #{$wide-screen} {
                top:        1.5rem;
                left:       -$w-hierarchy-left;
            }

            @media #{$medium-width} {
                top:        2.5rem;
                left:       -$m-hierarchy-left;
            }

            .value.field-FileDataMetadataFilename {
                // noinspection CssBrowserCompatibilityForProperties
                word-wrap: break-word;
                max-width: calc($w-value-max-width - $w-hierarchy-left);
                font-weight: bold;
            }
        }
    }
}

// Model metadata fields for index listings.
//
// noinspection CssReplaceWithShorthandSafely
.model-list-item-panel {

    $value-separation:  2px;
    $max-columns:       20;
    $template:          minmax(max-content, 1fr);

    @extend .model-list-item;

    gap:                0 2rem;
    padding:            $item-padding;
    padding-bottom:     2 * $item-padding;
    overflow-x:         auto;
    border:             2px solid $fg-color;
    border-radius:      0.5rem;
    background:         lighter($uva-accent-yellow, 95%);

    // Special-case listing when no records are found.
    &.empty {
        margin-top:     0;
        padding-top:    0;
        border:         none;
        background:     inherit;
    }

    // List data items in horizontal columns when there is enough room.
    @media #{$wide-screen} {
        grid-template-columns: repeat($max-columns, $template);
    }

    // Revert to one data item label/value per line with less room.
    @media #{$medium-width} {
        grid-template-columns: [label] minmax(17.5%,auto) [value] 1fr;
    }

    // Each label and value on a separate line on narrow screens.
    @media #{$narrow-screen} {
        grid-template-columns: 1fr;
        padding-bottom: 0;
    }

    @media print {
        padding-bottom: $item-padding;
        overflow-y:     clip;
        break-inside:   avoid;
    }

    //=========================================================================
    // Components
    //=========================================================================

    // Horizontal column labels.
    @media #{$wide-screen} {

        @include grid.column-classes($max-columns, $template);

        > .label { grid-row-start: 1; }
        > .value { grid-row-start: 2; }

        > .label:not(.hierarchy),
        > .label.hierarchy .text {
            border-bottom: 1px solid;
        }

        > .label:not(.hierarchy) {
            align-self:    end;
        }
    }

    @media #{$not-wide-screen} {

        > .value:not(.hierarchy) {
            align-self: center;
        }
    }

    @media print {

        .label,
        .value {
            margin-bottom: 0.25rem;
        }
    }

    .label {

        // Don't show the help icons when displaying the submission record.
        .help-popup {
            display: none;
        }

        // Make data values easier to distinguish from labels in single-column
        // display if they are not already clear.
        @media #{$narrow-screen} {

            .text {
                padding-bottom: $value-separation;
                border-bottom:  2px solid lightgray;
            }

            &.array,
            &.textbox {
                .text {
                    border-bottom: none;
                }
            }
        }
    }

    .value {

        @media #{$narrow-screen} {
            padding-top: $value-separation;
        }

        // Display multi-line fields inside a box.
        // @see BaseDecorator::List#render_pair
        &.list,
        &.textbox {
            @include width-fit-content;
            @include value-box(darkgray);
        }

        // Display fields with multiple values horizontally.
        // @see BaseDecorator::List#render_pair
        &.array {

            display:                flex;
            flex-wrap:              wrap;

            @media #{$not-narrow-screen} {
                flex-direction:     row;
                margin-bottom:      0;
            }

            @media #{$narrow-screen} {

                flex-direction:     column;
                margin-bottom:      0.5rem;
                border-top:         none;

                &:last-of-type {
                    margin-bottom:  0;
                }
            }

            > * {

                @include value-box(blue);

                & {
                    margin-bottom:  0.5rem;
                    padding-top:    0.0625rem;
                    padding-bottom: 0.09375rem;
                    line-height:    1;
                }

                @media #{$not-narrow-screen} {
                    margin-right:   0.5rem;
                }

                @media #{$narrow-screen} {
                    margin-right:   0;
                }
            }
        }

        &.field-Description {
            white-space: pre-wrap;
        }
    }

    // Hierarchical display for data items containing JSON.
    .data-list {

        @extend .model-list;

        $wide-margin:   2rem;
        $medium-margin: 1rem;
        $narrow-margin: 0.5rem;
        $narrow-left:   $narrow-margin;
        $narrow-right:  $narrow-margin * 0.5;

        padding:    $item-padding;

        @media #{$wide-screen} {
            margin: 0 $wide-margin;
        }

        @media #{$medium-width} {
            margin: 0 $medium-margin;
            grid-template-columns: [label] minmax(17.5%,auto) [value] 1fr;
        }

        @media #{$narrow-screen} {
            margin: 0 $narrow-right 0 $narrow-left;
            grid-template-columns: 1fr;
        }

        @if not model.$data-list-border-color == none {
            border:         2px solid model.$data-list-border-color;
            border-radius:  0.5rem;
        }

        // Adjustment for a hierarchical element which is itself a hierarchy.
        .data-list {

            margin-top:         1.5rem;
            margin-left:        -4rem;
            margin-right:       $wide-margin;

            @media #{$medium-width} {
                margin-top:     1.5rem;
                margin-left:    -6rem;
                margin-right:   $medium-margin * 1.25;
            }

            @media #{$narrow-screen} {
                margin-top:     $narrow-margin * 0.5;
                margin-left:    $narrow-margin;
                margin-right:   $narrow-margin;
            }
        }
    }
}

// Metadata in tabular form.
.model-table {

    @include table.grid-table;

    tbody tr:hover > * {

        @include hover-bold;

        $shadow-width:  0.25rem;
        $shadow-offset: table.$gap - $shadow-width;
        $shadow-color:  ghostwhite;

        & {
            background-color: $shadow-color;
            box-shadow:
                -#{$shadow-offset} 0 0 $shadow-width $shadow-color,
                 #{$shadow-offset} 0 0 $shadow-width $shadow-color;
        }

        &:focus {
            z-index: 1; // Raise outline above the following cell's box-shadow.
        }
    }

    td.actions {

        .icon-tray {
            min-width: max-content;
        }

        .icon {

            @include icon.element;

            .icon.show   { @include icon.show;   }
            .icon.edit   { @include icon.edit;   }
            .icon.delete { @include icon.delete; }

        }
    }

    th.actions,
    td.actions {
        @media print {
            display: none;
        }
    }
}

.full-table-link {
    font-size: large;
}

.full-table-link + .model-table {
    margin-top: calc(2 * $flex-gap-y);
}

//=============================================================================
// Item details (show page) support
//=============================================================================

// Metadata label/value pairs on show pages.
.model-details {

    @include model.label-value-pairs;

    //=========================================================================
    // Components
    //=========================================================================

    // Add a top margin except to the first label/value pair.
    .value + .label,
    .value + .label + .value {
        margin-top: model.$list-item-margin-y;
    }
}

// Wrapper for item details which supports a second column of information to
// the right of the details listing.
.model-container {

    display:            flex;

    @media #{$wide-screen} {
        margin-top:     $page-padding-y;
        flex-direction: row;
    }

    @media #{$not-wide-screen} {
        flex-direction: column;
    }

    //=========================================================================
    // Sections
    //=========================================================================

    > * {

        margin: 0 0 $page-padding-y 0;

        &:last-child {
            img {
                max-width: 100%;
            }
        }

        @media #{$wide-screen} {

            flex:               1 1 50%;
            margin-right:       $page-padding-x;

            &:last-child {
                margin-right:   0;
            }
        }

        @media #{$narrow-screen} {

            margin-top:         calc(2 * $page-padding-y);

            &:first-child {
                margin-top:     0;
            }
        }
    }
}

//=============================================================================
// Menu (*_select page) support
//=============================================================================

// @see app/views/layouts/_menu_page.html.erb
.select-menus {

    display:        flex;
    flex-direction: row;
    flex-wrap:      wrap;
    gap:            2rem;
    margin-top:     2rem;
    margin-bottom:  4rem;

    .select-menu {

        display:        flex;
        flex-direction: column;
        gap:            1rem;
        flex:           1 1 auto;

        .select-title {
            margin: 0;
        }

        form.select-entry {
            margin: 0;
        }
    }
}
