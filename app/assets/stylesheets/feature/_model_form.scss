// app/assets/stylesheets/feature/_model_form.scss

@use 'sass:math';

@use 'shared/variables'        as *;
@use 'shared/mixins'           as *;
@use 'shared/controls/buttons' as button;
@use 'shared/controls/grids'   as grid;

@use 'vendor/uppy';

//=============================================================================
// Internal constants
//=============================================================================

$form-gap:        var(--gap);
$form-gap-narrow: calc(#{$form-gap} / 3);

//=============================================================================
// Internal placeholder classes
//=============================================================================

// Template for a panel of radio buttons.
%entry-radio-group {

    display:         flex;
    flex-direction:  row;
    flex-wrap:       wrap;
    justify-content: space-between;

    line-height:     1.5;
    border:          1px solid gray;
    border-radius:   0.25rem;

    @media #{$not-narrow-screen} {
        padding-right: 0.5rem;
    }

    //=========================================================================
    // Elements
    //=========================================================================

    > :not(legend) {
        display:     inline-flex;
        align-items: baseline;
        margin:      0.25rem;
        word-break:  keep-all;
        border:      0.25rem solid transparent;
        flex:        1 1 auto;

        @media #{$medium-width} {
            flex-basis: 25%;
        }

        @media #{$narrow-screen} {
            margin:     0;
            flex-basis: 33%;
        }
    }

    // A label/radio button pair.
    .radio {

        input[type="radio"] {
            margin-right: 0;
        }

        label {

            @include user-select(none);

            padding-left: 0.5rem;

            @media #{$not-wide-screen} {
                padding-left: 0.375rem;
            }
        }

        &:not(.disabled):hover {
            label {
                @include hover-bold;
            }
        }
    }
}

//=============================================================================
// File uploader pages.
//=============================================================================

// Display for the selected filename.
//
// This is hidden until a file has been uploaded and displayUploadedFilename()
// adds the 'complete' class.
//
.uploaded-filename {

    display:        flex;
    flex-direction: row;
    flex-wrap:      wrap;
    margin:         auto 0;
    line-height:    2;
    overflow-x:     auto;

    &:not(.complete) {
        display: none;
    }

    .leader {
        margin-right: 0.25rem;
        word-break:   break-all;
    }

    .filename {
        font-weight: bold;
        word-break:  keep-all;
    }
}

// Control for filtering which entry form fields are displayed.
.field-group {
    @extend %entry-radio-group;
}

// Controls for selecting the workflow state group.
.select-group-panel {

    display:         flex;
    flex-direction:  column;
    margin:          2.75rem 0 0.5rem;
    color:           $control-text;

    // Make up for missing .note-tray element.
    @media #{$narrow-screen} {
        margin-bottom: 2rem;
    }

    // Note preceding the selection controls (screen-reader only).
    > label {
        @include sr-only;
    }

    // Note following the selection controls which moves within a container
    // that can be manipulated as a flex element within the panel.
    > .note-tray {

        display: inline-flex;
        margin:  0.75rem 0 0;

        // Don't allow showGroupNote() to move the text under the button
        // for the handheld form factor.
        @media #{$narrow-screen} {
            display: none;
        }

        .note {

            position:    absolute;
            line-height: 1;
            font-weight: bold;
            flex:        0 1 auto;

            // Don't allow showGroupNote() to move the text under the button
            // for the handheld form factor.
            @media #{$narrow-screen} {
                margin-left: 0 !important;
            }
        }
    }

    .select-group {

        display: grid;
        gap:     0.5rem;

        @media #{$wide-screen} {
            grid-template-columns: repeat(9, 1fr);
        }

        @media #{$medium-width} {
            grid-template-columns: repeat(5, 1fr);
        }

        @media #{$narrow-screen} {
            grid-template-columns: repeat(3, 1fr);
            gap:                   0.25rem;
        }

        .control {

            @include button.control;

            @include user-select(none);

            display:        flex;
            flex-direction: column;
            padding:        0.375rem 0.875rem;
            line-height:    1.375;
            text-align:     center;
            font-size:      medium;
            font-weight:    bold;

            @media #{$narrow-screen} {
                padding:   0.5rem 0;
                font-size: smaller;
            }

            &.current {
                border-width: 3px;
                border-color: inherit;
            }

            &.disabled {
                background: $input-sealed-bg;
                cursor:     default;
            }

            &:not(.disabled):not(.forbidden):hover,
            &:not(.disabled):not(.forbidden):focus {

                color:            inherit;
                background-color: inherit;
                text-decoration:  none;

                // noinspection CssBrowserCompatibilityForProperties
                .label {
                    text-decoration:          underline;
                    text-decoration-skip-ink: none;
                    text-underline-position:  under;
                }

                .count {
                    // TODO: ??? ... .select-group .control
                }
            }

            &.disabled:hover, &.forbidden:hover,
            &.disabled:focus, &.forbidden:focus {
                text-decoration: none;
                box-shadow:      none;
                background:      $input-sealed-bg;
            }

            .label {
                @include user-select(none);
            }
        }
    }
}

// Controls for filtering which records are displayed on the current page of
// the index listing.
.list-filter-panel {

    max-width: inherit;

    > label {
        display:       inline-block;
        margin-bottom: 0.5rem;
    }

    .filter-group {

        @extend %entry-radio-group;

        width:     max-content;
        max-width: inherit;

        @media #{$narrow-screen} {
            width: 100%;
        }

        //=====================================================================
        // Elements
        //=====================================================================

        .prefix {
            @media #{$not-wide-screen} {
                margin-bottom: 0;
                flex-basis:    100%;
            }
        }

        .control {
            // TODO: ??? ... .filter-group .control
        }
    }
}

// Debug-only control for enabling state groups.
.filter-options-panel {

    @extend %entry-radio-group;

    margin:     $page-padding 0;
    padding:    0.25rem;
    background: $debug-bg;

    justify-content: flex-start;

    @media #{$medium-width} {
        margin-top:    1.5rem;
        margin-bottom: 1.5rem;
    }

    @media #{$narrow-screen} {
        margin-top:    1.5rem;
        margin-left:   0.125rem;
        margin-right:  0.25rem;
    }
}

// Control for identifying the source EMMA entry for new submissions which are
// derived from member repository content.
// @see UploadDecorator#parent_entry_select
.parent-entry-select {

    display:         flex;
    padding:         1rem;
    background:      $root-bg-color;
    border:          0.5rem solid $uva-accent-orange;
    border-radius:   0.75rem;
    flex-wrap:       wrap;
    align-items:     center;
    gap:             1rem;
    justify-content: space-around;

    //=========================================================================
    // Elements
    //=========================================================================

    $search-clear-inset: -1.5rem;

    .search-title {
        font-size: large;
        flex:      1 1 auto;
    }

    .search-input {

        line-height: 1.5;
        flex:        1 1 auto;

        @media #{$narrow-screen} {
            margin-bottom: 0.5rem;
            line-height:   2;
            flex:          1 1 100%;
        }
    }

    .search-clear {
        display: none;
    }

    .search-button,
    .search-cancel {

        @include button.control;

        flex: 0 0 auto;

        &:focus {
            @include focus;
        }
    }
}

// Form containing and metadata field inputs and file upload controls.
.model-form,
.bulk-op-form {

    display: grid;

    grid-template-columns:
        [submit] auto [cancel] auto [file] auto [selected] 1fr;
    gap: $form-gap;

    @media #{$narrow-screen} {
        margin-right: 0.25rem;
        gap:          $form-gap-narrow;
    }

    // Uploader for a new EMMA entry.
    &.new {}

    // Uploader for an existing EMMA entry.
    &.edit {}

    //=========================================================================
    // Elements - hidden
    //=========================================================================

    // Invisible element generated by #form_with only for the edit form.
    input[type="hidden"][name="_method"] { }

    // Invisible element generated by #form_with.
    input[type="hidden"][name="authenticity_token"] { }

    // Invisible data elements.
    .hidden-field {

        @include hidden;

        // Invisible file data holder.
        &[name="upload[file]"]#upload_file_data { }         // TODO: remove after upload -> entry
        &[name="entry[file]"]#entry_file_data { }

        // Invisible EMMA data holder.
        &[name="upload[emma_data]"]#upload_emma_data { }    // TODO: remove after upload -> entry
        &[name="entry[emma_data]"]#entry_emma_data { }
    }

    //=========================================================================
    // Elements - first grid row (if not using button tray)
    //=========================================================================

    %grid-control {

        @include grid.row(1);

        height:     max-content;
        max-height: 2.25rem;
    }

    // ERB-provided submit to '/entry/create' or '/entry/update'.
    .submit-button { // input[type="submit"].uppy-FileInput-btn
        @include button.control;
        @extend %grid-control;
    }

    // ERB-provided cancel (back to '/entry/new' or '/entry/edit').
    .cancel-button { // button[type="cancel"].uppy-FileInput-btn
        @include button.control;
        @extend %grid-control;
    }

    // ERB-provided file chooser.
    // JavaScript will hide this in favor of the Uppy-supplied button.
    input[type="file"][name="upload[file]"]#upload_file { } // TODO: remove after upload -> entry
    input[type="file"][name="entry[file]"]#entry_file { }

    // Appended to .model-form and moved into place via model-form.js.
    .uppy-FileInput-container {
        @extend %grid-control;
    }

    // Display for the selected filename moved into place via model-form.js.
    .uploaded-filename {

        @include grid.row(1);

        line-height: 1.5;

        @media #{$narrow-screen} {
            @include grid.row(2);
            @include grid.column-span;
        }
    }

    // Only for .model-form.delete (which wraps the "Delete" button).
    .button_to {
        @include grid.row(1);
    }

    //=========================================================================
    // Elements - first grid row (if using button tray)
    //=========================================================================

    .button-tray {

        @include grid.row(1);
        @include grid.column-span;

        display:        flex;
        flex-direction: row;
        flex-wrap:      wrap;
        max-width:      inherit;
        gap:            $form-gap;

        @media #{$wide-screen} {
            width: max-content;
        }

        //=====================================================================
        // Components
        //=====================================================================

        // noinspection CssReplaceWithShorthandSafely
        %tray-control {
            flex:   0 1 auto;
            margin: 0;
        }

        .submit-button {
            @include button.control;
            @extend %tray-control;
        }

        .cancel-button {
            @include button.control;
            @extend %tray-control;
        }

        // Appended to .button-tray and moved into place via model-form.js.
        .uppy-FileInput-container {
            @extend %tray-control;
        }

        // Display for the selected filename moved into place via
        // model-form.js.
        .uploaded-filename {

            @extend %tray-control;

            margin-right: 0;
            line-height:  2.15;

            @media #{$wide-screen} {
                max-width: 75vw;
            }

            @media #{$medium-width} {
                max-width: 92.5vw;
            }

            @media #{$narrow-screen} {
                .filename {
                    max-width: 85vw;
                }
            }
        }
    }

    //=========================================================================
    // Elements - second grid row (if not using .controls container)
    //=========================================================================

    // Control for filtering which entry form fields are displayed.
    .field-group {

        @include grid.column-span;
        @include control-shadow;

        position:   sticky;
        top:        1rem;
        background: $root-bg-color;

        // noinspection CssReplaceWithShorthandSafely
        @media #{$narrow-screen} {
            padding:       0.25rem;
            padding-right: 0.5rem;
            line-height:   1.25;
        }
    }

    .parent-entry-select {

        @include grid.column-span;

        // TODO: ??? ... .bulk-op-form .parent-entry-select
    }

    //=========================================================================
    // Elements - first grid row (if using .controls container)
    //=========================================================================

    .controls {

        @include grid.row(1);
        @include grid.column-span;

        display:       grid;
        position:      sticky;
        top:           calc(2 * #{$form-gap});
        margin-bottom: calc(2 * #{$form-gap});
        background:    $root-bg-color;
        box-shadow:    0 -0.5rem 0      1.0rem $root-bg-color,
                       0  0.5rem 0.5rem 0.5rem $root-bg-color;
        z-index:       $z-controls;

        grid-template-columns: 1fr;
        row-gap:               calc(2 * #{$form-gap});
        column-gap:            $form-gap;

        @media #{$narrow-screen} {
            top:           calc(2 * #{$form-gap-narrow});
            margin-bottom: calc(2 * #{$form-gap-narrow});
            row-gap:       calc(2 * #{$form-gap-narrow});
            column-gap:    $form-gap-narrow;
        }
    }

    //=========================================================================
    // Elements - penultimate grid row
    //=========================================================================

    // Container for metadata field inputs.
    .form-fields {

        @include grid.column-span;

        margin-top: calc(2 * #{$form-gap});
        z-index:    $z-visible; // NOTE: Needed for Firefox.
    }

    //=========================================================================
    // Elements - final grid row
    //=========================================================================

    // Convenience duplicates of submit and cancel buttons below the set of
    // fields.
    .form-fields + .controls {

        position:      unset;
        margin-top:    $form-gap;
        margin-bottom: 0;
        grid-row:      unset;

        > *:not(.button-tray) {
            display: none;
        }

        .button-tray > * {
            margin-bottom: 0;
        }
    }

    //=========================================================================
    // Properties
    //=========================================================================

    // Add to a button to accent it as the next best action to perform.
    .best-choice:not(:hover) {

        box-shadow: 0 0 0.5rem 0.25rem $button-accent;

        &:focus {
            outline: 1px solid gray;
        }
    }
}

.bulk-op-form {

    gap: $form-gap;

    &.delete {
        grid-template-columns: repeat(2, 1fr);
    }

    .line,
    .form-controls {
        @include grid.column-span;
        @include grid.column-gap(0.5rem);
    }

    .line {
        display:     flex;
        align-items: flex-start;
    }

    .form-controls {

        display: grid;

        @media #{$narrow-screen} {
            margin-top: 1.5rem;
        }
    }

    label {
        flex: 0 1 auto;
    }

    input[type="text"],
    input[type="number"] {

        flex: 0 1 33%;

        @media #{$narrow-screen} {
            flex: 1 1 auto;
        }
    }

    .uppy-FileInput-container {

        // In modern browsers, clicking on the <label> associated with
        // an <input type="file"> behaves the same as clicking the
        // input itself.
        label {

            @include button.control;

            height: max-content;
        }

        // Remove the input from view (can't do "display: none" or that
        // would remove the item from the form).
        input[type="file"].control-button,
        input[type="file"].uppy-FileInput-btn {
            @include sr-only;
        }
    }
}

// The element which contains .model-form.
.form-container {

    // If true then the area where the status bar will appear during file
    // upload is always present, effectively vertical white space except when
    // visible. This prevents the display from expanding and collapsing during
    // the time that Uppy displays the status bar.

    $status-bar-is-white-space: true;

    display:       grid;
    margin-top:    $page-padding;
    margin-bottom: 1.5rem;

    @if $status-bar-is-white-space {
        margin-top: 0;
    }

    @media #{$wide-screen} {
        width: 50vw;
    }

    grid-template-columns: 1fr;
    gap:                   1rem;

    //=========================================================================
    // Elements
    //=========================================================================

    // Form containing and metadata field inputs and file upload controls.
    .model-form,
    .bulk-op-form {
        width:      inherit;
        max-width:  95vw;
        margin-top: 0;
        z-index:    $z-visible;
    }

    // Inserted by Uppy via model-form.js if FEATURES.status_bar is true.
    .uppy-ProgressBar,
    .uppy-StatusBar {

        @include grid.row(1);
        @include grid.column-span;

        z-index: $z-uppy-progress;

        @if $status-bar-is-white-space {

            min-height: 3rem;

            &:before {
                background-color: transparent;
            }

            // Before upload is engaged.
            &.is-waiting {
                .uppy-StatusBar-actions {
                    background-color: transparent;
                }
            }

            // Back to "white space" after uploading is finished.
            &.is-complete {
                visibility: hidden;
            }
        }
    }

    // Inserted by Uppy via model-form.js.
    .uppy-Informer {

        @include grid.row(1);
        @include grid.column-span;

        display:         inline-flex;
        justify-content: center;
        align-items:     center;
        position:        unset;
        z-index:         $z-uppy-informer;

        &[aria-hidden="true"] {
            z-index: $z-hidden;
        }

        p {
            font-weight: bold;
            word-break:  break-word;
            box-shadow:  0 0 0.5rem 0.25rem $root-bg-color;
        }
    }
}

// Area filled by the client with on-going bulk operation results.
//
// @see file:app/assets/javascripts/feature/model-form.js *addBulkOpResult*
//
.bulk-op-results {

    @include panel;
    @include block-shadow;

    padding:          1rem;
    background-color: ghostwhite;
    border-color:     darkgray;

    .line {

        display:     grid;
        line-height: 1.5rem;

        $lbl-col: minmax(auto, 0.05fr);

        grid-template-columns:
            [date_lbl] 0        [date_val] minmax(max-content, 0.25fr)
            [time_lbl] $lbl-col [time_val] minmax(max-content, 0.10fr)
            [  id_lbl] $lbl-col [  id_val] minmax(max-content, 0.10fr)
            [ sid_lbl] $lbl-col [ sid_val] minmax(max-content, 0.20fr)
            [size_lbl] $lbl-col [size_val] minmax(max-content, 0.15fr)
            [file_lbl] $lbl-col [file_val] 1fr;

        > * {

            margin-left: 0.25rem;

            &:first-child {
                margin-left: 0;
            }
        }

        .label {

            font-weight: bold;

            &.date {

                @include sr-only;

                position: unset !important;
            }
        }

        .value {
            &.file {
                overflow-wrap: anywhere;
            }
        }
    }
}

// Label visible to note that old bulk operation results are being displayed.
//
// @see file:app/assets/javascripts/feature/model-form.js *bulkOpResultsLabel*
//
.bulk-op-results-label {
    font-size:     x-large;
    margin-bottom: 0.5rem;
}

// The element which contains bulk operation forms.
.form-container.bulk {

    $bulk-vertical-adjust: 1.5rem;

    // No status bar for bulk upload so extra white space is needed above.
    .bulk-op-form {

        margin-top: 2rem;

        @media #{$wide-screen} {
            margin-bottom: -$bulk-vertical-adjust;
        }
    }

    & + .bulk-op-results-label,
    & + .bulk-op-results {
        margin-top: 2 * $bulk-vertical-adjust;
    }
}
