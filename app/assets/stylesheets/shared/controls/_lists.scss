// app/assets/stylesheets/shared/controls/_lists.scss
//
// Definitions supporting lists and list elements.

@use "shared/variables"      as v;
@use "shared/controls/grids" as grid;

//=============================================================================
// List definitions.
//=============================================================================

/// Grid-based tabular list.
///
/// @param {Numeric} $columns
/// @param {Numeric} $y-gap
/// @param {Numeric} $x-gap
/// @param {String}  $template
///
/// NOTE: A row separation ($y-gap) other than zero can be problematic because
/// browsers seem not to be able to properly calculate the true height of the
/// overall grid.  Increasing the margin below grid cell elements does not seem
/// to have this problem.
///
@mixin tabular($columns, $y-gap: 0, $x-gap: 2%, $template: false) {

    @include grid.columns($template, $columns);

    & {
        display:   grid;
        gap:       $y-gap $x-gap;
        max-width: inherit;
    }

    //=========================================================================
    // Components
    //=========================================================================

    // A heading within the grid that spans all columns.
    .list-heading {

        @include grid.column-span;

        & {
            margin: v.$page-padding-y 0;
        }

        &:first-child {

            margin-top:    0;
            margin-bottom: v.$page-padding-y;

            &.empty {
                margin-bottom: 0;
            }
        }
    }
}

/// A two-column list where each row is a label followed by a value.
///
@mixin columns-2 {

    @include tabular(2);

    & {
        grid-template-columns: [label] auto [value] 1fr;
    }
}

/// A three-column list where each row is a number, a label, and a value.
///
@mixin columns-3 {

    @include tabular(3);

    & {
        grid-template-columns:
            [number] minmax(1%, max-content) [label] auto [value] 1fr;
    }
}
