// app/assets/stylesheets/shared/feature/_overlay.scss
//
// Shared definitions supporting `feature/_overlay.scss`.

@use 'shared/variables' as v;
@use 'shared/functions' as f;

//=============================================================================
// Definitions
//=============================================================================

$default-bg:     #00000008; // Effectively dims the screen a little.
$default-height: 100vh;     // Enough to cover the viewport.

//=============================================================================
// Basic overlay mixins
//=============================================================================

/// Make an overlay which covers the screen.
///
/// @param {Numeric} $bg              Overlay background.
/// @param {Numeric} $height          At least enough to cover the viewport
///
@mixin fill($bg: $default-bg, $height: $default-height) {

    position:   absolute;
    top:        0;
    left:       0;
    display:    block;
    width:      100%;
    height:     $height;
    min-height: $default-height;
    background: $bg;
}

/// Make an overlay which covers the screen when the ".visible" class is added
/// to the element.
///
/// @param {Numeric} $bg              Overlay background.
/// @param {Numeric} $height          At least enough to cover the viewport
///
@mixin fill-hidden($bg: $default-bg, $height: $default-height) {

    @include fill($bg, $height);

    // Add the "visible" class to the element to make the overlay appear.
    &.visible {
        z-index: v.$z-overlay;
        opacity: 1;
    }

    // Without the addition of the "visible" class, the overlay remains hidden.
    &:not(.visible) {
        z-index: v.$z-hidden;
        opacity: 0;
    }

}

/// Make a dynamic overlay.
///
/// @param {Numeric} $duration        Speed of overlay appearance.
/// @param {Numeric} $delay           Start of overlay appearance.
/// @param {Numeric} $bg              Overlay background.
///
@mixin fill-animated($duration: 0.5s, $delay: 0.75s, $bg: $default-bg) {

    @include fill-hidden($bg);

    transition:
        opacity    $duration ease-in $delay,
        background $duration ease-in $delay;

    // Wrapper for overlay features that should remain in place on the screen.
    .content {
        position: sticky;
        display:  block;
    }
}

//=============================================================================
// Content overlay mixins
//=============================================================================

/// Make a dynamic overlay featuring an image.
///
/// @param {String}  $img-path        Path to image file.
/// @param {Numeric} $img-width       Width of image element.
/// @param {Numeric} $img-height      Height of image element.
/// @param {Numeric} $img-y-pos       Distance of image from top of screen.
///
@mixin image(
    $img-path,
    $img-width:  5vw,
    $img-height: 5vh,
    $img-y-pos:  50vh
) {

    @include fill-animated;

    display:         flex;
    justify-content: center;

    &.visible {
        height: 1000%;
    }

    .content {
        top:                 $img-y-pos;
        width:               $img-width;
        height:              $img-height;
        margin:              0;
        padding:             0;
        background-image:    url($img-path);
        background-repeat:   no-repeat;
        background-size:     contain;
        background-position: center;
    }
}

/// Make a dynamic overlay featuring text.
///
/// @param {Color}   $txt-bg          Color flare surrounding text.
/// @param {Numeric} $txt-width       Width of text element.
/// @param {Numeric} $txt-height      Height of text element.
/// @param {Numeric} $txt-y-pos       Distance of text from top of screen.
///
@mixin text(
    $txt-bg:     f.lighter(v.$uva-blue, 75%),
    $txt-width:  max-content,
    $txt-height: max-content,
    $txt-y-pos:  50vh
) {

    @include fill-animated;

    .content {
        top:           $txt-y-pos;
        width:         $txt-width;
        height:        $txt-height;
        margin:        0 auto;
        padding:       1rem;
        font-size:     xx-large;
        color:         white;
        background:    $txt-bg;
        border:        1px solid $txt-bg;
        border-radius: 50%;
        box-shadow:    0 0 3rem 3rem $txt-bg;
    }
}
