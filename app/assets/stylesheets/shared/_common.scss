// app/assets/stylesheets/shared/_common.scss

// @use 'shared/variables'; // TODO: SASS 4.0

//=============================================================================
// Placeholder classes
//=============================================================================

// Make focus outline more easily seen.
//
// noinspection SassScssResolvedByNameOnly
%focus {
    outline:        2px solid $focus-accent;
    outline-offset: 2px;
}

// Make an actionable item (e.g. <a>) appear non-functional.
// NOTE: The link should also have attribute 'tabindex="-1"'.
%disabled {
    text-decoration: none;
    &:active { pointer-events:  none; }
    &:focus  { outline:         none; }
    &:hover  { text-decoration: none; }
}

// Counteract the effects of .sr-only (except for position and border).
%not-sr-only {
    width:       unset;
    height:      unset;
    padding:     unset;
    margin:      unset;
    white-space: unset;
    overflow:    unset;
    clip:        unset;
}

// An element that spans the entire width of the display.
//
// noinspection SassScssResolvedByNameOnly
%banner {

    display:          flex;
    flex-direction:   row;
    justify-content:  space-between;
    margin:           0;
    padding:          $page-padding-y $page-padding-x;
    color:            white;
    background-color: $header-bg;

    @media #{$browser-ie} {
        padding: $ie-page-padding-y $ie-page-padding-x;
    }

    * {
        margin: auto 0;
        color:  white;
    }

    a {

        text-decoration: none;

        &:hover {
            text-decoration: underline;
        }
    }

    .disabled {
        color: lightgray;
    }
}

// A panel for highlighting content.
//
// noinspection SassScssResolvedByNameOnly
%panel {
    display:          block;
    padding:          0.5rem;
    background-color: $panel-bg;
    border:           2px solid $panel-accent;
    border-radius:    0.625rem;
}

// A grouping of related controls into a single element.
%control-group {

    @extend %panel;

    display:     inline-flex;
    padding:     0.25rem 0.5rem;
    align-items: baseline;

    > * {
        display:     inline-flex;
        flex:        1 1 auto;
        align-items: baseline;
    }
}

// Highlight button on hover.
//
// noinspection SassScssResolvedByNameOnly
%button {

    cursor: pointer;

    &:focus {
        text-decoration: underline;
    }

    &:hover {
        text-decoration: underline;
        box-shadow:      0 0 0.5rem 0.25rem $uva-accent-orange;
    }

    &:focus:hover {
        outline-color:   transparent;
    }
}

// Style like a button.
//
// noinspection SassScssResolvedByNameOnly
%control-button {

    @extend %button;

    display:          block;
    margin:           auto 0;
    padding:          2px 6px;
    line-height:      1.125;
    text-decoration:  none;
    font-size:        large;
    border-radius:    6px;
}

//=============================================================================
// Common settings.
//=============================================================================

// Make focus outline more easily seen.
a:focus,
input:focus,
button:focus,
select:focus {
    @extend %focus;
}

// Avoid the additional interior dotted outline in Firefox.
::-moz-focus-inner {
    border: 0;
}

//=============================================================================
// Classes for composition
//=============================================================================

// Include to remove an element from the display.
.hidden {
    display: none !important;
}

// Include to hide the contents of an element while maintaining the space it
// occupies on the display.
.invisible {
    visibility: hidden !important;
}

// Include to "de-activate" an active element like a button or link.
.disabled {
    @extend %disabled;
    cursor: default;
}

// Include to "de-activate" an active element because it is an invalid choice.
.forbidden {
    @extend %disabled;
    cursor: not-allowed;
}

// Include to make an element only visible to screen readers.
.sr-only {
    position: absolute;
    width:    1px;
    height:   1px;
    padding:  0;
    margin:   -1px;
    overflow: hidden;
    clip:     rect(0 0 0 0);
    border:   0;
    // Satisfy accessibility checks for contrast:
    color:            black;
    background-color: white;
}

// Include as the first class of an element which should not inherit the
// default styling imposed by the browser (particularly for h1-h6 elements
// being used to define document structure but intended to be styled by
// supplied CSS class(es).
.clear-default-styling {
    margin:         0;
    margin-block:   0;
    margin-inline:  0;
    padding:        0;
    padding-block:  0;
    padding-inline: 0;
    font-size:      inherit;
    font-weight:    inherit;
}

//=============================================================================
// Generic elements
//=============================================================================

// @see LayoutHelper#toggle_button
// noinspection SassScssResolvedByNameOnly
.toggle {

    @extend %control-button;

    background-color: $panel-bg;
}

// Controlled by a .toggle button.
.toggle-panel {
    &:not(.open) {
        display: none;
    }
}

// Holds title text and a .toggle button.
.toggle-panel-title {

    display:        inline-flex;
    flex-direction: row;

    // noinspection SassScssResolvedByNameOnly
    .toggle {

        margin-left: $gap-x;

        @media #{$browser-ie} {
            margin-left: $ie-gap-x;
        }
    }
}
