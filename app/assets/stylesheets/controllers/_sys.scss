// app/assets/stylesheets/controllers/_sys.scss

@use "shared/variables"        as *;
@use "shared/controls/buttons" as button;
@use "shared/controls/grids"   as grid;

//=============================================================================
// Internal mixins
//=============================================================================

@mixin fill-screen {
    @media #{$wide-screen} {
        min-height: 50vh;
    }
}

@mixin clamp-width {
    @media #{$wide-screen} {
        max-width: 50vw;
    }
}

@mixin constrain-column {
    @media #{$wide-screen} {
        overflow-x:    hidden;
        text-overflow: ellipsis;
    }
}

@mixin table-border {
    & {
        padding:       0.75rem;
        border:        0.25rem solid lightgray;
        border-radius: 0.5rem;
    }
}

@mixin button-row {

    @include button.basic;
    @include grid.column-span;

    & {
        margin-top:    1rem;
        margin-bottom: 1rem;
        width:         min-content;
    }
}

// @see SysHelper::Common#dd_value
@mixin value-inspection {
    & {
        word-break:  break-all;
        white-space: pre-wrap;
    }
}

//=============================================================================
// Any system information page
//=============================================================================

body.sys {

    //=========================================================================
    // Elements
    //=========================================================================

    h2 {
        margin-top: calc(2.5 * $page-padding-y);
    }

    p {
        line-height: 1.25;
    }

    .error,
    .invalid {
        color:       $error-fg;
        font-weight: bold;
    }

    .scroll-to-top-target {
        height:      0;
    }

    // Terminal-like output for shell commands.
    .output {

        @include fill-screen;

        & {
            width:       max-content;
            line-height: 1.25;
            font-family: monospace;
            white-space: pre;
            font-size:   larger;
        }
    }

    //=========================================================================
    // Components
    //=========================================================================

    // Page actions as content.
    div.page-actions {

        @include fill-screen;

        & {
            display:               grid;
            grid-template-columns: [link] auto [note] 1fr;
            align-content:         start;
            align-items:           baseline;
            gap:                   1rem;
            margin-top:            1rem;
            margin-bottom:         2rem;
            line-height:           1.5;
            font-size:             large;
        }

        .page-action {

            display: contents;

            .link {
                font-size: larger;
            }

            .note {
                // TODO: ?
            }
        }
    }

    // Page actions as a "menu" of links.
    ul.page-actions {

        @include clamp-width;

        & {
            margin-top: 3rem;
            padding:    0.5rem 0 0;
            border-top: 2px solid gray;
        }

        .page-action {

            .link {
                // TODO: ?
            }

            .note {
                display: none;
            }
        }
    }

    // Grid table
    .sys-table {

        @include table-border;

        & {
            display:       grid;
            justify-items: start;
            gap:           0.5rem 1rem;
            grid-template-columns: max-content 1fr;
        }

        $max-cols:     10;
        $basic-column: max-content;
        $final-column: 1fr;

        &.columns-1 {
            grid-template-columns: $final-column;
        }
        @for $n from 2 through $max-cols {
            &.columns-#{$n} {
                grid-template-columns:
                    repeat(($n - 1), $basic-column)
                    $final-column;
            }
        }

        //=====================================================================
        // Components
        //=====================================================================

        thead, tbody, tr {
            display: contents;
        }

        thead {

            th {
                margin-bottom: 0.25rem;
                border-bottom: 0.125rem solid;
            }
        }

        tbody {

            th {
                grid-column: 1;
            }

            td {

                max-height: 50vh;
                overflow-y: auto;

                .value {
                    @include value-inspection;
                }
            }
        }

        //=====================================================================
        // Variations
        //=====================================================================

        &.config-table {
            td {
                font-family: monospace;
                font-size:   larger;
                white-space: pre;
            }
        }

        &.logger-table {
            grid-template-columns:
                [progname]  minmax(max-content, 0.25fr)
                [class]     minmax(max-content, 0.25fr)
                [level]     minmax(max-content, 0.125fr)
                [value]     1fr;
        }

        &.middleware-table {
            grid-template-columns:
                [name]      max-content
                [object_id] max-content
                [args]      1fr
                [block]     1fr;
        }
    }

    // Key-value pairs
    .pairs {

        display: grid;
        gap:     0.375rem 1rem;

        grid-template-columns: auto 1fr;

        .blank {
            color: gray;
        }

        .present {
            box-shadow: 0 0 1px white, 0 0 2px gray;
        }

        dt {

            margin:         0;
            padding:        0.25rem;
            font-weight:    bold;

            &.present {
                background: linen;
            }
        }

        dd {

            margin:  0;
            padding: 0.25rem;

            &:not(:has(img)) {

                @include value-inspection;

                & {
                    max-height: 5.5rem;
                    max-width:  max-content;
                    overflow:   auto;
                }
            }

            &:has(img) {
                min-height: 300px; // Matomo graphs always have height of 290.
                min-width:  max-content;
            }

            .value:has(img) {
                padding:             1rem 0;
                background-image:    url("loading-balls.gif");
                background-repeat:   no-repeat;
                background-position: left;
            }
        }
    }

    // For the "/sys/analytics" report graphs.
    .pairs.analytics-reports {

        gap: 1.5rem 1.25rem;

        .button {

            @include button.basic;

            & {
                display: inline-block;
                padding: 1px 3px;
            }
        }

        .action-name {
            margin-top:     0.75rem;
            padding-bottom: 1px;
            border-bottom:  2px solid gray;
        }

        div.action-description {

            max-height: 12.5rem;
            overflow-y: auto;

            > :first-child {
                margin-top: 0;
            }

            > :last-child {
                margin-bottom: 0;
            }
        }

        dt {
            padding-left:  0.5rem;
            padding-right: 0.5rem;
        }
    }

}

//=============================================================================
// Settings page
//=============================================================================

body.sys.settings {

    $show-nil: false;

    p {
        @include clamp-width;
    }

    .field-container {

        @include table-border;
        @include clamp-width;

        & {
            display:     grid;
            align-items: baseline;
            gap:         0.375rem 0.75rem;
            grid-template-columns:
                [origin] max-content
                [label]  0.5fr
                [check1] min-content [label1] 0.1875fr
                [check2] min-content [label2] 0.1875fr;
        }

        button {
            @include button-row;
        }

        .fields {

            display: contents;

            .line {

                @include constrain-column;

                & {
                    font-size:   large;
                    font-weight: bolder;
                }

                &.from-env {
                    // TODO: ?
                }

                &.from-cred {
                    // TODO: ?
                }

                &.from-yaml {
                    // TODO: ?
                }

                &.from-const {
                    color: brown;
                }

                &.from-other {
                    color: maroon;
                }

                &.missing {
                    color: gray;
                }
            }

            .nil {
                color: $uva-text-gray;
            }

            .spacer {

                @include grid.column-span;

                & {
                    height: 1rem;
                }
            }

            .origin {

                margin-bottom:  auto;
                padding:        0 0.25rem;
                text-align:     center;
                font-variant:   small-caps;
                color:          white;
                background:     black;

                &.from-env   { background: green; }
                &.from-cred  { background: violet; }
                &.from-yaml  { visibility: hidden; }
                &.from-const { visibility: hidden; }
                &.from-other { background: maroon; }
            }

            @if not $show-nil {
                .nil, .spacer {
                    display: none;
                }
                *:not(.nil):not(.spacer) {
                    & + .spacer {
                        display: revert;
                    }
                    & + .nil + .nil + .spacer {
                        display: revert;
                    }
                    & + .nil + .nil + .nil + .nil + .spacer {
                        display: revert;
                    }
                }
            }
        }
    }

    .field-container.form {

        padding:      1.25rem;
        border-color: gray;

        grid-template-columns:
            [origin] max-content
            [label]  max-content
            [radio1] min-content [label1] 0.1875fr
            [radio2] min-content [label2] 0.1875fr;

        @media #{$wide-screen} {
            width: max-content;
        }

        .line {
            margin-right: 1.25rem;
        }

        [type="submit"] {

            @include button-row;

            & {
                margin-top:    1.25rem;
                margin-bottom: 0.25rem;
                justify-self:  end;
            }
        }
    }

    .field-container.list {

        padding: 0.75rem;

        grid-template-columns: [origin] max-content [label] 0.33fr [value] 1fr;

        @media #{$wide-screen} {
            max-width: 75vw;
        }

        .fields {

            .value.text {

                @include constrain-column;

                &.literal {
                    font-family: monospace;
                    font-size:   larger;
                    font-weight: bold;
                }
            }

            .value.hierarchy {

                display: grid;
                gap:     0.5rem;
                padding: 0.25rem;
                border:  1px solid gray;
                grid-template-columns: auto 1fr;

                .name {
                    font-weight: bold;
                }

                .value::before {
                    content: "= ";
                }

                > .value:has(.value) {
                    display: contents;
                    &::before { content: ": "; }
                }
            }
        }
    }
}
