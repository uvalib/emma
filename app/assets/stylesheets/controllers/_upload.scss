// app/assets/stylesheets/controllers/_upload.scss

// @use 'feature/model';  // TODO: SASS 4.0
// @use 'feature/search'; // TODO: SASS 4.0

//=============================================================================
// Upload index page
//=============================================================================

$upload-padding:   0.5rem;
$upload-entry-gap: 2rem;

// Upload entry fields for index listings.
// noinspection SassScssResolvedByNameOnly, CssReplaceWithShorthandSafely
.upload-list-entry {

    $data-list-border-color: none;

    @extend .item-list-entry;

    padding:        $upload-padding;
    padding-bottom: 2 * $upload-padding;
    border:         2px solid black;
    border-radius:  0.5rem;
    background:     lighter($uva-accent-yellow, 95%);

    gap: 0 2rem;

    // Special-case listing when no records are found.
    &.empty {
        margin-top:  0;
        padding-top: 0;
        border:      none;
        background:  inherit;
    }

    // List data items in horizontal columns when there is enough room,
    // followed by a hierarchical rendering of :file_data, followed by a
    // hierarchical rendering of :emma_data.
    @media #{$wide-screen} {

        grid-template-columns: repeat(9, auto);

        > .label                { grid-row-start: 1; }
        > .value                { grid-row-start: 2; }
        > .label.field-FileData { grid-row-start: 3; }
        > .value.field-FileData { grid-row-start: 4; }
        > .label.field-EmmaData { grid-row-start: 5; }
        > .value.field-EmmaData { grid-row-start: 6; }
    }

    // Revert to one data item label/value per line with less room.
    @media #{$medium-width} {
        grid-template-columns: [label] minmax(10%,auto) [value] 1fr;
    }

    // Each label and value on a separate line on narrow screens.
    @media #{$narrow-screen} {
        grid-template-columns: 1fr;
    }

    //=========================================================================
    // Components
    //=========================================================================

    // Ensure that the label and value both span the grid in all screen widths
    // for the hierarchical data values.
    .field-FileData,
    .field-EmmaData {

        @include grid-column-span;

        margin: (3 * $upload-padding) 0;

        &.label {
            margin-top:  2 * $upload-padding;
            padding-top: 2 * $upload-padding;
            border-top:  1px solid black;
        }

        &.value {
            margin-top: 0;
        }
    }

    // Don't show the help icons when displaying the upload record.
    .label {
        .help-popup {
            display: none;
        }
    }

    // If hierarchical areas don't have a border then they look better if
    // they're tightened up.
    @if $data-list-border-color == none {

        .value.field-FileData {
            margin-bottom: -1.5rem;
        }

        .value.field-EmmaData {
            margin-bottom: 0;
        }
    }

    // Display multi-line fields inside a box.
    // @see ModelHelper#render_pair
    .value.textbox {

        @include width-fit-content;

        padding:       0 0.25rem;
        white-space:   pre-wrap;
        border:        1px solid darkgray;
        border-radius: 0.125rem;
    }

    // Display fields with multiple values horizontally.
    // @see ModelHelper#render_pair
    .value.array {

        display:        flex;
        flex-direction: row;
        flex-wrap:      wrap;
        margin-bottom:  0;

        @media #{$narrow-screen} {

            flex-direction: column;
            margin-bottom:  0.5rem;

            &:last-of-type {
                margin-bottom: 0;
            }
        }

        > * {
            margin-right:  0.5rem;
            margin-bottom: 0.5rem;
            padding:       0 0.25rem;
            padding-top:   0.0625rem;
            border:        1px solid blue;
            border-radius: 0.125rem;
        }
    }

    // Hierarchical display for data items containing JSON.
    .data-list {

        @extend .item-list;

        $wide-margin:   2rem;
        $medium-margin: 1rem;
        $narrow-margin: 0.5rem;

        margin:  0 $wide-margin;
        padding: $upload-padding;

        @media #{$medium-width} {
            margin: 0 $medium-margin;
        }

        @media #{$narrow-screen} {

            margin: 0 $narrow-margin;

            grid-template-columns: 1fr;
        }

        @if not $data-list-border-color == none {
            border:         2px solid $data-list-border-color;
            border-radius:  0.5rem;
        }

        // Adjustment for a hierarchical element which is itself a hierarchy.
        .data-list {

            margin-top:   1.75rem;
            margin-left:  -4rem;
            margin-right: $wide-margin;

            @media #{$medium-width} {
                margin-right: $medium-margin * 1.25;
            }

            @media #{$narrow-screen} {
                margin-top:   $narrow-margin / 2;
                margin-left:  $narrow-margin;
                margin-right: $narrow-margin;
            }
        }
    }

    //=========================================================================
    // Other
    //=========================================================================

    .invalid {
        color:  $error-fg;
        cursor: help;
    }
}

// Zero or more .upload-list-entry elements.
// noinspection SassScssResolvedByNameOnly
.upload-list {

    @extend .item-list;

    @include grid-row-gap($upload-entry-gap);

    //.applied-search-terms,
    .pagination-top {
        margin-bottom: $upload-entry-gap / 2;
    }

    .number {

        padding-top: $upload-padding * 0.75;

        @media #{$narrow-screen} {
            margin-left:  -0.25rem;
            margin-right: 0.25rem;
        }
    }
}

//=============================================================================
// Upload show page
//=============================================================================

// Upload entry fields.
.upload-details {
    @extend .upload-list-entry; // INSTEAD OF @extend .item-details;
}

// Container for an .upload-details.
.upload-container {

    @extend .item-container;

    > .cover-image {
        display: none;
    }
}

//=============================================================================
// Upload new/edit/delete pages
//=============================================================================

form.select-entry {

    margin: 3rem 0;

    // noinspection SassScssResolvedByNameOnly
    select {

        @extend %control-shadow;

        max-width:     100%;
        padding:       2px;
        font-size:     large;
        background:    lighter($focus-accent, 90%);
        border:        1px solid #14457f;
        border-radius: 0.125rem;

        &:focus:hover {
            outline-color: transparent;
        }

        option:first-of-type {
            //display: none;
        }
    }
}

.selected-upload {

    // noinspection SassScssResolvedByNameOnly
    .selected-header {

        margin:    $page-padding 0;
        font-size: large;

        .item {
            color: $uva-text-orange;
        }
    }

    .selected-details {

        @extend .toggle-panel;

        // noinspection SassScssResolvedByNameOnly
        @media #{$not-narrow-screen} {
            margin-left:  2rem;
            margin-right: 2rem;
        }
    }

    // Reduce spacing between successive instances.
    & + .selected-upload {

        margin-top: -1rem;

        .selected-header {
            margin-top: 0;
        }

        .toggle {
            margin-top: -0.25rem;
        }
    }
}

// noinspection SassScssResolvedByNameOnly
.upload-fields {

    display:     grid;
    width:       inherit;
    line-height: 1.375;
    font-size:   large;

    grid-template-columns: auto 1fr;
    gap:                   1.5rem;

    // A large minimum height is set to avoid the page bouncing vertically when
    // switching between field filter settings which display a varying number
    // of rows.
    min-height:     75vh;
    grid-auto-rows: max-content;

    @media #{$narrow-screen} {

        grid-template-columns: 1fr;

        @include grid-row-gap(0.25rem);
    }

    //=========================================================================
    // Basic components
    //=========================================================================

    %scrollable {
        overflow-y: auto;
        resize:     vertical;
    }

    %scrollable-limits {
        min-height: 1.5rem;
        max-height: 66.7vh;
    }

    // Single-line text input.
    .input.single {
        padding:       0.5rem;
        border-radius: 0.25rem;
    }

    // Single textarea input.
    textarea.input.single {

        @extend %scrollable;
        @extend %scrollable-limits;

        height: 8rem;
    }

    // Scrollable container for multiple single-line text input entries.
    .input.multi {

        @extend %scrollable;
        @extend %scrollable-limits;

        padding:       0.5rem;
        height:        8.5rem;
        line-height:   1.5;
        border-radius: 0.375rem;

        &.disabled {
            height: 0;
        }
    }

    // Container for a checkbox and label pair.
    .checkbox.single {

        label {
            margin: 0 0.675rem;
        }

        &:hover {

            background: whitesmoke;

            label {
                @extend %hover-bold;
            }
        }
    }

    // Single-select dropdown menu.
    .menu.single {

        @include width-fit-content;

        padding-left:  0.25rem;
        height:        2rem;
        border-radius: 0.25rem;

        option {
            background: white;
        }

        // This assumes that the first option is a blank value used to clear
        // the menu selection.
        option:first-of-type {
            color: $uva-text-gray;
        }
    }

    // Scrollable container for multi-select checkboxes.
    .menu.multi {

        @extend %scrollable-limits;

        padding-inline: 0.25rem;
        line-height:    1.5;
        border-radius:  0.5rem;

        > .multi {

            @extend %scrollable;

            height: 15vh;

            &:focus {
                outline-color: transparent;
            }
        }

        //=====================================================================
        // These specific limits are currently being used in lieu of the
        // scripting required to limit the growth of checkbox lists beyond
        // their height of their actual content.
        //=====================================================================

        $max-heights: (
            #field-FileFormatFeature:     17rem,
            #field-AccessibilityControls: 12rem,
            #field-AccessibilityHazards:  10.5rem,
            #field-AccessMode:            18.75rem,
            #field-AccessModeSufficient:  6.75rem,
            #field-RemQuality:            8.5rem
        );

        @each $element, $max-height in $max-heights {
            #{$element} {
                height:     $max-height;
                max-height: $max-height;
            }
        }
    }

    //=========================================================================
    // Top-level components
    //=========================================================================

    // <label> elements.
    > .label {

        display:         flex;
        flex-direction:  row;
        justify-content: space-between;

        line-height:     2;
        font-weight:     bold;

        @media #{$narrow-screen} {
            margin-top: 0.75rem;
        }

        // noinspection CssReplaceWithShorthandSafely
        .status-marker {

            @include user-select(none);

            margin-top:    0;
            margin-bottom: auto;
            margin-left:   1rem;
            margin-right:  0;
            line-height:   1.5;
            font-size:     larger;
            cursor:        default;
            visibility:    hidden;

            @media #{$narrow-screen} {
                margin-right: 0.25rem;
            }
        }

        // Skip the status icon for disabled items.
        &:not(.disabled) {
            .status-marker {

                &.optional {
                }

                &.valid {
                    visibility: visible;
                    color:      green;
                }

                &.invalid {
                    visibility: visible;
                    color:      $error-fg;
                }

                &.required {
                    visibility: visible;
                }
            }
        }
    }

    // <input> elements.
    > .value {

        margin:      0;
        font-family: inherit;
        font-size:   large;
        color:       black;
        border:      2px groove lightgray;

        &.optional {
        }

        &.valid {
        }

        &.invalid {
            background: $input-error-bg;
        }

        &.required {
        }

        &.disabled {

            background: $input-disabled-bg;

            // For Firefox, this prevents browser-supplied controls for numeric
            // and date fields from being displayed.  This isn't needed for
            // Chrome because mouse events are disabled and the analogous
            // controls are only displayed when the input control is hovered.
            &[type="number"] {
                -moz-appearance: textfield;
            }
        }

        &.menu.single {

            @media #{$wide-screen}   { min-width: 15vw; }
            @media #{$medium-width}  { min-width: 30vw; }
            @media #{$narrow-screen} { min-width: 100%; }

            &.valid:not(.disabled) {
                background: $focus-accent;
            }
        }
    }

    // Unhidden by file-upload.js if field filtering results in no fields being
    // displayed.  A large minimum height is set to avoid the page bouncing
    // vertically when switching between field filter settings.
    > .no-fields {

        @include grid-column-span;

        font-style:  italic;
        font-weight: bold;
        min-height:  75vh;

        &.inactive {
            display: none;
        }
    }
}
