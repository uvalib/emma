// app/assets/stylesheets/controllers/_entry.scss
//
// NOTE: This file reflects the fact that Entry was going to be the replacement
//  for the Upload model.  Although that model was abandoned, it continues to
//  live on here as the basis for styling of similar controller pages.  At some
//  point this should be restructured to move these definitions into ../shared
//  and/or ../feature.

@use 'shared/variables'        as *;
@use 'shared/functions'        as *;
@use 'shared/mixins'           as *;
@use 'shared/controls/buttons' as button;
@use 'shared/controls/grids'   as grid;
@use 'shared/controls/panels'  as panel;
@use 'shared/controls/shapes'  as shape;
@use 'shared/feature/model'    as model;
@use 'shared/layouts/overlay'  as overlay;

@use 'layouts/controls/panels' as panel-classes;
@use 'layouts/controls/popup'  as popup-classes;
@use 'feature/model_form'      as form-classes;
@use 'feature/model'           as model-classes;

//=============================================================================
// Internal constants
//=============================================================================

$entry-padding:  0.5rem;
$entry-item-gap: 2rem;
$entry-form-gap: 1.5rem;

$checkbox-x-gap: 0.675rem;

//=============================================================================
// Entry index page
//=============================================================================

// Entry metadata fields for index listings.
// @see BaseDecorator::List#list_item
.entry-list-item {

    @extend .model-list-item-panel;

    // List data items in horizontal columns when there is enough room,
    // followed by a hierarchical rendering of :file_data, followed by a
    // hierarchical rendering of :emma_data.
    @media #{$wide-screen} {

        grid-template-columns: repeat(9, 1fr);

        > .label                { grid-row-start: 1; }
        > .value                { grid-row-start: 2; }
        > .label.field-FileData { grid-row-start: 3; }
        > .value.field-FileData { grid-row-start: 4; }
        > .label.field-EmmaData { grid-row-start: 5; }
        > .value.field-EmmaData { grid-row-start: 6; }
    }

    //=========================================================================
    // Components
    //=========================================================================

    // Ensure that the label and value both span the grid in all screen widths
    // for the hierarchical data values.
    .field-FileData,
    .field-EmmaData {

        @include grid.column-span;

        margin: (3 * $entry-padding) 0;

        // Prevent the top border from meeting the outside border.
        @media #{$narrow-screen} {
            margin-right: $entry-padding;
        }

        &.label {

            margin:      (2 * $entry-padding) 0;
            padding-top: 2 * $entry-padding;
            border-top:  1px solid var(--fg-color);

            @media #{$narrow-screen} {
                .text {
                    font-size: larger;
                    padding-bottom: 0;
                    border-bottom:  none;
                }
            }
        }

        &.value {
            margin-top: 0;
        }
    }

    .field-FileMetadata {
        &.label {

            margin-top: calc(#{$entry-padding} / 2);

            @media #{$narrow-screen} {

                margin: $entry-padding 0;

                .text {
                    padding-bottom: 0;
                    border-bottom:  none;
                }
            }
        }
    }

    .field-Title {
        &.value {
            font-weight: bold;
        }
    }

    // If hierarchical areas don't have a border then they look better if
    // they're tightened up.
    @if model.$data-list-border-color == none {

        // @see BaseDecorator::List#render_pair
        .value.hierarchy {

            margin-bottom: 0;

            .field-None {
                margin-bottom: 0;
            }

            .value.hierarchy {
                .data-list {
                    padding-bottom: 0;
                }
            }
        }
    }

    //=========================================================================
    // Other
    //=========================================================================

    .invalid {
        color:  $error-fg;
        cursor: help;
    }
}

// Zero or more .entry-list-item elements.
.entry-list {

    @extend .model-list;

    row-gap: $entry-item-gap;

    .pagination-top {

        margin-bottom: $entry-item-gap * 0.5;

        .list-filter-panel {

            flex: 1 1 auto;

            @media #{$wide-screen} {
                margin-top:    -0.5rem;
                margin-bottom: -0.5rem;
                margin-left:   2.5rem;
            }

            @media #{$medium-width} {
                margin-top:    1rem;
            }

            @media #{$narrow-screen} {
                margin-bottom: -0.5rem;
            }

            > label {
                @include sr-only;
            }
        }
    }

    .number {

        padding-top: $entry-padding * 0.75;

        @media #{$narrow-screen} {
            margin-left:  -0.25rem;
            margin-right: 0.25rem;
        }
    }

    .no-records {
        @media #{$not-narrow-screen} {
            margin-bottom: $entry-item-gap * 0.5;
        }
    }
}

// @see UploadDecorator#check_status_popup
.inline-popup.check-status-popup {

    @media #{$medium-width} {
        top: 0;
    }

    .popup-toggle.icon {

        padding-top:    0.125rem;
        padding-bottom: 0.125rem;
        background:     transparent;
        border-color:   transparent;

        .symbol {
            text-shadow: 0 0 0.5rem $uva-accent-orange;
        }
    }

    // The panel displaying content which is hidden until activated.
    // @see PopupHelper#inline_popup
    .popup-panel {

        @media #{$wide-screen} {
            min-height: unset;
        }

        //=====================================================================
        // Components
        //=====================================================================

        // The "X" located in the upper-right corner of the panel's "frame".
        .closer.icon {

            position:    absolute;
            top:         -1.5rem;
            right:       0.75rem;
            line-height: 1.5;
            font-size:   medium;
            font-weight: bold;
            color:       var(--rev-fg-color);
            background:  $uva-accent-orange; // For color contrast checkers.
            cursor:      pointer;

            &:hover {
                background-color: unset;
                box-shadow:       unset;
            }
        }
    }
}

// Style the appearance of the contents of the check status popup.
//body.entry-check.modal {
//    .heading {
//        font-size: large;
//    }
//}

//=============================================================================
// Entry show page
//=============================================================================

// Entry entry fields.
// @see BaseDecorator::List#details
.entry-details {
    @extend .entry-list-item; // INSTEAD OF @extend .model-details;
}

// Container for an .entry-details.
// @see file:app/views/entry/_details.html.erb
.entry-container {

    @extend .model-container;

    > .cover-image {
        display: none;
    }
}

//=============================================================================
// Entry new/edit/delete pages
//=============================================================================

// @see BaseDecorator::Menu#items_menu
form.select-entry {

    margin: 3rem 0;

    select {

        @include control-shadow;

        max-width:     100%;
        padding:       2px;
        font-size:     large;
        background:    lighter($button-accent, 90%);
        border:        1px solid #14457f;
        border-radius: 0.125rem;

        &:focus:hover {
            outline-color: transparent;
        }

        option:first-of-type {
            //display: none;
        }
    }
}

// @see file:app/views/account/_selected.html.erb
// @see file:app/views/upload/_selected.html.erb
.selected-item {

    .selected-header {

        margin:    $page-padding 0;
        font-size: large;

        .item {
            color: $uva-text-orange;
        }
    }

    .selected-details {

        @include panel.toggle-panel;

        @media #{$not-narrow-screen} {
            margin-left:  2rem;
            margin-right: 2rem;
        }
    }

    // Reduce spacing between successive instances.
    & + .selected-item {

        margin-top: -1rem;

        .selected-header {
            margin-top: 0;
        }

        .toggle {
            margin-top: -0.25rem;
        }
    }
}

//=============================================================================
// Entry new/edit/delete pages - fields
//=============================================================================

/// Settings used for a vertically-scrollable field value.
///
@mixin scrollable-field {
    overflow-y: auto;
    resize:     vertical;

    // noinspection CssBrowserCompatibilityForProperties
    overscroll-behavior: contain;
}

/// Settings used to limit the growth of a vertically-scrollable field value.
///
@mixin scrollable-limits {
    min-height: 1.5rem;
    max-height: 66.7vh;
}

// @see BaseDecorator::Form#field_container
.form-fields {

    display:       grid;
    width:         inherit;
    margin-bottom: $entry-form-gap;
    line-height:   1.375;
    font-size:     large;

    grid-template-columns: [label] auto [input] 1fr;
    gap:                   $entry-form-gap;

    // A large minimum height is set to avoid the page bouncing vertically when
    // switching between field filter settings which display a varying number
    // of rows.
    min-height:     66vh;
    grid-auto-rows: max-content;

    @media #{$narrow-screen} {
        grid-template-columns: 1fr;
        row-gap:               0.25rem;
    }

    //=========================================================================
    // Basic components
    //=========================================================================

    // Single-line text input.
    .input.single {
        padding:       0.5rem;
        border-radius: 0.25rem;
    }

    // Single textarea input.
    textarea.input.single {

        @include scrollable-field;
        @include scrollable-limits;

        height: 10vh;
    }

    // Scrollable container for multiple single-line text input entries.
    .input.multi {

        @include scrollable-field;
        @include scrollable-limits;

        padding:       0.5rem;
        height:        8.5rem;
        line-height:   1.5;
        border-radius: 0.375rem;

        &.disabled {
            height: 0;
        }
    }

    // Container for a checkbox and label pair.
    .checkbox.single {

        label {
            margin: 0 $checkbox-x-gap;
        }

        &:not(.disabled):hover {

            background: whitesmoke;

            label {
                @include hover-bold;
            }
        }

        @media #{$narrow-screen} {
            margin: 0 -0.25rem;
            border: 0.25rem solid transparent;
        }
    }

    // Single-select dropdown menu.
    .menu.single {

        @include width-fit-content;

        padding-left:  0.25rem;
        height:        2rem;
        border-radius: 0.25rem;

        option {
            background: var(--bg-color);
        }

        // This assumes that the first option is a blank value used to clear
        // the menu selection.
        option:first-of-type {
            color: $uva-text-gray;
        }
    }

    // Scrollable container for multi-select checkboxes.
    .menu.multi {

        @include scrollable-limits;

        padding:        0.25rem;
        line-height:    1.5;
        border-radius:  0.5rem;

        @media #{$narrow-screen} {
            line-height: 1.625;
        }

        > .multi {

            @include scrollable-field;

            display:               grid;
            grid-template-columns: [checkbox] auto [label] 1fr;
            align-items:           center;
            column-gap:            $checkbox-x-gap;

            height:     auto;
            max-height: 20vh;

            &:focus {
                outline-offset: 0.5rem;
                border-radius:  0.25rem;
            }

            &.field-RemediatedAspects {
                max-height: unset;
            }

            .checkbox.single {

                display: contents;

                input:focus {
                    outline-offset: 3px;
                }

                label {
                    margin: 0;
                }

                input:focus + label {
                    @include hover-bold;
                }
            }
        }

        /**
         * NOTE: These specific limits are currently being used in lieu of the
         *  scripting required to limit the growth of checkbox lists beyond
         *  their height of their actual content.
         */

        $max-heights: (
            #value-FileFormatFeature:     17rem,
            #value-AccessibilityControls: 12rem,
            #value-AccessibilityHazards:  10.5rem,
            #value-AccessMode:            18.75rem,
            #value-AccessModeSufficient:  6.75rem,
            #value-RemQuality:            8.5rem,
            #value-RemTextQuality:        8.5rem
        );

        @each $element, $max-height in $max-heights {
            #{$element} {
                height:     $max-height;
                max-height: $max-height;
            }
        }
    }

    // Prevent the checkbox entries from being changeable when the container is
    // sealed.
    .menu.multi.sealed > .multi > * {
        pointer-events: none;
    }

    //=========================================================================
    // Top-level components
    //=========================================================================

    // <label> elements.
    > .label {

        display:         flex;
        flex-direction:  row;
        justify-content: space-between;

        line-height:     2;
        font-weight:     bold;

        @media #{$narrow-screen} {
            margin-top: 0.75rem;
        }

        .help-popup .popup-toggle.icon {

            margin-bottom: 0.25rem;
            padding:       0.3125rem 0.375rem;
            font-size:     small;

            @media #{$narrow-screen} {
                margin-top:    -0.25rem;
                margin-bottom: 0.5rem;
                font-size:     medium;
            }

        }

        // noinspection CssReplaceWithShorthandSafely
        .status-marker {

            @include user-select(none);

            width:         0.5rem;
            margin-top:    0;
            margin-bottom: auto;
            margin-left:   1rem;
            margin-right:  0;
            line-height:   1.5;
            font-size:     larger;
            cursor:        default;
            visibility:    hidden;

            @media #{$narrow-screen} {
                margin-right: 0.25rem;
                font-size:    x-large;
            }
        }

        // Skip the status icon for disabled items.
        &:not(.disabled):not(.sealed) {

            .status-marker {

                &.optional {
                }

                &.valid {
                    visibility: visible;
                    color:      green;
                }

                &.invalid {
                    visibility: visible;
                    color:      $error-fg;
                }

                &.required {
                    visibility: visible;
                }
            }
        }
    }

    // <input> elements.
    > .value {

        margin:      0;
        font-family: inherit;
        font-size:   large;
        color:       var(--fg-color);
        border:      2px groove lightgray;

        &.optional {
        }

        &.valid {
        }

        &.invalid {
            background: $input-error-bg;
        }

        &.required {
        }

        &.sealed {
            background: $input-sealed-bg;
        }

        &.disabled {

            background: $input-disabled-bg;

            // For Firefox, this prevents browser-supplied controls for numeric
            // and date fields from being displayed.  This isn't needed for
            // Chrome because mouse events are disabled and the analogous
            // controls are only displayed when the input control is hovered.
            &[type="number"] {
                -moz-appearance: textfield;
            }
        }

        &.menu.single {

            @media #{$wide-screen}   { min-width: 50%;  }
            @media #{$medium-width}  { min-width: 75%;  }
            @media #{$narrow-screen} { min-width: 100%; }

            &.valid:not(.disabled):not(.sealed) {
                background: $button-accent;
            }
        }

        &.field-Rights {
            width: auto;
        }

        // De-emphasize this field to indicate that it is no longer required
        // after "rem_complete" (Entire Document Remediated?) is set to "true".
        &.field-Coverage[data-required="false"] {
            background: $input-sealed-bg;
        }

        &.field-Creator,
        &.field-Identifier,
        &.field-Relation {
            height: 4.25rem;
        }

        // A note inserted just below an input element.
        & + .label + .note {
            margin-top:    calc(0.5rem - #{$entry-form-gap});
            margin-bottom: -($entry-form-gap * 0.5);
            line-height:   1;
            text-indent:   0.5rem;
        }
    }

    // Unhidden by model-form.js if field filtering results in no fields being
    // displayed.
    > .no-fields {

        @include grid.column-span;

        font-style:  italic;
        font-weight: bold;

        &.inactive {
            display: none;
        }
    }
}

// When not actively downloading, the element for .uppy-ProgressBar creates a
// visible gap between the directions and the top of the form.
//body.entry {
//    .page-text-section.directions {
//        margin-bottom: 0;
//    }
//}

//=============================================================================
// Bibliographic lookup modal
//=============================================================================

$lookup-accent-fg: lighter($uva-accent-blue, 50%);
$lookup-accent-bg: lighter($uva-accent-orange, 50%);

/// Checkbox-based slide toggle
///
/// @param {Numeric} $toggle-border   Control border thickness.
/// @param {Numeric} $toggle-height   Height of control.
/// @param {Numeric} $toggle-height   Width of control.
///
@mixin slide-lock($toggle-border, $toggle-height, $toggle-width: 6rem) {

    $unlocked-color:    $lookup-accent-fg;
    $locked-color:      gray;

    $slider-pad-x:      1.125rem; // Extra room for text.
    $slider-offset:     $toggle-border * 0.5;
    $slider-bg:         whitesmoke;

    //=========================================================================
    // Components
    //=========================================================================

    // Make the check box invisible but expanded to fill the
    // whole area that will be covered by the indicator.
    .lock-input {
        position:   absolute;
        z-index:    1;
        width:      $toggle-width  + $toggle-border * 2;
        height:     $toggle-height + $toggle-border * 2;
        opacity:    0;
    }

    // The visible indicator following the invisible checkbox.
    .lock-indicator {

        position:       relative;
        display:        inline-flex;
        align-items:    center;
        width:          $toggle-width;
        height:         $toggle-height;
        line-height:    100%;
        text-align:     center;
        font-weight:    bold;
        font-variant:   all-small-caps;
        font-size:      small;
        border-radius:  $toggle-height;
        border:         $toggle-border solid;

        @media #{$medium-width} {
            line-height: 1.25;
            font-size:   x-small;
        }

        .slider {
            position:       relative;
            height:         100%;
            width:          calc(50% + #{$slider-pad-x});
            word-break:     keep-all;
            color:          inherit;
            background:     $slider-bg;
            border-radius:  $toggle-height;
            transition:     transform 0.25s ease;
        }
    }

    //=========================================================================
    // Variations
    //=========================================================================

    // When the checkbox is unchecked, the indicator slides to
    // the start.
    .lock-input:not(:checked) + .lock-indicator {

        color:          $unlocked-color;
        background:     $unlocked-color;
        border-color:   $unlocked-color;

        .slider {
            $x-pos:     $slider-offset;
            transform:  translate($x-pos);
            &::before { content: 'unlocked'; }
        }
    }

    // When the checkbox is checked, the indicator slides to
    // the end.
    .lock-input:checked + .lock-indicator {

        color:          $locked-color;
        background:     $locked-color;
        border-color:   $locked-color;

        .slider {
            $x-pos:     $slider-offset + $slider-pad-x * 2;
            transform:  translate(calc(100% - #{$x-pos}));
            &::after {  content: 'locked'; }
        }
    }

    // When the invisible checkbox receives focus, it's the
    // indicator that shows the outline.
    .lock-input:focus + .lock-indicator {
        @include focus;
    }
}

/// Radio-based entry selection.
///
@mixin entry-selection() {

    //=========================================================================
    // Components
    //=========================================================================

    // The checkbox is not rendered but spans the provided area and responds
    // to focus and click.
    input[type="radio"] {
        position: absolute;
        top:      -0.25rem;
        left:     -0.25rem;
        z-index:  1;
        width:    100%;
        height:   100%;
        opacity:  0;
    }

    // The visible indicator holds a pair of shapes which are combined into
    // stacked right triangles.
    .select-indicator {

        display:        flex;
        flex-direction: column;
        flex-wrap:      nowrap;
        align-items:    center;
        width:          100%;
        height:         100%;

        .outer, .inner {
            @include shape.triangle-icon(right);
            margin-top: 0.5rem;
        }

        .outer {
            transform:  scale(1.5);
        }

        .inner {
            position:   absolute;
            transform:  translateX(-1px);
        }
    }

    //=========================================================================
    // Variations
    //=========================================================================

    input:not(:checked) + .select-indicator {
        .outer { color: darkgray; }
        .inner { color: white; }
    }

    input:checked + .select-indicator {
        .outer { color: $lookup-accent-fg; }
        .inner { color: $lookup-accent-bg; }
    }

    input:focus + .select-indicator {
        .outer { @include focus; }
    }
}

.modal-popup.lookup-popup {
    max-width: calc(100% - 1.25rem);
}

// @see BaseDecorator::Lookup#lookup_control
.modal-popup.lookup-popup,
.inline-popup.lookup-popup .popup-panel {

    @media #{$wide-screen} {
        position: fixed;
        top:      2.5vh;
        bottom:   2.5vh;
        left:     1.25vw;
        right:    6.25vw;
    }

    @media #{$medium-width} {
        position: fixed;
        top:      2rem;
        bottom:   2rem;
        left:     2rem;
        right:    2rem;
    }

    @media #{$narrow-screen} {
        padding: 0;
    }

    .popup-controls {
        @media #{$narrow-screen} {
            padding: 0.5rem;
        }
    }
}

.modal-popup,
.inline-popup.lookup-popup {
    // noinspection CssReplaceWithShorthandSafely
    .lookup-container {

        $item-gap:    0.5rem;
        $section-gap: $item-gap * 2;

        margin:      0;
        margin-top:  0.5rem;
        margin-left: 0.5rem;
        font-size:   medium;
        flex:        1 1 0;

        // noinspection CssBrowserCompatibilityForProperties
        overscroll-behavior: contain;

        @media #{$not-wide-screen} {
            max-width:  inherit;
            overflow-x: auto;
        }

        > * {
            max-width: inherit;
        }

        // Cells which align with a locked field value.
        .locked-out {
            background-color: ghostwhite;
        }

        // Cells in the row being hovered over.
        .highlight:not(.locked-out) {

            @include hover-bold;

            background-color: lightcyan;
        }

        .commit {
            @include button.basic;
        }

        // Overlay while loading.
        > .loading-in-progress {

            $img-width:  4rem;
            $img-height: 1rem;

            @include overlay.image(
                $path:  'loading-balls.gif',
                $width:  $img-width,
                $height: $img-height,
                $fill:   false
            );

            position: absolute;
            top:      calc(50% - ($img-height * 0.5));
            left:     calc(50% - ($img-width  * 0.5));
        }

        .lookup-query {

            $color:             lighter($uva-blue, 95%);

            display:            flex;
            flex-direction:     row;
            justify-content:    center;
            gap:                $section-gap;
            margin-right:       1rem;
            padding:            0.75rem 0.5rem;
            font-size:          large;
            font-weight:        bold;
            background:         $color;
            border:             0.25rem solid $color;
            border-radius:      0.5rem;

            @media #{$narrow-screen} {
                flex-direction: column;
                gap:            0.5rem;
                padding-top:    0.5rem;
                margin:         0 0.5rem;
            }

            .terms {
                padding: 0 0.5rem;
                border:  1px solid $lookup-accent-fg;
            }
        }

        .lookup-prompt {
            .item-terms {
                padding: 0.75rem 0.5rem;
            }
        }

        .lookup-status {

            justify-content: center;

            @media #{$narrow-screen} {
                margin-left: 0.5rem;
            }

            > * {
                @media #{$narrow-screen} {
                    width: 100%;
                }
            }

            .services {

                margin-left:  0;
                margin-right: 0;
                flex-grow:    0;

                > * {
                    @media #{$narrow-screen} {
                        flex-basis: 100%;
                    }
                }
            }

            .notice {
                flex-basis: auto;
            }

        }

        .lookup-entries {

            max-height:    80%;
            margin-top:    1rem;
            padding-right: 0.5rem;
            word-break:    break-word;

            @media #{$not-wide-screen} {
                max-width: unset;
                width:     max-content;
            }

            // noinspection LongLine
            .list {

                $max-columns: 20;

                display:        grid;
                gap:            $item-gap;
                padding-left:   0.125rem;
                padding-right:  0.125rem;
                padding-bottom: 0.5rem;
                border-bottom:  2px solid gray;

                @include grid.column-classes($max-columns, auto);

                // Redefine the generated classes for non-desktop form factors
                // so that (a) .col-0 and .col-1 are no wider than they need to
                // be and (b) the remaining (data) columns are sized to allow
                // good readability for the available viewport (assuming
                // horizontal scrolling).
                $first-columns: 2;
                @for $n from ($first-columns + 1) through $max-columns {
                    &.columns-#{$n} {
                        $later-columns: $n - $first-columns;
                        @media #{$medium-width} {
                            grid-template-columns:
                                repeat($first-columns, auto)
                                repeat($later-columns, 25vw);
                        }
                        @media #{$narrow-screen} {
                            grid-template-columns:
                                repeat($first-columns, auto)
                                repeat($later-columns, 45vw);
                        }
                    }
                }

                @media #{$not-wide-screen} {
                    max-width: unset;
                    width:     max-content;
                }

                // @note Support for future "wide" option:
                &.wide {
                    width: 200%;
                }

                //=============================================================
                // Rows
                //=============================================================

                $cell-pad-y: 0.125rem;
                $cell-pad-x: 0.25rem;

                .row {

                    display: contents;

                    .selection {        // .col-0
                    }

                    .tag {              // .col-1
                        font-weight:    bold;
                    }

                    [data-field="dc_identifier"] {
                        word-break: break-all;
                    }
                }

                //=============================================================
                // Column heading entry row (.row.row-0)
                //=============================================================

                $head-top:     0;
                $head-height:  1.5rem;
                $head-delta-y: $head-height + $item-gap;

                .row.head {

                    > * {
                        position:       sticky;
                        top:            $head-top;
                        padding-top:    0.125rem;
                        text-align:     center;
                        background:     white;
                        box-shadow:     0 -0.75rem  0  0.25rem  white,
                                        0  0.75rem  0  0.25rem  white;
                    }

                    > .col-0 .text,
                    > .col-1 .text {
                        visibility:     hidden;
                    }

                    .text {
                        font-weight:    bold;
                    }
                }

                //=============================================================
                // Field values entry row (.row.row-1)
                //=============================================================

                $values-top:     $head-top + $head-delta-y;
                $values-height:  6rem;
                $values-border:  0.125rem;
                $values-delta-y: $values-height + $item-gap;

                .row.field-values {

                    > * {
                        position:       sticky;
                        top:            $values-top;
                        background:     white;
                        box-shadow:     0  0        0  0.25rem  white,
                                        0  1.75rem  0  0.25rem  white;
                    }

                    > *:not(.col-0):not(.col-1) {
                        min-height:     $values-height;
                        max-height:     $values-height * 2;
                        overflow-y:     auto;
                        border:         $values-border solid black;
                    }

                    textarea {
                        padding:        $cell-pad-y $cell-pad-x;
                        font:           inherit;
                        resize:         none;
                    }
                }

                //=============================================================
                // Field lock controls entry row (.row.row-2)
                //=============================================================

                $locks-pad:      0.25rem; // to prevent clipping of outline
                $locks-m-top:    1.00rem;
                $locks-m-bottom: 1.25rem;
                $locks-top:      $values-top + $values-delta-y + $locks-m-top;
                $locks-height:   1rem;
                $locks-border:   0.25rem;

                .row.field-locks {

                    > * {
                        position:       sticky;
                        top:            $locks-top;
                        margin-top:     $locks-m-top    - $locks-pad;
                        margin-bottom:  $locks-m-bottom - $locks-pad;
                        padding:        $locks-pad 0;
                        overflow:       hidden;
                        background:     white;
                        box-shadow:     0 1rem 0.25rem 0.25rem white;
                    }

                    // Show column 0 heading here rather than in the head row.
                    > .col-0 .text {
                        visibility:     hidden;
                    }

                    // Show column 1 heading here rather than in the head row.
                    > .col-1 .text {
                        display:        inline-block;
                        text-indent:    0.25rem;
                        font-weight:    bold;
                    }

                    // Lock control for each data field column.
                    > *:not(.col-0):not(.col-1) {

                        display:        flex;
                        align-items:    center;
                        justify-content:center;

                        @include slide-lock($locks-border, $locks-height);
                    }
                }

                //=============================================================
                // Original field values entry row (.row.row-3)
                // Search result item entry row (.row.row-N where N > 3))
                //=============================================================

                $row-height: 4rem;

                .row.original-values,
                .row.result {

                    > .col-0 {

                        position: relative;

                        &.highlight {
                            background-color: revert;
                        }

                        @include entry-selection;
                    }

                    > .col-1 {
                        word-break: keep-all;
                    }

                    > *:not(.col-0) {

                        display:    flex;
                        min-height: $row-height;
                        max-height: $row-height * 2;
                        padding:    $cell-pad-y $cell-pad-x;
                        overflow-y: auto;
                        border:     1px solid gray;

                        .text {
                            max-height: max-content;
                            margin:     0;
                            flex:       1 1 100%;

                            // noinspection CssBrowserCompatibilityForProperties
                            overscroll-behavior: contain;
                        }
                    }
                }

                //=============================================================
                // Cope with .selection z-index
                //=============================================================

                .row.head,
                .row.field-values,
                .row.field-locks {
                    > .col-0 {
                        z-index: 1;
                    }
                }
            }
        }

        .lookup-output {

            width: 100%;

            .value {
                // noinspection CssBrowserCompatibilityForProperties
                overscroll-behavior: contain;
            }

            .item-results {
                height: 45vh;
            }

            .pair {
                .item-errors {
                    height: 87.5%;
                }
                .item-diagnostics {
                    height: 150%;
                }
            }
        }
    }
}

//=============================================================================
// Entry admin page
//=============================================================================

//body.entry-admin {
//    h2 {
//        font-size: $h1-font-size;
//    }
//    h3 {
//        font-size: x-large;
//    }
//}
