// app/assets/stylesheets/controllers/_entry.scss

@use 'shared/variables'        as *;
@use 'shared/functions'        as *;
@use 'shared/mixins'           as *;
@use 'shared/controls/buttons' as button;
@use 'shared/controls/grids'   as grid;
@use 'shared/controls/panels'  as panel;
@use 'shared/feature/model'    as model;

@use 'layouts/controls/panels' as panel-classes;
@use 'layouts/controls/popup'  as popup-classes;
@use 'feature/model_form'      as form-classes;
@use 'feature/model'           as model-classes;

//=============================================================================
// Internal constants
//=============================================================================

$entry-padding:   0.5rem;
$entry-entry-gap: 2rem;
$entry-form-gap:  1.5rem;

//=============================================================================
// Entry index page
//=============================================================================

// Entry metadata fields for index listings.
// @see BaseDecorator::List#list_item
.entry-list-item {

    @extend .model-list-item-panel;

    // List data items in horizontal columns when there is enough room,
    // followed by a hierarchical rendering of :file_data, followed by a
    // hierarchical rendering of :emma_data.
    @media #{$wide-screen} {

        grid-template-columns: repeat(9, auto);

        > .label                { grid-row-start: 1; }
        > .value                { grid-row-start: 2; }
        > .label.field-FileData { grid-row-start: 3; }
        > .value.field-FileData { grid-row-start: 4; }
        > .label.field-EmmaData { grid-row-start: 5; }
        > .value.field-EmmaData { grid-row-start: 6; }
    }

    //=========================================================================
    // Components
    //=========================================================================

    // Ensure that the label and value both span the grid in all screen widths
    // for the hierarchical data values.
    .field-FileData,
    .field-EmmaData {

        @include grid.column-span;

        margin: (3 * $entry-padding) 0;

        &.label {

            margin:      (2 * $entry-padding) 0;
            padding-top: 2 * $entry-padding;
            border-top:  1px solid $root-fg-color;

            @media #{$narrow-screen} {
                .text {
                    font-size: larger;
                    padding-bottom: 0;
                    border-bottom:  none;
                }
            }
        }

        &.value {
            margin-top: 0;
        }
    }

    .field-FileMetadata {
        &.label {

            margin-top: calc(#{$entry-padding} / 2);

            @media #{$narrow-screen} {

                margin: $entry-padding 0;

                .text {
                    padding-bottom: 0;
                    border-bottom:  none;
                }
            }
        }
    }

    .field-Title {
        &.value {
            font-weight: bold;
        }
    }

    // If hierarchical areas don't have a border then they look better if
    // they're tightened up.
    @if model.$data-list-border-color == none {

        // @see BaseDecorator::List#render_pair
        .value.hierarchy {

            margin-bottom: 0;

            .field-None {
                margin-bottom: 0;
            }

            .value.hierarchy {
                .data-list {
                    padding-bottom: 0;
                }
            }
        }
    }

    //=========================================================================
    // Other
    //=========================================================================

    .invalid {
        color:  $error-fg;
        cursor: help;
    }
}

// Zero or more .entry-list-item elements.
.entry-list {

    @extend .model-list;

    @include grid.row-gap($entry-entry-gap);

    .pagination-top {

        margin-bottom: $entry-entry-gap * 0.5;

        .list-filter-panel {

            flex: 1 1 auto;

            @media #{$wide-screen} {
                margin-top:    -0.5rem;
                margin-bottom: -0.5rem;
                margin-left:   2.5rem;
            }

            @media #{$medium-width} {
                margin-top:    1rem;
            }

            @media #{$narrow-screen} {
                margin-bottom: -0.5rem;
            }

            > label {
                @include sr-only;
            }
        }
    }

    .number {

        padding-top: $entry-padding * 0.75;

        @media #{$narrow-screen} {
            margin-left:  -0.25rem;
            margin-right: 0.25rem;
        }
    }

    .no-records {
        @media #{$not-narrow-screen} {
            margin-bottom: $entry-entry-gap * 0.5;
        }
    }
}

// @see EntryDecorator#check_status_popup
.popup-container.check-status-popup {

    @media #{$medium-width} {
        top: 0;
    }

    .control.icon {

        padding:      1px 5px;
        background:   transparent;
        border-color: transparent;

        .symbol {
            text-shadow: 0 0 0.5rem $uva-accent-orange;
        }
    }

    // The panel displaying content which is hidden until activated.
    // @see PopupHelper#popup_container
    .popup-panel {

        @media #{$wide-screen} {
            min-height: unset;
        }

        //=====================================================================
        // Components
        //=====================================================================

        // The "X" located in the upper-right corner of the panel's "frame".
        .closer.icon {

            position:    absolute;
            top:         -1.5rem;
            right:       0.75rem;
            line-height: 1.5;
            font-size:   medium;
            font-weight: bold;
            color:       $root-rev-fg-color;
            background:  $uva-accent-orange; // For color contrast checkers.
            cursor:      pointer;

            &:hover {
                background-color: unset;
                box-shadow:       unset;
            }
        }
    }
}

// Style the appearance of the contents of the check status popup.
body.entry-check.modal {
    .heading {
        font-size: large;
    }
}

//=============================================================================
// Entry show page
//=============================================================================

// Entry entry fields.
// @see BaseDecorator::List#details
.entry-details {
    @extend .entry-list-item; // INSTEAD OF @extend .model-details;
}

// Container for an .entry-details.
// @see file:app/views/entry/_details.html.erb
.entry-container {

    @extend .model-container;

    > .cover-image {
        display: none;
    }
}

//=============================================================================
// Entry new/edit/delete pages
//=============================================================================

// @see BaseDecorator::Menu#items_menu
form.select-entry {

    margin: 3rem 0;

    select {

        @include control-shadow;

        max-width:     100%;
        padding:       2px;
        font-size:     large;
        background:    lighter($focus-accent, 90%);
        border:        1px solid #14457f;
        border-radius: 0.125rem;

        &:focus:hover {
            outline-color: transparent;
        }

        option:first-of-type {
            //display: none;
        }
    }
}

// @see file:app/views/account/_selected.html.erb
// @see file:app/views/entry/_selected.html.erb
// @see file:app/views/upload/_selected.html.erb
.selected-item {

    .selected-header {

        margin:    $page-padding 0;
        font-size: large;

        .item {
            color: $uva-text-orange;
        }
    }

    .selected-details {

        @include panel.toggle-panel;

        @media #{$not-narrow-screen} {
            margin-left:  2rem;
            margin-right: 2rem;
        }
    }

    // Reduce spacing between successive instances.
    & + .selected-item {

        margin-top: -1rem;

        .selected-header {
            margin-top: 0;
        }

        .toggle {
            margin-top: -0.25rem;
        }
    }
}

// @see BaseDecorator::Form#field_container
.form-fields {

    display:       grid;
    width:         inherit;
    margin-bottom: $entry-form-gap;
    line-height:   1.375;
    font-size:     large;

    grid-template-columns: [label] auto [input] 1fr;
    gap:                   $entry-form-gap;

    // A large minimum height is set to avoid the page bouncing vertically when
    // switching between field filter settings which display a varying number
    // of rows.
    min-height:     66vh;
    grid-auto-rows: max-content;

    @media #{$narrow-screen} {

        grid-template-columns: 1fr;

        @include grid.row-gap(0.25rem);
    }

    //=========================================================================
    // Basic components
    //=========================================================================

    %scrollable {
        overflow-y: auto;
        resize:     vertical;
    }

    %scrollable-limits {
        min-height: 1.5rem;
        max-height: 66.7vh;
    }

    // Single-line text input.
    .input.single {
        padding:       0.5rem;
        border-radius: 0.25rem;
    }

    // Single textarea input.
    textarea.input.single {

        @extend %scrollable;
        @extend %scrollable-limits;

        height: 10vh;
    }

    // Scrollable container for multiple single-line text input entries.
    .input.multi {

        @extend %scrollable;
        @extend %scrollable-limits;

        padding:       0.5rem;
        height:        8.5rem;
        line-height:   1.5;
        border-radius: 0.375rem;

        &.disabled {
            height: 0;
        }
    }

    // Container for a checkbox and label pair.
    .checkbox.single {

        label {
            margin: 0 0.675rem;
        }

        &:not(.disabled):hover {

            background: whitesmoke;

            label {
                @include hover-bold;
            }
        }

        @media #{$narrow-screen} {
            margin: 0 -0.25rem;
            border: 0.25rem solid transparent;
        }
    }

    // Single-select dropdown menu.
    .menu.single {

        @include width-fit-content;

        padding-left:  0.25rem;
        height:        2rem;
        border-radius: 0.25rem;

        option {
            background: $root-bg-color;
        }

        // This assumes that the first option is a blank value used to clear
        // the menu selection.
        option:first-of-type {
            color: $uva-text-gray;
        }
    }

    // Scrollable container for multi-select checkboxes.
    .menu.multi {

        @extend %scrollable-limits;

        padding:        0.25rem;
        line-height:    1.5;
        border-radius:  0.5rem;

        @media #{$narrow-screen} {
            line-height: 1.625;
        }

        > .multi {

            @extend %scrollable;

            height:     auto;
            max-height: 20vh;

            &:focus {
                outline-color: transparent;
            }

            &.field-RemediatedAspects {
                max-height: unset;
            }
        }

        /**
         * NOTE: These specific limits are currently being used in lieu of the
         *  scripting required to limit the growth of checkbox lists beyond
         *  their height of their actual content.
         */

        $max-heights: (
            #value-FileFormatFeature:     17rem,
            #value-AccessibilityControls: 12rem,
            #value-AccessibilityHazards:  10.5rem,
            #value-AccessMode:            18.75rem,
            #value-AccessModeSufficient:  6.75rem,
            #value-RemQuality:            8.5rem,
            #value-RemTextQuality:        8.5rem
        );

        @each $element, $max-height in $max-heights {
            #{$element} {
                height:     $max-height;
                max-height: $max-height;
            }
        }
    }

    //=========================================================================
    // Top-level components
    //=========================================================================

    // <label> elements.
    > .label {

        display:         flex;
        flex-direction:  row;
        justify-content: space-between;

        line-height:     2;
        font-weight:     bold;

        @media #{$narrow-screen} {
            margin-top: 0.75rem;
        }

        .help-popup .control.icon {

            margin-bottom: 0.25rem;
            padding:       0.3125rem 0.375rem;
            font-size:     small;

            @media #{$narrow-screen} {
                margin-top:    -0.25rem;
                margin-bottom: 0.5rem;
                font-size:     medium;
            }

        }

        // noinspection CssReplaceWithShorthandSafely
        .status-marker {

            @include user-select(none);

            width:         0.5rem;
            margin-top:    0;
            margin-bottom: auto;
            margin-left:   1rem;
            margin-right:  0;
            line-height:   1.5;
            font-size:     larger;
            cursor:        default;
            visibility:    hidden;

            @media #{$narrow-screen} {
                margin-right: 0.25rem;
                font-size:    x-large;
            }
        }

        // Skip the status icon for disabled items.
        &:not(.disabled) {

            .status-marker {

                &.optional {
                }

                &.valid {
                    visibility: visible;
                    color:      green;
                }

                &.invalid {
                    visibility: visible;
                    color:      $error-fg;
                }

                &.required {
                    visibility: visible;
                }
            }
        }
    }

    // <input> elements.
    > .value {

        margin:      0;
        font-family: inherit;
        font-size:   large;
        color:       $root-fg-color;
        border:      2px groove lightgray;

        &.optional {
        }

        &.valid {
        }

        &.invalid {
            background: $input-error-bg;
        }

        &.required {
        }

        &.sealed {
            background: $input-sealed-bg;
        }

        &.disabled {

            background: $input-disabled-bg;

            // For Firefox, this prevents browser-supplied controls for numeric
            // and date fields from being displayed.  This isn't needed for
            // Chrome because mouse events are disabled and the analogous
            // controls are only displayed when the input control is hovered.
            &[type="number"] {
                -moz-appearance: textfield;
            }
        }

        &.menu.single {

            @media #{$wide-screen}   { min-width: 50%;  }
            @media #{$medium-width}  { min-width: 75%;  }
            @media #{$narrow-screen} { min-width: 100%; }

            &.valid:not(.disabled) {
                background: $focus-accent;
            }

            &.valid.sealed {
                background: $ro-focus-accent;
            }
        }

        &.field-Rights {
            width: auto;
        }

        // De-emphasize this field to indicate that it is no longer required
        // after "rem_complete" (Entire Document Remediated?) is set to "true".
        &.field-Coverage[data-required="false"] {
            background: $input-sealed-bg;
        }

        &.field-Creator,
        &.field-Identifier,
        &.field-Relation {
            height: 4.25rem;
        }

        // A note inserted just below an input element.
        & + .label + .note {
            margin-top:    calc(0.5rem - #{$entry-form-gap});
            margin-bottom: -($entry-form-gap * 0.5);
            line-height:   1;
            text-indent:   0.5rem;
        }
    }

    // Unhidden by model-form.js if field filtering results in no fields being
    // displayed.
    > .no-fields {

        @include grid.column-span;

        font-style:  italic;
        font-weight: bold;

        &.inactive {
            display: none;
        }
    }
}

// @see EntryDecorator#lookup_popup
.popup-container.lookup-popup {

    // noinspection DuplicatedCode
    .popup-panel {

        @media #{$wide-screen} {
            position: fixed;
            top:      2.5vh;
            bottom:   2.5vh;
            left:     1.25vw;
            right:    7.75vw;
        }

        @media #{$medium-width} {
            position: fixed;
            top:      2rem;
            bottom:   2rem;
            left:     2rem;
            right:    2rem;
        }
    }

    // noinspection CssReplaceWithShorthandSafely, CssBrowserCompatibilityForProperties
    .lookup-container {

        $gap: 1rem;

        margin:      0;
        margin-top:  0.5rem;
        margin-left: 1rem;
        font-size:   medium;
        flex:        1 1 0;

        overscroll-behavior: contain;

        > * {
            max-width: calc(100% - #{$gap});
        }

        .commit {
            @include button.basic;
        }

        .lookup-query {

            $color:         lighter($uva-blue, 95%);

            display:        flex;
            flex-direction: row;
            gap:            1rem;
            margin-right:   1rem;
            padding:        0.75rem 0.5rem;
            font-size:      large;
            font-weight:    bold;
            background:     $color;
            border:         0.25rem solid $color;
            border-radius:  0.5rem;
        }

        .lookup-prompt {
            .item-terms {
                padding: 0.75rem 0.5rem;
            }
        }

        .lookup-entries {

            max-height:    80%;
            margin-top:    1rem;
            padding-right: 0.5rem;
            overflow-y:    auto;
            word-break:    break-word;

            overscroll-behavior: contain;

            .list {

                $max-columns: 20;

                display:        grid;
                gap:            0.5rem;
                padding-bottom: 0.5rem;
                border-bottom:  2px solid gray;

                @include grid.column-classes($max-columns, auto);

                .row {

                    display: contents;

                    .selection {        // .col-0
                        width:          max-content;
                        margin:         0.5rem auto;
                        align-self:     start;
                    }

                    .tag {              // .col-1
                        font-weight:    bold;
                    }

                    .text {
                        display:        inline-block;
                        margin:         0.125rem 0.25rem;
                    }
                }

                .row.head {             // .row.row-0

                    > * {
                        position:       sticky;
                        top:            0;
                        background:     white;
                        box-shadow:     0 0.75rem 0 0 white;
                    }

                    .text {
                        font-weight:    bold;
                    }
                }

                .row.field-values {     // .row.row-1

                    > * {
                        position:       sticky;
                        top:            calc(2rem + 2px);
                        background:     white;
                    }

                    > .col-0,           // .selection
                    > .col-1 {          // .tag
                        border-bottom:  2px solid white;
                    }

                    // NOTE: this is only for aligning the Commit button.
                    //  If it ends up elsewhere, this styling can be removed.
                    > .col-1 {
                        display:        flex;
                        flex-direction: column;
                        flex-wrap:      wrap;
                        align-content:  flex-start;
                    }

                    > *:not(.col-0):not(.col-1) {
                        min-height:     6rem;
                        max-height:     12rem;
                        overflow-y:     auto;
                    }

                    > *:not(.col-0):not(.col-1) {
                        border:         2px solid black;
                        box-shadow:     0 0.5rem 0 0 white;
                    }

                    textarea {
                        padding:        0.125rem 0.25rem;
                        font:           inherit;
                        resize:         none;
                    }
                }

                .row:not(.head):not(.field-values) {

                    > *:not(.col-0) {
                        min-height:     4rem;
                        max-height:     8rem;
                        overflow-y:     auto;
                    }

                    > *:not(.col-0) {   // TODO: temporary(?)
                        background:     lightyellow;
                        border-left:    1px solid red;
                        border-top:     1px solid blueviolet;
                    }
                }
            }
        }

        .lookup-output {

            width: 100%;

            .item-results {
                height: 45vh;
            }

            .pair {
                .value.item-errors {
                    height: 87.5%;
                }
                .value.item-diagnostics {
                    height: 150%;
                }
            }
        }
    }
}

// When not actively downloading, the element for .uppy-ProgressBar creates a
// visible gap between the directions and the top of the form.
body.entry {
    .page-text-section.directions {
        margin-bottom: 0;
    }
}

//=============================================================================
// Entry admin page
//=============================================================================

body.entry-admin {
    h2 {
        font-size: xx-large;
    }
    h3 {
        font-size: x-large;
    }
}
