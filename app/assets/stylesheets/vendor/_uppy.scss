// app/assets/stylesheets/vendor/_uppy.scss

@use 'shared/variables'        as *;
@use 'shared/functions'        as *;
@use 'shared/controls/buttons' as button;

//=============================================================================
// Overrides of Uppy styles (node_modules/@uppy/core/src/_common.scss)
//=============================================================================

// As of @uppy/core 2.2.0, each plugin creates its own .uppy-Root to contain
// the element(s) it renders.  There is no way to reconfigure this behavior.
// By "neutralizing" with "display: contents", styling previously determined
// without this extra layer can happen as intended.
.uppy-Root {
    display: contents;
}

// Associated with subsequently-appended elements related to Uppy plugins
// within a given element.
.uppy {}

//=============================================================================
// Overrides of Uppy styles (node_modules/@uppy/file-input/src/style.scss)
//=============================================================================

// Upload action button.
.uppy-FileInput-btn {
    @include button.control;
}

// The container for the file select button which is displayed instead of the
// original input[type="file"].
.uppy-FileInput-container {

    display:         flex;
    flex-direction:  row;
    justify-content: space-between;
    margin:          0;

    // Imperceptible element.
    .uppy-FileInput-input {}

    // The file select button.
    .uppy-FileInput-btn {
        flex: 0 1 auto;
    }
}

//=============================================================================
// Overrides of Uppy styles (node_modules/@uppy/informer/src/style.scss)
//=============================================================================

// The container for the information message that is displayed briefly for
// various events.
[dir=ltr] .uppy-Informer {

    flex: 0 0 0;

    > span {

        display:         inline-flex;
        justify-content: center;
        align-items:     center;
        height:          0;
        overflow-y:      visible;
        flex:            1 1 auto;

        .uppy-Informer-animated {

            // The actual message popup.
            p[role="alert"] {
                max-width:        100%;
                background-color: $uva-accent-orange;
            }
        }
    }
}

//=============================================================================
// Overrides of Uppy styles (node_modules/@uppy/status-bar/src/style.scss)
//=============================================================================

// The container for the upload status bar (a heavy-weight alternative to
// .uppy-ProgressBar).
.uppy-StatusBar {

    grid-column: 2 / -1;
    flex:        1 0 auto;

    // Classes indicating state.
    &.is-waiting {}
    &.is-preprocessing {}
    &.is-postprocessing {}
    &.is-complete {}
    &.is-error {}

    // The progress bar which extends as upload progresses.
    .uppy-StatusBar-progress {
        align-self: flex-end;
    }

    // Textual status information.
    .uppy-StatusBar-content {}

    // Actions (visible as needed).
    .uppy-StatusBar-actions {}

}

//=============================================================================
// Overrides of Uppy styles (node_modules/@uppy/progress-bar/src/style.scss)
//=============================================================================

// The container for the upload progress bar (a minimalistic alternative to
// .uppy-StatusBar.
//
// @see file:javascripts/shared/uploader.js *hideUppyProgressBar()*
//
.uppy-ProgressBar {

    flex: 1 0 auto;

    // The bar itself which extends as the upload progresses.
    .uppy-ProgressBar-inner {
        display:          block;
        height:           100%;
        margin-top:       0;
        background-color: lighter($uva-accent-orange, 40%);
        border-radius:    0.25rem;
    }

    // The percentage counter, which has been moved to the center of the space
    // occupied by the progress bar.
    //
    // @see file:javascripts/shared/uploader.js *initializeUppyProgressBar()*
    //
    .uppy-ProgressBar-percentage {

        display:       inline-block;
        position:      relative;
        top:           -50%;
        left:          95%;
        padding:       0.25rem;
        font-weight:   bold;
        color:         $fg-color;
        background:    $bg-color;
        border-radius: 0.75rem;
        visibility:    inherit;

        &::after {
            content: "%";
        }
    }

    // After the file has been received, Uppy will make the progress bar
    // aria-hidden, but model-form.js will not mark the element with
    // ".invisible" until the server response is received.  Rather than leaving
    // the progress at "100%", indicate that the server is processing the file.
    &[aria-hidden="true"]:not(.invisible) {
        .uppy-ProgressBar-percentage {

            max-height: 0;
            max-width:  0;
            color:      transparent;
            transform:  none;

            &::after {
                content:       "saving...";
                display:       inline-block;
                padding:       0.25rem;
                color:         $fg-color;
                background:    $bg-color;
                border-radius: 0.75rem;
                transform:     translate(-75%, -135%);
            }
        }
    }
}
