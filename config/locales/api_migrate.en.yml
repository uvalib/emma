# config/locales/api_migrate.en.yml
#
# EMMA data field/value migrations
#
# Current values can be checked via the "/data/counts" endpoint.
#
# 0.0.5 data migrations were tuned according to the results from that endpoint
# as of 2021-10-20 at 20:20 EST.
#
# noinspection SpellCheckingInspection

en:

  emma:

    api_migrate:

      # =======================================================================
      # Each entry has the following form:
      # =======================================================================

      _template:

        # @see ApiMigrate#TRANSFORM_METHODS

        existing_field:

          # Remove the named field.  This is ignored if :translate is present.
          delete_field: Boolean

          # Pre-process field value(s) before :translate (if present).
          pre_translate:
            - method_1                    # - apply ApiMigrate#method_1
            - method_2                    # - then apply ApiMigrate#method_2

          # Translate to new field values based on old field value pattern(s).
          translate:
            new_1: ~                      # Skipped (no equivalent old value)
            new_2: 'old_value'            # Transform old value to new_2
            new_3: !ruby/regexp /pat/i    # Matching old values to new_3
            new_4: [Array<String,Regexp>] # Old values matching any to new_4
            new_5: !ruby/regexp /.*/      # All old values to new_5

          # Process field value(s) after :pre_translate/:translate.
          post_translate:
            - method_1                    # - apply ApiMigrate#method_1
            - method_2                    # - then apply ApiMigrate#method_2

          # Modify field value(s) after :translate/:post_translate.
          normalize:
            - method_1                    # - apply ApiMigrate#method_1
            - method_2                    # - then apply ApiMigrate#method_2

          # Modify field cardinality by giving the new limits for the number of
          # items in the field value.
          new_min_max:  [min, max]

          # As a final step, move the named field to a new name.
          new_name:     'field_name'      # String or Symbol

      # =======================================================================
      # Generic transformations for data quality
      # =======================================================================

      generic: &GENERIC_TRANSFORMS

        dc_creator:
          normalize:                normalize_creator

        dc_identifier:
          normalize:                normalize_identifier

        dc_relation:
          normalize:                normalize_identifier

        dcterms_dateAccepted:
          normalize:                normalize_day

        emma_lastRemediationDate:
          normalize:                normalize_datetime

        emma_repositoryMetadataUpdateDate:
          normalize:                normalize_datetime

        parent-entry-search:
          # A parameter that, for some span of time, crept into persisted data.
          delete_field:             true

        rem_metadataSource:
          normalize:                normalize_metadata_source

        rem_remediatedBy:
          normalize:                normalize_text_list

        rem_image_count:
          # IA-only field that ended up as a part of initial bulk uploads.
          delete_field:             true

      # =======================================================================
      # Changes to emma_data fields for EMMA Unified Ingest API version 0.0.5
      # =======================================================================

      '0_0_5':

        <<: *GENERIC_TRANSFORMS

        bib_version:
          new_name:                 'emma_version'

        dc_provenance:
          delete_field:             true

#       dc_rights:
#         translate:
#           copyright:              ~ # 'copyright'
#           cc0:                    'creativeCommons'
#           ccBy:                   ~
#           ccBySa:                 ~
#           ccByNc:                 ~
#           ccByNcSa:               ~
#           ccByNd:                 ~
#           ccByNcNd:               ~
#           license:                ~
#           embargo:                ~
#           publicDomain:           ~ # 'publicDomain'
#           other:                  ~ # 'other'

        emma_lastRemediationDate:
          new_name:                 'rem_remediationDate'
          normalize:                normalize_datetime

        emma_lastRemediationNote:
          new_name:                 'rem_comments'
          pre_translate:
            - extract_format_feature
            - extract_remediated_aspects

        emma_repositoryMetadataUpdateDate:
          new_name:                 'emma_repositoryUpdateDate'
          normalize:                normalize_datetime

        rem_complete:
          normalize:                normalize_boolean

        rem_quality:
          new_name:                 'rem_textQuality'
          new_min_max:              [0,1]
          post_translate:           summarize_quality
          translate:
            ### NEW VALUE ###       ### OLD VALUE PATTERN(S) ###
            rawOcr:                 'raw_ocr'
            cleanedOcr:             'cleaned_ocr'
            rekeyed:                ~ # 'rekeyed'
            proofread:              ~ # 'proofread'
            published:              ~ # 'published'

        rem_remediation:
          new_name:                 'rem_remediatedAspects'
          pre_translate:            normalize_text_list
          post_translate:           preserve_remediation_comments
          translate:
            ### NEW VALUE ###       ### OLD VALUE PATTERN(S) ###
            scannedAndOcrd:
              - "Scanned and OCR'd"
              - !ruby/regexp /(?<!not )ocr.d|^ocr$/i
            proofreadCorrectedOcr:
              - 'Proofread and Corrected OCR'
              - !ruby/regexp /(?<!not )(corrected|proofread|proofed|cleaned)/i
            addedBookmarks:
              - 'Added Bookmarks'
              - !ruby/regexp /(?<!not )bookmark(ed|s)?/i
            taggedPdf:
              - 'Tagged PDF'
              - !ruby/regexp /(?<!not )tagged/i
            addedImageDescriptions:
              - 'Added Image Descriptions'
              - !ruby/regexp /(?<!not )(alt-text|image +descriptions?)/i
              - !ruby/regexp /images? +described?|described? +images?/i
            structuredHeadings:
              - 'Structured Headings'
              - !ruby/regexp /^headings$/i
              - !ruby/regexp /(format(ted)?|structured?)[ -]+headings?/i
              - !ruby/regexp /headings? +(format(ted)?|structured?|markup)/i
            linkedToc:
              - 'Linked TOC'
              - !ruby/regexp /table +of +contents?|^toc$/i
              - !ruby/regexp /link(ed|s) +toc|toc +link(ed|s)/i
            fixedTables:
              - 'Fixed Tables'
              - !ruby/regexp /(format(ted)?|structured?)[ -]+tables?/i
              - !ruby/regexp /tables? +(format(ted)?|structured?|markup)/i
            addedMathMl:            !ruby/regexp /MathML/i
            foreignLanguageMarkup:  !ruby/regexp /language/i
            transcribersNotes:      !ruby/regexp /transcriber/i
            annotations:            !ruby/regexp /annotations?/i

        rem_remediationComments:
          # NOTE: field being renamed; this is here to catch edge-cases.
          new_name:                 'rem_comments'

        rem_source:
          translate:
            ### NEW VALUE ###       ### OLD VALUE PATTERN(S) ###
            bookshare:              !ruby/regexp /Bookshare/i
            hathiTrust:             !ruby/regexp /Hathi *Trust/i
            internetArchive:
              - 'IA'
              - !ruby/regexp /Internet *Archive|archive\.org/i
            openAlex:               !ruby/regexp /Open *Alex/i
            emma:                   !ruby/regexp /EMMA/
            accessTextNetwork:      !ruby/regexp /ATN|Access *Text *Net/
            publisher:              !ruby/regexp /publisher/i
            purchased:              !ruby/regexp /purchase/i
            faculty:                !ruby/regexp /faculty/i
            student:                !ruby/regexp /student/i
            library:                !ruby/regexp /library/i
            otherDso:               !ruby/regexp /dso/i
            other:                  !ruby/regexp /.*/

        rem_coverage:
          post_translate:           set_default_coverage
          normalize:                normalize_coverage
          new_min_max:              [1,1]

        rem_status:
          translate:
            ### NEW VALUE ###       ### OLD VALUE PATTERN(S) ###
            notRemediated:          'unremediated'
            remediated:             ~ # 'remediated'
            bornAccessible:         'born_accessible'
          post_translate:           derive_default_coverage
