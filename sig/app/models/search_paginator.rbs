class SearchPaginator < Paginator
  # Finish setting of pagination values based on the result list and original
  # URL parameters.
  #
  # @param [Api::Record, Array, Hash] values
  # @param [Symbol, nil]              as      Only for Api::Record or Array.
  # @param [Hash]                     opt
  #
  # @return [void]
  #
  # -
  # === Variations
  # +
  #
  # @overload finalize(result, **opt)
  #   Generally for Record-related models.
  #   @param [Hash]               values
  #   @param [Hash]               opt     Passed to #url_for.
  #
  # @overload finalize(result, as: nil, **opt)
  #   Generally for other models (e.g. API-related).
  #   @param [Api::Record, Array] values
  #   @param [Symbol, nil]        as      Method to extract items from result.
  #   @param [Hash]               opt     Passed to #next_page_path.
  #
  def finalize
    : (symHash              values,                   **untyped search) -> void
    | (Api::Record|anyArray values, ?(Symbol|nil) as, **untyped search) -> void

  # Analyze the *list* object to generate the path for the next page of
  # results.
  #
  # @param [Search::Message::SearchTitleList, Array<Search::Record::MetadataRecord>, nil] list
  # @param [Hash, nil] url_params     Current request parameters.
  #
  # @return [String]                  Path to generate next page of results.
  # @return [nil]                     If there is no next page.
  #
  def next_page_path: (?list: Search::Message::SearchTitleList|Array[Search::Record::MetadataRecord]|nil, **untyped url_params) -> (String | nil)
end
