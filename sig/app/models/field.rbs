# Namespace for classes that manage the representation of data fields involved
# in search, ingest or upload.
#
module Field
  include Field::Property

  include Field::Configuration

  DEFAULT_MODEL: Symbol

  # Generate an appropriate field subclass instance if possible.
  #
  # @param [Symbol, String, Class, Model, *] item
  # @param [Symbol]                          field
  # @param [FieldConfig, nil]                prop
  # @param [*]                               value
  #
  # @return [Field::Type]             Instance based on *item* and *field*.
  # @return [nil]                     If *field* is not valid.
  #
  def self.for: (untyped item, Symbol field, ?prop: FieldConfig|nil, ?value: untyped) -> (Field::Type | nil)

end
