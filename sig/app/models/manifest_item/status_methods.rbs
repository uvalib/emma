module ManifestItem::StatusMethods
  # @private
  UPDATE_STATUS_OPTS: symArray

  # Update status field values.
  #
  # @param [ManifestItem,Hash,nil] item   Default: self
  # @param [Boolean]       file
  # @param [Boolean]       data
  # @param [Boolean]       ready
  # @param [Boolean]       overwrite  If *false* only add status values.
  # @param [Hash]          added      Fields that will be added to the item
  #
  # @return [ManifestItem, Hash]
  #
  def update_status!: ( (symHash)          item, file: bool|nil, data: bool|nil, ready: bool|nil, overwrite: bool, **untyped added) -> symHash
                    | (?(ManifestItem|nil) item, file: bool|nil, data: bool|nil, ready: bool|nil, overwrite: bool, **untyped added) -> ManifestItem

  # Evaluate the readiness of ManifestItem for being included in a submission.
  #
  # @param [ManifestItem,Hash,nil] item   Source of field values (def: self).
  # @param [Boolean]               symbol
  # @param [Hash]                  added  Additional field values to use.
  #
  # @return [ReadyStatus]                 If *symbol* is *false*.
  # @return [Symbol]
  #
  def evaluate_ready_status: (?(ManifestItem|symHash|nil) item, ?symbol: true,  **untyped added) -> Symbol
                           | (?(ManifestItem|symHash|nil) item,  symbol: false, **untyped added) -> ReadyStatus

  # Evaluate the readiness of the file upload associated with a ManifestItem.
  #
  # @param [ManifestItem,Hash,nil] item   Source of field values (def: self).
  # @param [Boolean]               symbol
  # @param [Hash]                  added  Additional field values to use.
  #
  # @return [DataStatus]                  If *symbol* is *false*.
  # @return [Symbol]
  #
  def evaluate_file_status: (?(ManifestItem|symHash|nil) item, ?symbol: true,  **untyped added) -> Symbol
                          | (?(ManifestItem|symHash|nil) item,  symbol: false, **untyped added) -> FileStatus

  # Evaluate the readiness of ManifestItem metadata.
  #
  # @param [ManifestItem, Hash] item    The source of current field values.
  # @param [Boolean]            symbol
  # @param [Hash]               added   Additional field values to use.
  #
  # @return [DataStatus]                If *symbol* is *false*.
  # @return [Symbol]
  #
  def evaluate_data_status: (?(ManifestItem|symHash|nil) item, ?symbol: true,  **untyped added) -> Symbol
                          | (?(ManifestItem|symHash|nil) item,  symbol: false, **untyped added) -> DataStatus

  # Evaluate field values for readiness.
  #
  # @param [ManifestItem,Hash,nil] item   Source of field values (def: self).
  #
  # @return [Boolean]
  #
  def ready?: (?(ManifestItem|symHash|nil) item) -> bool

  # Indicate whether the given status is OK.
  #
  # @param [*]      item     Field values, or a value to check (default: self).
  # @param [Symbol] column   Field name.
  #
  def status_ok?: (?(ManifestItem|symHash|String|Symbol|nil) item, column: Symbol) -> bool

  private

  def self.included: (Module base) -> void
end
