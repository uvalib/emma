# Class methods for accessing Upload records.
#
module Upload::LookupMethods
  def included: (Module base) -> void

  include Upload::WorkflowMethods

  extend ::Upload::LookupMethods

  def get_record: (symHash|Symbol|String|Integer|Upload identifier) -> (Upload | nil)

  def get_records: (*(symHash|Symbol|String|Integer|Upload) identifiers, **untyped opt) -> Array[Upload]

  # The #search_records method returns a hash with these fields in this order.  # NOTE: to Record::Searchable
  #
  #   :offset   The list offset for display purposes (not the SQL OFFSET).
  #   :limit    The page size.
  #   :page     The ordinal number of the current page.
  #   :first    If the given :page is the first page of the record set.
  #   :last     If the given :page is the last page of the record set.
  #   :total    Count of all matching records.
  #   :min_id   The :id of the first matching record.
  #   :max_id   The :id of the last matching record.
  #   :groups   Table of counts for each state group.
  #   :pages    An array of arrays where each element has the IDs for that page
  #   :list     An array of matching Upload records.
  #
  # @type [Hash{Symbol=>Any}]
  #
  SEARCH_RECORDS_TEMPLATE: symHash

  # Local options consumed by #search_records.                                  # NOTE: to Record::Searchable
  #
  # @type [Array<Symbol>]
  #
  SEARCH_RECORDS_OPTIONS: symArray

  def search_records: (*(String|Integer|Upload|Array[String|Integer|Upload]) identifiers, **untyped opt) -> symHash

  def get_relation: (*(String|Integer|Upload|Array[String|Integer|Upload]) identifiers, **untyped opt) -> ActiveRecord::Relation

  def group_by_state: (ActiveRecord::Relation relation) -> symHash
end
