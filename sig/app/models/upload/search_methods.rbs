# Class methods for accessing Upload records.
#
module Upload::SearchMethods
  include Record::Searchable

  include Upload::SortMethods

  include Upload::WorkflowMethods

  extend ::Upload::SearchMethods

  # make_relation
  #
  # @param [Array<String, Hash>]     terms
  # @param [Hash,String,Boolean,nil] sort   No sort if *nil*, *false* or blank.
  # @param [Hash]                    opt    Passed to #where except:
  #
  # @option opt [Integer, nil]      :offset
  # @option opt [Integer, nil]      :limit
  # @option opt [String, Date]      :start_date   Earliest :updated_at.
  # @option opt [String, Date]      :end_date     Latest :updated_at.
  # @option opt [String, Date]      :after        All :updated_at after this.
  # @option opt [String, Date]      :before       All :updated_at before this.
  # @option opt [String,Symbol,nil] :meth         Caller for diagnostics.
  #
  # @return [ActiveRecord::Relation]
  #
  def make_relation: (*(String|strArray|nil) terms, sort: symHash|String|bool|nil, **untyped opt) -> ActiveRecord::Relation

  # A table of counts for items in each state group.
  #
  # @param [ActiveRecord::Relation] relation
  #
  # @return [Hash{Symbol=>Integer}]
  #
  def group_counts: (ActiveRecord::Relation relation) -> symHash

  private

  def self.included: (Module base) -> void
end
