module User::Assignable
  # :nocov:
  #include Record::Assignable
  # :nocov:

  # Parameter keys related to password management.
  #
  # @type [Array<Symbol>]
  #
  PASSWORD_KEYS: symArray

  # Ensure that :status_date is set if :status is updated.
  #
  # @param [Model, Hash, ActionController::Parameters, nil] attr
  # @param [Hash]                                           opt
  #
  # @return [Hash]
  #
  def normalize_attributes: ((Model|prmHash|nil) attr, **untyped opt) -> symHash

  # Ensure that :password and :password_confirmation are allowed.
  #
  # @return [Array<Symbol>]
  #
  def allowed_keys: () -> symArray

  # Allow passing #PASSWORD_KEYS to #normalize_attributes.
  #
  # @param [Symbol]   k
  # @param [any, nil] v
  #
  # @return [String]                  The reason why *k* will be rejected.
  # @return [nil]                     If *k* is acceptable.
  #
  def invalid_field: (Symbol k, untyped v) -> (String | nil)

  private

  def self.included: (Module base) -> void
end
