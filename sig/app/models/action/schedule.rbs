# Control record scheduling a reviewer.
#
# @see file:config/locales/state_table.en.yml *en.emma.state_table.action.schedule*
#
# NOTE: from "Review sub-sequence"
#
# @!method started?
# @!method scheduling?
# @!method assigning?
# @!method holding?
# @!method assigned?
# @!method canceled?
# @!method aborted?
#
# @!method started!
# @!method scheduling!
# @!method assigning!
# @!method holding!
# @!method assigned!
# @!method canceled!
# @!method aborted!
#
class Action::Schedule < Action::Single
  include Record::Sti::Leaf

  include Record::Steppable

  # Schedule a review.
  #
  # @param [Hash] opt
  #
  # @option opt [Boolean] :async      If *true* run callback asynchronously.
  # @option opt [Symbol]  :meth       Name of caller (for logging).
  #
  # @return [Boolean]
  #
  def schedule!: (**untyped opt) -> bool

  # Assign a reviewer.
  #
  # @param [Hash] opt
  #
  # @option opt [Boolean] :async      If *true* run callback asynchronously.
  # @option opt [Symbol]  :meth       Name of caller (for logging).
  #
  # @return [Boolean]
  #
  def assign!: (**untyped opt) -> bool

  # A textual description of the type of the Model instance.
  #
  # @return [String]
  #
  def self.describe_type: (*untyped _ignored) ?{ () -> untyped } -> String

  # A textual description of the status of the Action instance.
  #
  # @param [Action] action
  # @param [Hash]   opt
  #
  # @return [String]
  #
  def self.describe_status: (Action action, **untyped opt) -> String
end
