# Manage creation of an entry in the Unified Index.
#
# @see file:config/locales/state_table.en.yml *en.emma.state_table.action.index*
#
# @!method started?
# @!method indexing?
# @!method indexed?
# @!method canceled?
# @!method aborted?
#
# @!method started!
# @!method indexing!
# @!method indexed!
# @!method canceled!
# @!method aborted!
#
class Action::Index < Action::BulkPart
  include Record::Sti::Leaf

  include Record::Steppable

  include Record::Uploadable

  # Update database fields, including the structured contents of the :emma_data
  # field.
  #
  # @param [Hash, ActionController::Parameters, Model, nil] attr
  # @param [Hash, nil]                                      opt
  #
  # @return [void]
  #
  # @see Record::EmmaData#EMMA_DATA_KEYS
  #
  def assign_attributes: ((Model|prmHash|nil) attr, ?(symHash|nil) opt) -> void

  # Create/upload the index entry.
  #
  # @param [Hash] opt
  #
  # @option opt [Boolean] :async      If *true* run callback asynchronously.
  # @option opt [Symbol]  :meth       Name of caller (for logging).
  #
  # @return [Boolean]
  #
  def index!: (**untyped opt) -> bool

  # Indicate whether the item is in the index.
  #
  # @param [String, nil] sid          Default: `#sid_value`
  # @param [Hash]        opt
  #
  def in_index?: (?(String|nil) sid, **untyped opt) -> bool

  # For a (member repository) submission in the :indexing state, check to
  # determine whether the index has finally received the associated update from
  # the member repository.  If so then advance the workflow state.
  #
  # @param [String, nil] sid          Default: `#sid_value`
  # @param [Boolean]     advance      If *false* do not advance workflow state.
  #
  # @return [String]
  #
  def check_indexed: (?(String|nil) sid, ?advance: bool, **untyped opt) -> String

  # A textual description of the type of the Model instance.
  #
  # @return [String]
  #
  def self.describe_type: (*untyped, **untyped) ?{ () -> untyped } -> String

  # A textual description of the status of the Action instance.
  #
  # @param [Action] action
  # @param [Hash]   opt
  #
  # @return [String]
  #
  def self.describe_status: (Action action, **untyped opt) -> String
end
