# Common logic for all channels.
#
module ApplicationCable::Common
  include ApplicationCable::Logging

  # @type [Array<Symbol>]
  CHANNEL_PARAMS: symArray

  # Hash keys which should not be included with the data stored in the class
  # instance.
  #
  # @type [Array<Symbol>]
  #
  def ignored_keys: () -> symArray

  # Normalize received stream data.
  #
  # @param [*]           payload
  # @param [Symbol, nil] meth         Calling method (for diagnostics).
  # @param [Hash]        opt
  #
  # @return [Hash{Symbol=>*}]
  #
  def normalize_inbound: (untyped payload, ?meth: Symbol|nil, **untyped opt) -> symHash

  # Normalize stream payload data.
  #
  # @param [*]           payload
  # @param [Symbol, nil] meth         Calling method (for diagnostics).
  # @param [Hash]        opt
  #
  # @return [Hash{Symbol=>*}]
  #
  def normalize_outbound: (untyped payload, ?meth: Symbol|nil, **untyped opt) -> symHash

  private

  def self.included: (Module base) -> void
end
