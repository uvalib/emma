# Definitions for job logging.
#
# == Usage Notes
# Include in each job class definition to resolve #job_name properly.
#
module ApplicationJob::Logging
  extend ActiveSupport::Concern

  include Emma::Common

  include Emma::Debug

  #include ActiveJob::Core

  #include ActiveJob::Execution

  #include ActiveJob::Logging

  # initialize
  #
  # @param [*]    args                Assigned to ActiveJob::Core#arguments.
  # @param [Hash] opt                 Appended to ActiveJob::Core#arguments.
  #
  def initialize: (*untyped args, **untyped opt) -> void

  # Run the job asynchronously.
  #
  # @note The subclass *must* define its own #perform method; that definition
  #   *may* call this via `super` (but does not have to).
  #
  # @param [Array] args
  # @param [Hash]  opt
  #
  # @return [*]                       Return value of #perform.
  #
  def perform: (*untyped args, **untyped opt) -> untyped

  # Run the job immediately.
  #
  # @param [Array] args               Assigned to ActiveJob::Core#arguments.
  # @param [Hash]  opt
  #
  # @return [*]                       Return value of #perform.
  #
  def perform_now: (*untyped args, **untyped opt) -> untyped

  # set_arguments
  #
  # @param [Array] args
  # @param [Hash]  opt
  #
  # @return [Array]                   New value of #arguments.
  #
  def set_arguments: (*untyped args, **untyped opt) -> anyArray

  def job_warn: (*untyped args, ?meth: Symbol|nil) { () -> String } -> (true | nil)

  def job_name: () -> String

  @job_name: String

  def job_leader: (ApplicationJob job) -> String

  def job_inspect: (ApplicationJob job) -> String

  def arguments_inspect: (ApplicationJob job) -> String

  def record_inspect: (ApplicationRecord r) -> String

  def hash_inspect: (anyHash|_ToH h) -> String

  def array_inspect: (anyArray|_ToA[untyped] a) -> String

  def item_inspect: (untyped v) -> String

  def __debug_job
    : (ApplicationJob job, *untyped args, **untyped opt) ?{ () -> untyped } -> nil
    | (ApplicationJob job,                **untyped opt)  { () -> untyped } -> nil
    | (                    *untyped args, **untyped opt) ?{ () -> untyped } -> nil
    | (                                   **untyped opt)  { () -> untyped } -> nil

  module ClassMethods
    include ApplicationJob::Logging
  end

  module InstanceMethods
    include ApplicationJob::Logging

    def job_inspect: (?(ApplicationJob|nil) job) -> String

    def arguments_inspect: (?(ApplicationJob|nil) job) -> String

    def __debug_job
      : (ApplicationJob job, *untyped args, **untyped opt) ?{ () -> untyped } -> nil
      | (ApplicationJob job,                **untyped opt)  { () -> untyped } -> nil
      | (                    *untyped args, **untyped opt) ?{ () -> untyped } -> nil
      | (                                   **untyped opt)  { () -> untyped } -> nil
  end

  private

  include InstanceMethods
end
