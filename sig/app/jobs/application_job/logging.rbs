# Definitions for job logging.
#
module ApplicationJob::Logging
  extend ActiveSupport::Concern

  include Emma::Common

  include Emma::Debug

  include Emma::ThreadMethods

  #include ActiveJob::Execution

  #include ActiveJob::Logging

  # Run the job asynchronously.
  #
  # @note The subclass *must* define its own #perform method; that definition
  #   *may* call this via `super` (but does not have to).
  #
  # @param [Array] args
  # @param [Hash]  opt
  #
  # @return [any, nil]                Return value of #perform.
  #
  def perform: (*untyped args, **untyped opt) -> untyped

  # Run the job immediately.
  #
  # @param [Array] args               Assigned to ActiveJob::Core#arguments.
  # @param [Hash]  opt
  #
  # @return [any, nil]                Return value of #perform.
  #
  def perform_now: (*untyped args, **untyped opt) -> untyped

  # set_arguments
  #
  # @param [Array] args
  # @param [Hash]  opt
  #
  # @return [Array]                   New value of #arguments.
  #
  def set_arguments: (*untyped args, **untyped opt) -> anyArray

  def job_warn: (*untyped args, ?meth: Symbol|nil) { () -> String } -> (true | nil)

  TAG_LEADER: String

  def job_tag: (?(ApplicationJob|Class)? arg, ?tag: String|nil, ?tid: String|nil, **untyped _ignored) -> String

  def job_inspect: (?ApplicationJob? job) -> String

  def arguments_inspect: (?ApplicationJob? job) -> (String | nil)

  def record_inspect: (ApplicationRecord r) -> String

  def hash_inspect: (anyHash|_ToH[untyped,untyped] h) -> String

  def array_inspect: (anyArray|_ToA[untyped] a) -> String

  def item_inspect: (untyped v) -> String

  # Send debugging output to the console.
  #
  # @param [Array<*>] args
  # @param [Hash]     opt
  # @param [Proc]     blk             Passed to #__debug_items
  #
  # @return [nil]
  #
  def __debug_job
    : (ApplicationJob job, *untyped args, **untyped opt) ?{ () -> untyped } -> nil
    | (ApplicationJob job,                **untyped opt)  { () -> untyped } -> nil
    | (                    *untyped args, **untyped opt) ?{ () -> untyped } -> nil
    | (                                   **untyped opt)  { () -> untyped } -> nil

  module ClassMethods
    include ApplicationJob::Logging
  end
end
