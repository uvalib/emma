# Handle "/manifest_item" requests.
#
# @see ManifestItemDecorator
# @see ManifestItemsDecorator
# @see file:app/views/manifest_item/**
#
class ManifestItemController < ApplicationController
  include UserConcern

  include ParamsConcern

  include OptionsConcern

  include SessionConcern

  include RunStateConcern

  include PaginationConcern

  include SerializationConcern

  include ManifestItemConcern

  # :nocov:
  #include AbstractController::Callbacks

  #include ActionController::RespondWith

  #extend CanCan::ControllerAdditions::ClassMethods

  # Results for :index.
  #
  # @return [Array<ManifestItem>]
  # @return [Array<String>]
  # @return [nil]
  #
  attr_reader list: Array[ManifestItem] | strArray | nil

  # API results for :show.
  #
  # @return [ManifestItem, nil]
  #
  attr_reader item: ManifestItem | nil

  @group_counts: symHash

  # == GET /manifest_item/:manifest[?id=(:id|RANGE_LIST)]
  #
  # Display the items for the given Manifest.
  #
  # @see #manifest_item_index_path                 Route helper
  # @see ManifestItemConcern#find_or_match_manifest_items
  #
  def index: () -> nil

  # == GET /manifest_item/show/:manifest/:id
  #
  # Display the values of a single manifest item.
  #
  # @see #show_manifest_item_path                  Route helper
  # @see ManifestItemConcern#get_manifest_item
  #
  def show: () -> void

  # == GET /manifest_item/new/:manifest
  #
  # Initiate creation of a new ManifestItem by displaying the form which
  # prompts to upload a file and collects metadata for the new item.
  #
  # @see #new_manifest_item_path                   Route helper
  # @see ManifestItemConcern#new_manifest_item
  # @see ManifestItemController#create
  # @see file:app/assets/javascripts/feature/model-form.js
  #
  def new: () -> void

  # == POST  /manifest_item/create/:manifest
  # == PUT   /manifest_item/create/:manifest
  # == PATCH /manifest_item/create/:manifest
  #
  # Invoked from the handler for the Uppy 'upload-success' event to finalize
  # the creation of a new row.
  #
  # @see #create_manifest_item_path                Route helper
  # @see ManifestItemConcern#create_manifest_item
  # @see ManifestItemController#new
  #
  def create: () -> void

  # == GET /manifest_item/edit/:manifest/:id
  #
  # Initiate modification of an existing item by prompting for metadata
  # changes and/or upload of a replacement file.
  #
  # @see #edit_manifest_item_path                  Route helper
  # @see ManifestItemConcern#edit_manifest_item
  # @see ManifestItemController#update
  # @see file:app/assets/javascripts/feature/model-form.js
  #
  def edit: () -> void

  # == PUT   /manifest_item/update/:manifest/:id
  # == PATCH /manifest_item/update/:manifest/:id
  #
  # Finalize modification of an existing item.
  #
  # @see #update_manifest_item_path                Route helper
  # @see ManifestItemConcern#update_manifest_item
  # @see ManifestItemController#edit
  #
  def update: () -> void

  # == GET /manifest_item/delete/:manifest/:id
  # == GET /manifest_item/delete/:manifest/RANGE_LIST[?...]
  #
  # Initiate removal of an existing item along with its associated file.
  #
  # @see #delete_manifest_item_path                Route helper
  # @see ManifestItemConcern#delete_manifest_item
  # @see ManifestItemController#destroy
  #
  def delete: () -> void

  # == DELETE /manifest_item/destroy/:manifest/:id
  # == DELETE /manifest_item/destroy/:manifest/RANGE_LIST[?...]
  #
  # Finalize removal of an existing item.
  #
  # @see #destroy_manifest_item_path               Route helper
  # @see ManifestItemConcern#destroy_manifest_item
  # @see ManifestItemController#delete
  #
  def destroy: () -> void

  # == POST /manifest_item/start_edit/:id
  #
  # Set :editing state and backup fields.
  #
  def start_edit: () -> void

  # == POST /manifest_item/finish_edit/:id
  #
  # Clear :editing state and respond with item and validity information.
  #
  def finish_edit: () -> void

  # == POST /manifest_item/finish_edit/:id
  #
  # Clear :editing state and respond with item and validity information.
  #
  def row_update: () -> void

  # == POST /manifest_item/upload
  #
  # Invoked from 'Uppy.XHRUpload'.
  #
  def upload: () -> void

  # == GET /manifest_item/bulk_new[?source=FILE&batch=true|SIZE&prefix=STRING]
  #
  # Display a form prompting for a bulk operation manifest (either CSV or JSON)
  # containing a row/element for each item to add.
  #
  # @see #bulk_new_manifest_item_path              Route helper
  # @see ManifestItemConcern#bulk_new_manifest_items
  # @see ManifestItemController#bulk_create
  #
  def bulk_new: () -> void

  # == POST /manifest_item/bulk[?source=FILE&batch=true|SIZE&prefix=STRING]
  #
  # Create the specified ManifestItem records, download and store the
  # associated files.
  #
  # @see #bulk_create_manifest_item_path           Route helper
  # @see ManifestItemConcern#bulk_create_manifest_items
  # @see ManifestItemController#bulk_new
  #
  def bulk_create: () -> void

  # == GET /manifest_item/bulk_edit[?source=FILE&batch=true|SIZE&prefix=STRING]
  #
  # Display a form prompting for a bulk operation manifest (either CSV or JSON)
  # containing a row/element for each item to change.
  #
  # @see #bulk_edit_manifest_item_path             Route helper
  # @see ManifestItemConcern#bulk_edit_manifest_items
  # @see ManifestItemController#bulk_update
  #
  def bulk_edit: () -> void

  # == PUT   /manifest_item/bulk[?source=FILE&batch=true|SIZE&prefix=STRING]
  # == PATCH /manifest_item/bulk[?source=FILE&batch=true|SIZE&prefix=STRING]
  #
  # Modify or create the specified ManifestItem records, download and store the
  # associated files (if changed).
  #
  # @see #bulk_update_manifest_item_path           Route helper
  # @see ManifestItemConcern#bulk_update_manifest_items
  # @see ManifestItemController#bulk_edit
  #
  def bulk_update: () -> void

  # == GET /manifest_item/bulk_delete[?force=false]
  #
  # Specify items to delete by :id or RANGE_LIST.
  #
  # @see #bulk_delete_manifest_item_path           Route helper
  # @see ManifestItemConcern#bulk_delete_manifest_items
  # @see ManifestItemController#bulk_destroy
  #
  def bulk_delete: () -> void

  # == DELETE /manifest_item/bulk[?force=true]
  #
  # @see #bulk_destroy_manifest_item_path          Route helper
  # @see ManifestItemConcern#bulk_destroy_manifest_items
  # @see ManifestItemController#bulk_delete
  #
  def bulk_destroy: () -> void

  # Display the failure on the screen -- immediately if modal, or after a
  # redirect otherwise.
  #
  # @param [Exception] error
  # @param [String]    fallback   Def.: #manifest_item_index_path
  # @param [Symbol]    meth       Calling method.
  #
  # @return [void]
  #
  def show_search_failure: (Exception error, ?(String|nil) fallback, ?meth: Symbol|nil) -> void

  # A list of ManifestItems plus validity information.
  #
  # @param [*]       list
  # @param [Hash]    opt              Passed to #index_values.
  #
  # @return [Hash{Symbol=>Hash}]
  #
  def bulk_update_response: (?untyped list, **untyped opt) -> Hash[Symbol,symHash]

  # A list of ManifestItem IDs.
  #
  # @param [*] list
  #
  # @return [Hash{Symbol=>Hash}]
  #
  def bulk_id_response: (?untyped list, **untyped _ignored) -> Hash[Symbol,symHash]

  # @private
  RESPONSE_OUTER: Symbol

  # Response values for de-serializing the index page to JSON or XML.
  #
  # @param [*]      list
  # @param [Symbol] wrap
  # @param [Hash]   opt
  #
  # @return [Hash{Symbol=>Hash}]
  #
  def index_values: (?untyped list, wrap: Symbol|nil, **untyped opt) -> Hash[Symbol,symHash]

  # Response values for de-serializing the show page to JSON or XML.
  #
  # @param [Model, Hash, *] item
  # @param [Hash]           opt
  #
  # @return [Hash{Symbol=>*}]
  #
  def show_values: (?untyped item, **untyped opt) -> symHash
end
