# Handle "/enrollment" requests.
#
class EnrollmentController < ApplicationController
  include UserConcern

  include ParamsConcern

  include SessionConcern

  include RunStateConcern

  include PaginationConcern

  include EnrollmentConcern

  # :nocov:
  #include AbstractController::Callbacks

  ANON_OPS: symArray

  @list: Array[Enrollment] | nil

  # API results for :index.
  #
  # @return [Array<Enrollment>]
  #
  attr_reader list: Array[Enrollment]

  # API results for :show.
  #
  # @return [Enrollment, nil]
  #
  attr_reader item: Enrollment | nil

  # === GET /enrollment
  #
  # List EMMA enrollment requests.
  #
  # @see #enrollment_index_path               Route helper
  # @see ModelConcern#find_or_match_records
  #
  def index: () -> void

  # === GET /enrollment/:id
  #
  # Display details of a EMMA enrollment request.
  #
  # @see #show_enrollment_path        Route helper
  # @see ModelConcern#find_record
  #
  def show: () -> void

  # === GET /enrollment/new
  #
  # For the deployed production application, a request ticket is generated for
  # the new enrollment unless "ticket=false" appears in URL parameters.
  # Otherwise, a request ticket is generated *only* if "ticket=true" appears in
  # URL parameters.
  #
  # This parameter (if provided) is passed to the :create endpoint via a hidden
  # form parameter.
  #
  # @see #new_enrollment_path             Route helper
  # @see EnrollmentConcern#new_record
  # @see EnrollmentDecorator#form_hidden
  #
  def new: () -> void

  # === POST  /enrollment/create
  # === PUT   /enrollment/create
  # === PATCH /enrollment/create
  #
  # For the deployed production application, a request ticket is generated for
  # the new enrollment unless "ticket=false" appears in the form parameters.
  #
  # Otherwise, a request ticket is generated *only* if "ticket=true" appears in
  # the form parameters.
  #
  # @see #create_enrollment_path                  Route helper
  # @see EnrollmentConcern#create_record
  # @see MailConcern#generate_enrollment_ticket
  #
  def create: () -> void

  # === GET /enrollment/edit/(:id)
  #
  # Display a form for modification of an existing EMMA enrollment request.
  #
  # Redirects to #edit_select if :id is not given.
  #
  # @see #edit_enrollment_path          Route helper
  # @see EnrollmentConcern#edit_record
  #
  def edit: () -> void

  # === POST  /enrollment/update/:id
  # === PUT   /enrollment/update/:id
  # === PATCH /enrollment/update/:id
  #
  # @see #update_enrollment_path          Route helper
  # @see EnrollmentConcern#update_record
  #
  def update: () -> void

  # === GET /enrollment/delete/(:id)
  #
  # Redirects to #delete_select if :id is not given.
  #
  # @see #delete_enrollment_path            Route helper
  # @see EnrollmentConcern#delete_records
  #
  def delete: () -> void

  # === DELETE /enrollment/destroy/:id
  #
  # @see #destroy_enrollment_path           Route helper
  # @see EnrollmentConcern#destroy_records
  #
  def destroy: () -> void

  # === GET /enrollment/show_select
  #
  # Show a menu to select a EMMA enrollment request to show.
  #
  # @see #show_select_enrollment_path     Route helper
  #
  def show_select: () -> void

  # === GET /enrollment/edit_select
  #
  # Show a menu to select a EMMA enrollment request to edit.
  #
  # @see #edit_select_enrollment_path     Route helper
  #
  def edit_select: () -> void

  # === GET /enrollment/delete_select
  #
  # Show a menu to select a EMMA enrollment request to delete.
  #
  # @see #delete_select_enrollment_path   Route helper
  #
  def delete_select: () -> void

  # === POST  /enrollment/finalize/:id
  #
  # Finalize an EMMA enrollment request by creating a new Org and User, and
  # removing the Enrollment record.
  #
  # @see #finalize_enrollment_path                    Route helper
  # @see EnrollmentConcern#finalize_enrollment
  # @see EnrollmentConcern#generate_new_users_emails
  #
  def finalize: () -> void
end
