# Manage user accounts as represented in the User table ("/account" pages).
#
# @see AccountDecorator
# @see AccountsDecorator
# @see file:app/views/account/**
#
class AccountController < ApplicationController
  include UserConcern

  include ParamsConcern

  include SessionConcern

  include RunStateConcern

  include PaginationConcern

  include AccountConcern

  LISTS: symArray

  SHOW: symArray

  @list: Array[User] | Array[Integer] | Array[String] | nil

  # Database results for :show.
  #
  # @return [User, nil]
  #
  attr_reader item: User | nil

  INDEX_PAGE: String

  SHOW_PAGE: String

  EDIT_PAGE: String

  # === GET /account
  #
  # List user accounts.
  #
  # @see #users_path                  Route helper
  # @see #account_index_path          Route helper
  #
  def index: () -> void

  # === GET /account/show/(:id)
  #
  # Display details of an existing EMMA user account.
  #
  # Redirects to #show_select if :id is not given.
  # Redirects to #show_current if :id is #CURRENT_ID.
  #
  # @see #show_account_path           Route helper
  #
  def show: () -> void

  # === GET /account/new
  #
  # Display a form for creation of a new EMMA user account.
  #
  # For the deployed production application, a welcome -mail is generated for
  # the new user unless "welcome=false" appears in URL parameters.
  # Otherwise, a welcome email is generated *only* if "welcome=true" appears
  # in URL parameters.
  #
  # This parameter (if provided) is passed to the :create endpoint via a hidden
  # form parameter.
  #
  # @see #new_account_path            Route helper
  #
  def new: () -> void

  # === POST  /account/create
  # === PUT   /account/create
  # === PATCH /account/create
  #
  # Create a new EMMA user account.
  #
  # For the deployed production application, a welcome email is generated for
  # the new user unless "welcome=false" appears in the form parameters.
  #
  # Otherwise, a welcome email is generated *only* if "welcome=true" appears
  # in the form parameters.
  #
  # === Usage Notes
  # In order to allow the database to auto-generate the record ID, the :id
  # parameter will be rejected unless "force=true" is included in the URL
  # parameters (administrator only).
  #
  # @see #create_account_path                 Route helper
  #
  def create: () -> void

  # === GET /account/edit/(:id)
  #
  # Display a form for modification of an existing EMMA user account.
  #
  # Redirects to #edit_select if :id is not given.
  # Redirects to #edit_current if :id is #CURRENT_ID.
  #
  # @see #edit_account_path           Route helper
  #
  def edit: () -> void

  # === PUT   /account/update/:id
  # === PATCH /account/update/:id
  #
  # Update an existing EMMA user account.
  #
  # @see #update_account_path                 Route helper
  #
  def update: () -> void

  # === GET /account/delete/(:id)
  #
  # Select existing EMMA user account(s) to remove.
  #
  # Redirects to #delete_select if :id is not given.
  #
  # @see #delete_account_path           Route helper
  #
  def delete: () -> void

  # === DELETE /account/destroy/:id
  #
  # Remove existing EMMA user account(s).
  #
  # @see #destroy_account_path            Route helper
  #
  def destroy: () -> void

  # === GET /account/list_all
  #
  # List all user accounts.
  #
  # @see AccountController#list_items
  #
  def list_all: () -> void

  # === GET /account/list_org
  #
  # List all user accounts in the same organization as the current user.
  #
  def list_org: () -> void

  # Setup pagination for lists of accounts.
  #
  # @param [Hash, nil] prm            Default: from `paginator`.
  # @param [Boolean]   for_org
  #
  # @return [Hash]
  #
  # @see AccountConcern#get_accounts
  #
  def list_items: (?(symHash|nil) prm, for_org: bool) -> symHash

  # === GET /account/show_current
  #
  # Display details of the current EMMA user account.
  #
  # @see #show_current_account_path   Route helper
  #
  def show_current: () -> void

  # === GET /account/edit_current
  #
  # Display a form for modification of the current EMMA user account.
  #
  # @see #edit_current_account_path   Route helper
  #
  def edit_current: () -> void

  # === GET /account/show_select
  #
  # Show a menu to select a user to show.
  #
  # @see #show_select_account_path    Route helper
  #
  def show_select: () -> void

  # === GET /account/edit_select
  #
  # Show a menu to select a user to edit.
  #
  # @see #edit_select_account_path    Route helper
  #
  def edit_select: () -> void

  # === GET /account/delete_select
  #
  # Show a menu to select a user to delete.
  #
  # @see #delete_select_account_path  Route helper
  #
  def delete_select: () -> void
end
