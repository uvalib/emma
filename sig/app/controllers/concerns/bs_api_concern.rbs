# Support methods for the "/bs_api" controller.
#
module BsApiConcern
  extend ActiveSupport::Concern

  include Emma::Json

  include BsApiHelper

  extend Emma::Time

  # Invoke a Bookshare API method for display in the "Bookshare API Explorer".
  #
  # @param [Symbol] meth              One of ApiService#HTTP_METHODS.
  # @param [String] path
  # @param [Hash]   opt               Passed to #api.
  #
  # @return [Hash{Symbol=>Any}]
  #
  def bs_api_explorer: (Symbol meth, String path, **untyped opt) -> symHash

  # To support API testing.
  #
  class ApiTesting
    include Emma::Common

    # Fixed parameter values to use when generating results for the Bookshare
    # API Explorer.
    #
    # @type [Hash{Symbol=>String,Integer}]
    #
    VALUES: Hash[Symbol,(String|Integer)]

    # Group #METHODS by topic in this order.
    #
    # @type [Array<String,Regexp>]
    #
    TOPICS: Array[String|Regexp]

    # Each method to be run in the trial.
    #
    # @type [Array<Symbol>]
    #
    METHODS: symArray

    # Supply parameters for #METHODS from #VALUES.
    #
    # @param [BookshareService] service
    # @param [Hash]             opt
    #
    # @option opt [String]  :bookshareId
    # @option opt [String]  :editionId
    # @option opt [String]  :format
    # @option opt [Integer] :limit
    # @option opt [String]  :organization
    # @option opt [String]  :readingListId
    # @option opt [String]  :resourceId
    # @option opt [String]  :seriesId
    # @option opt [String]  :subscription
    #
    # @return [Hash{Symbol=>Hash}]
    #
    def self.trial_methods: (service: BookshareService, **untyped opt) -> Hash[Symbol,anyHash]

    # run_trials
    #
    # @param [User, nil]               user
    # @param [Hash{Symbol=>Hash}, nil] methods  Default: `#trial_methods`.
    #
    # @return [Hash{Symbol=>Hash}]
    #
    def self.run_trials: (?user: User?, ?methods: Hash[Symbol,anyHash]?) -> Hash[Symbol,anyHash]
  end

  private

  THIS_MODULE: Module
end
