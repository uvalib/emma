# Controller support methods for managing pagination.
#
module PaginationConcern
  extend ActiveSupport::Concern

  include ParamsConcern

  # Pagination information for the current page.
  #
  # @return [Paginator]
  #
  def paginator: (*untyped _ignored) -> Paginator

  @paginator: Paginator

  # Create a Paginator for the current controller action.
  #
  # @param [ApplicationController] ctrlr      Default: calling controller.
  # @param [Class<Paginator>]      paginator  Paginator class.
  # @param [Hash]                  opt        Additions/overrides to `#params`.
  #
  # @return [Paginator]
  #
  def pagination_setup
    : (?(ApplicationController|nil) ctrlr, paginator: singleton(Paginator)|untyped, **untyped opt) -> Paginator
    | (?(ApplicationController|nil) ctrlr,                                          **untyped opt) -> Paginator

  # Clean up pagination-related parameters.
  #
  # @return [void]
  #
  def cleanup_pagination: () -> void

  private

  THIS_MODULE: Module

  # :nocov:
  #include AbstractController::Callbacks::ClassMethods

  #include PaginationConcern
end
