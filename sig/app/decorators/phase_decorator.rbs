# Item presenter for "/phase" pages.
#
# @!attribute [r] object
#   Set in Draper#initialize
#   @return [Phase]
#
class PhaseDecorator < BaseDecorator
  module Paths
    include BaseDecorator::Paths
  end

  # Definitions available to both classes and instances of either this
  # decorator or its related collection decorator.
  #
  module Methods
    include BaseDecorator::Methods
  end

  # Definitions available to instances of either this decorator or its related
  # collection decorator.
  #
  # (Definitions that are only applicable to instances of this decorator but
  # *not* to collection decorator instances are not included here.)
  #
  module InstanceMethods
    include BaseDecorator::InstanceMethods

    include Paths

    include Methods
  end

  # Definitions available to both this decorator class and the related
  # collector decorator class.
  #
  # (Definitions that are only applicable to this class but *not* to the
  # collection class are not included here.)
  #
  module ClassMethods
    include BaseDecorator::ClassMethods

    include Paths

    include Methods
  end

  # Cause definitions to be included here and in the associated collection
  # decorator via BaseCollectionDecorator#collection_of.
  #
  module Common
    def self.included: (Module base) -> void
  end

  include Common
end
