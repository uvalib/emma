# Methods supporting the deletion of Model instances.
#
module BaseCollectionDecorator::Form
  include BaseDecorator::Form

  # Generate a form with controls for deleting a model instance.
  #
  # @param [String] label             Label for the submit button.
  # @param [Hash]   outer             HTML options for outer div container.
  # @param [String] css               Characteristic CSS class/selector.
  # @param [Hash]   opt               Passed to '.model-form.delete' except:
  #
  # @option opt [String] :cancel      Cancel button redirect URL passed to
  #                                     #delete_cancel_button.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def delete_form: (?label: String|nil, ?outer: symHash|nil, ?css: String|nil, **untyped opt) -> ActiveSupport::SafeBuffer

  # delete_submit_option_keys
  #
  # @return [Array<Symbol>]
  #
  def delete_submit_option_keys: () -> symArray

  # delete_submit_options
  #
  # @param [Hash] opt                 Optional option value overrides.
  #
  # @return [Hash{Symbol=>*}]
  #
  def delete_submit_options: (**untyped opt) -> symHash

  # delete_submit_path
  #
  # @param [Array<Model,String>, Model, String, nil] ids
  # @param [Hash]                                    opt
  #
  # @return [String, nil]
  #
  def delete_submit_path: (?(Model|String|Array[Model|String]|nil) ids, **untyped opt) -> (String | nil)

  # Submit button for the delete model form.
  #
  # @param [String, Symbol, nil] action
  # @param [String, nil]         label    Override button label.
  # @param [String, Hash, nil]   url
  # @param [String]              css      Characteristic CSS class/selector.
  # @param [Hash]                opt      Passed to #button_to.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def delete_submit_button: (?action: String|Symbol|nil, ?label: String|nil, ?url: String|symHash|nil, ?css: String|nil, **untyped opt) -> ActiveSupport::SafeBuffer

  # Cancel button for the delete form.
  #
  # @param [Hash] opt                 Passed to #cancel_button
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def delete_cancel_button: (**untyped opt) -> ActiveSupport::SafeBuffer

  # item_ids
  #
  # @param [Array<Model,String>, Model, String, nil] items  Def: `#object`.
  #
  # @return [Array<String>]
  #
  def item_ids: (?(Model|String|Array[Model|String]|nil) items) -> strArray

  private

  def self.included: (Module base) -> void
end
