# Methods supporting display of collections of Model instances.
#
module BaseCollectionDecorator::List
  include BaseDecorator::List

  include BaseCollectionDecorator::Common

  include BaseCollectionDecorator::Pagination

  # Render list items.
  #
  # @param [Integer] row              Starting row number.
  # @param [Integer] index            Starting index number.
  # @param [Hash]    opt              Passed to #list_row.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def list_rows: (?row: Integer|nil, ?index: Integer|nil, **untyped opt) -> ActiveSupport::SafeBuffer

  # Text for #no_records_row. # TODO: I18n
  #
  # @type [String]
  #
  NO_RECORDS: String

  # Hidden row that is shown only when no field rows are being displayed.
  #
  # @param [String] css               Characteristic CSS class/selector.
  # @param [Hash]   opt               Passed to created elements.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def no_records_row: (?css: String|nil, **untyped opt) -> ActiveSupport::SafeBuffer

  # Options used with template :locals.
  #
  # @type [Array<Symbol>]
  #
  VIEW_TEMPLATE_OPT: symArray

  # Generate applied search terms and top/bottom pagination controls.
  #
  # @param [Integer] row              Starting row number.
  # @param [Hash]    opt              Passed to #list_controls.
  #
  # @return [Array<(ActiveSupport::SafeBuffer,ActiveSupport::SafeBuffer)>]
  #
  def index_controls: (?row: Integer|nil, **untyped opt) -> [ActiveSupport::SafeBuffer, ActiveSupport::SafeBuffer]

  # Optional controls to modify the display or generation of the item list in
  # the order of display.
  #
  # @type [Array<Symbol>]
  #
  LIST_CONTROL_METHODS: symArray

  # Optional controls to modify the display or generation of the item list in
  # the order of display.
  #
  # @return [Array<Symbol>]
  #
  def list_control_methods: () -> symArray

  # Optional controls to modify the display or generation of the item list.
  #
  # @param [Hash] opt
  #
  # @return [Array<ActiveSupport::SafeBuffer>]
  #
  def list_controls: (**untyped opt) -> Array[ActiveSupport::SafeBuffer]

  # Optional list style controls in line with the top pagination control.
  #
  # @param [Hash] opt
  #
  # @return [ActiveSupport::SafeBuffer, nil]
  #
  # @see file:javascripts/feature/search-analysis.js *AdvancedFeature*
  #
  def list_styles: (**untyped opt) -> (ActiveSupport::SafeBuffer | nil)

  # Optional list result type controls in line with the top pagination control.
  #
  # @param [Hash] opt
  #
  # @return [ActiveSupport::SafeBuffer, nil]
  #
  # @see file:app/assets/javascripts/controllers/search.js *$mode_menu*
  #
  def list_results: (**untyped opt) -> (ActiveSupport::SafeBuffer | nil)

  # An optional list filter control in line with the top pagination control.
  #
  # @param [Hash] opt
  #
  # @return [ActiveSupport::SafeBuffer, nil]
  #
  # @see file:app/assets/javascripts/feature/records.js *filterPageDisplay()*
  #
  def list_filter: (**untyped opt) -> (ActiveSupport::SafeBuffer | nil)

  # Control the selection of filters displayed by #list_filter.
  #
  # @param [Hash] opt
  #
  # @return [ActiveSupport::SafeBuffer, nil]
  #
  # @see file:app/assets/javascripts/feature/records.js *filterOptionToggle()*
  #
  def list_filter_options: (**untyped opt) -> (ActiveSupport::SafeBuffer | nil)

  private

  def self.included: (Module base) -> void
end
