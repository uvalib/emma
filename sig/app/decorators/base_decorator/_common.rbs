# Common definitions for modules supporting BaseDecorator.
#
# @!attribute [r] object
#   Set in Draper::Decorator#initialize
#   @return [Model]
#
# @!attribute [r] context
#   Set in Draper::Decorator#initialize
#   @return [Hash]
#
module BaseDecorator::Common
  include Emma::Common

  include Emma::Constants

  include Emma::Unicode

  include Emma::Json

  include Emma::TypeMethods

  # HTML tags indicating construction of a <table>.
  #
  # For use with the :tag named option, any of these tags may be passed in to
  # indicate participation in a table; the method will replace it with the
  # appropriate tag as needed.
  #
  # @type [Array<Symbol>]
  #
  HTML_TABLE_TAGS: symArray

  # Indicate whether the given HTML element tag is related to HTML tables.
  #
  # @param [Symbol, String, nil] tag
  #
  def for_html_table?: (Symbol|String|nil tag) -> bool

  # Process a configuration setting to determine whether it indicates a *true*
  # value.
  #
  # @param [any, nil] value
  # @param [Boolean]  default         Returned if *value* is *nil*.
  #
  # @return [Boolean]
  #
  def check_setting: (untyped value, ?default: bool) -> bool

  # Produce a copy of *opt* with 'data-trace-*' attributes.
  #
  # @param [Hash, nil]   opt
  # @param [Symbol, nil] meth         Default: #calling_method.
  #
  # @return [Hash]                    Empty if `DEBUG_ATTRS` is *false*.
  #
  def trace_attrs: (?(symHash|nil) opt, ?(Symbol|nil) meth) -> symHash

  # Inject 'data-trace-*' attributes into *opt*.
  #
  # @param [Hash]        opt
  # @param [Symbol, nil] meth         Default: #calling_method.
  # @param [String]      separator    Chain item delimiter.
  #
  # @return [Hash]                    The modified *opt*.
  #
  def trace_attrs!: (symHash opt, ?(Symbol|nil) meth, ?separator: String) -> symHash

  # Extract 'data-trace-*' attributes from *opt*.
  #
  # @param [Hash]          opt
  # @param [Array<Symbol>] skip
  #
  # @return [Hash]                    Empty if `DEBUG_ATTRS` is *false*.
  #
  def trace_attrs_from: (symHash opt, ?skip: symArray) -> symHash
end
