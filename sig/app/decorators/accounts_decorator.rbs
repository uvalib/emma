# Collection presenter for "/account" pages.
#
# @!attribute [r] object
#   Set in Draper#initialize
#   @return [Array<User>]
#
class AccountsDecorator < BaseCollectionDecorator
  # By default, account listings are not :pageable -- that is, all items
  # matching the search criteria are expected to be rendered in a table which
  # is client-side sortable.
  #
  # @param [ActiveRecord::Relation, Paginator, Array, nil] obj
  # @param [Hash]                                          opt
  #
  def initialize: (?(ActiveRecord::Relation|Paginator|Array[ActiveRecord::Base]|ActiveRecord::Base|nil) obj, **untyped opt) -> void

  # item_ids
  #
  # @param [Array<User,String>, User, String, nil] items  Def: `#object`.
  #
  # @return [Array<String>]
  #
  def item_ids: ((Array[User|String|nil]|User|String|nil) items) -> strArray
end
