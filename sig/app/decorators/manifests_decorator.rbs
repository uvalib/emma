# Collection presenter for "/manifest" pages.
#
# @!attribute [r] object
#   Set in Draper#initialize
#   @return [Array<Manifest>]
#
class ManifestsDecorator < BaseCollectionDecorator
  # :nocov:
  #include ManifestDecorator::SharedInstanceMethods
  #extend  ManifestDecorator::SharedClassMethods
  # :nocov:

  # group_counts
  #
  # @return [Hash{Symbol=>Integer}]
  #
  def group_counts: () -> Hash[Symbol,Integer]

  @group_counts: Hash[Symbol,Integer]

  # Select records based on workflow state group.
  #
  # @param [Hash] counts              A table of group names associated with
  #                                     their overall totals (default:
  #                                     `#group_counts`).
  # @param [Hash] opt                 Passed to inner #html_div except for:
  #
  # @option opt [String]        :curr_path    Default: `request.fullpath`
  # @option opt [String,Symbol] :curr_group   Default from `request_parameters`
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  # @see #STATE_GROUP
  # @see file:app/assets/javascripts/feature/records.js *filterPageDisplay()*
  #
  #def state_group_select: (?counts: Hash[Symbol,Integer]|nil, **untyped opt) -> ActiveSupport::SafeBuffer

  # Control for filtering which records are displayed.
  #
  # @param [Hash] counts              A table of group names associated with
  #                                     their overall totals (default:
  #                                     `#group_counts`).
  # @param [Hash] opt                 Passed to inner #html_div.
  #
  # @return [ActiveSupport::SafeBuffer]
  # @return [nil]                       If #LIST_FILTERING is *false*.
  #
  # @see #STATE_GROUP
  # @see file:app/assets/javascripts/feature/records.js *filterPageDisplay()*
  #
  def list_filter: (?counts:  Hash[Symbol,Integer]|nil, **untyped opt) -> (ActiveSupport::SafeBuffer | nil)

  # Control the selection of filters displayed by #list_filter.
  #
  # @param [Hash] opt                 Passed to #html_div for outer <div>.
  #
  # @option opt [Array] :records      List of upload records for display.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  # @see file:app/assets/javascripts/feature/records.js *filterOptionToggle()*
  #
  def list_filter_options: (**untyped opt) -> ActiveSupport::SafeBuffer
end
