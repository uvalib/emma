# Item presenter for "/periodical" pages.
#
# @!attribute [r] object
#   Set in Draper#initialize
#   @return [Bs::Record::PeriodicalSeriesMetadataSummary]
#
class PeriodicalDecorator < BookshareDecorator
  module Paths
    include BookshareDecorator::Paths
  end

  # Definitions available to both classes and instances of either this
  # decorator or its related collection decorator.
  #
  module Methods
    include BookshareDecorator::Methods
  end

  # Definitions available to instances of either this decorator or its related
  # collection decorator.
  #
  # (Definitions that are only applicable to instances of this decorator but
  # *not* to collection decorator instances are not included here.)
  #
  module InstanceMethods
    include BookshareDecorator::InstanceMethods

    include Paths

    include Methods
  end

  # Definitions available to both this decorator class and the related
  # collector decorator class.
  #
  # (Definitions that are only applicable to this class but *not* to the
  # collection class are not included here.)
  #
  module ClassMethods
    include BookshareDecorator::ClassMethods

    include Paths

    include Methods
  end

  # Cause definitions to be included here and in the associated collection
  # decorator via BaseCollectionDecorator#collection_of.
  #
  module Common
    def self.included: (Module base) -> void
  end

  include Common

  # editions_data
  #
  # @return [Bs::Message::PeriodicalEditionList, nil]
  #
  def editions_data: () -> (Bs::Message::PeriodicalEditionList | nil)

  # editions
  #
  # @return [Array<Bs::Record::PeriodicalEdition>]
  #
  def editions: () -> Array[Bs::Record::PeriodicalEdition]

  @editions: Array[Bs::Record::PeriodicalEdition]

  # Create a link to the details show page for the given item.
  #
  # @param [Hash] opt
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def link: (**untyped opt) -> ActiveSupport::SafeBuffer

  # Catalog item search links.
  #
  # @param [Hash] opt
  #
  # @return [ActiveSupport::SafeBuffer, nil]
  #
  def search_links: (**untyped opt) -> (ActiveSupport::SafeBuffer | nil)

  # Create a link to the search results index page for the given term(s).
  #
  # @param [String] terms
  # @param [Hash]   opt
  #
  # @return [ActiveSupport::SafeBuffer, nil]
  #
  def search_link: (String terms, **untyped opt) -> (ActiveSupport::SafeBuffer | nil)

  # Create a link to latest periodical edition.
  #
  # @param [Hash] opt                 Passed to EditionDecorator#link.
  #
  # @return [ActiveSupport::SafeBuffer, nil]
  #
  def latest_edition_link: (**untyped opt) -> ActiveSupport::SafeBuffer

  # Transform a field value for HTML rendering.
  #
  # @param [Any]       value
  # @param [Symbol, *] field
  # @param [Hash]      opt            Passed to the render method or super.
  #
  # @return [Any]                     HTML or scalar value.
  # @return [nil]                     If *value* or *object* is *nil*.
  #
  def render_value: (untyped value, field: Symbol|String|Array[Symbol|String]|nil, **untyped opt) -> (Field::Type | String | nil)

  # Render a metadata listing of an periodical.
  #
  # @param [Hash, nil] pairs          Additional field mappings.
  # @param [Hash]      opt            Passed to super.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def details: (?pairs: symHash|nil, **untyped opt) -> ActiveSupport::SafeBuffer

  # details_element
  #
  # @param [Integer, nil]        level
  # @param [String, Symbol, nil] role
  # @param [Hash]                opt    Passed to #details.
  # @param [Proc]                block  Passed to #html_join.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def details_element: (?level: Integer|nil, ?role: String|Symbol|nil, **untyped opt) ?{ () -> untyped } -> ActiveSupport::SafeBuffer

  # A sub-section displaying the editions for the periodical.
  #
  # @param [Hash] **opt
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def edition_list: (**untyped opt) -> ActiveSupport::SafeBuffer

  # Render a single entry for use within a list of items.
  #
  # @param [Hash, nil] pairs          Additional field mappings.
  # @param [Hash]      opt            Passed to super.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def list_item: (?pairs: symHash|nil, **untyped opt) -> ActiveSupport::SafeBuffer

  # form_action_link
  #
  # @param [Hash] opt
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def form_action_link: (**untyped opt) -> ActiveSupport::SafeBuffer

  # form_target_description
  #
  # @param [Symbol] action
  #
  # @return [String]
  #
  def form_target_description: (?action: Symbol|nil, **untyped) -> String
end
