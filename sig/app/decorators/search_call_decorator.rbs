# Item presenter for "/search_call" pages.
#
# @!attribute [r] object
#   Set in Draper#initialize
#   @return [SearchCall]
#
class SearchCallDecorator < BaseDecorator
  module SharedPathMethods
    include BaseDecorator::SharedPathMethods
  end

  # Definitions available to both classes and instances of either this
  # decorator or its related collection decorator.
  #
  module SharedGenericMethods
    include BaseDecorator::SharedGenericMethods
  end

  # Definitions available to instances of either this decorator or its related
  # collection decorator.
  #
  # (Definitions that are only applicable to instances of this decorator but
  # *not* to collection decorator instances are not included here.)
  #
  module SharedInstanceMethods
    include BaseDecorator::SharedInstanceMethods

    include SharedPathMethods

    include SharedGenericMethods
  end

  # Definitions available to both this decorator class and the related
  # collector decorator class.
  #
  # (Definitions that are only applicable to this class but *not* to the
  # collection class are not included here.)
  #
  module SharedClassMethods
    include BaseDecorator::SharedClassMethods

    include SharedPathMethods

    include SharedGenericMethods
  end

  # Cause definitions to be included here and in the associated collection
  # decorator via BaseCollectionDecorator#collection_of.
  #
  module SharedDefinitions
    def self.included: (Module base) -> void
  end

end

class SearchCallDecorator
  include SharedDefinitions

  include SharedInstanceMethods

  extend SharedClassMethods

  # Create a link to the details show page for the given item.
  #
  # @param [Hash] opt
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def link: (**untyped opt) -> ActiveSupport::SafeBuffer

  # Element containing a field name.
  #
  # @param [String, Symbol] field
  # @param [Hash]           opt       Passed to #html_span except for:
  #
  # @option opt [Hash] :name          Passed to name #html_span.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def search_call_field: ((String|Symbol) field, **untyped opt) -> ActiveSupport::SafeBuffer

  # Element containing one or more field values.
  #
  # @param [String, Numeric, Array] value
  # @param [Hash]                   opt     Passed to #html_span except for:
  #
  # @option opt [Hash]   :item              Passed to item #html_span.
  # @option opt [String] :separator         Default: `#search_call_connector`.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def search_call_value: ((String|Numeric|anyArray) value, **untyped opt) -> ActiveSupport::SafeBuffer

  # Element separating multiple values.
  #
  # @param [Hash] opt                 Passed to #html_span.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  # === Implementation Notes
  # The element is surrounded by spaces so that a compound value element can be
  # copied and pasted legibly.
  #
  def search_call_connector: (**untyped opt) -> ActiveSupport::SafeBuffer
end
