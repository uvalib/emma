# Service implementation methods.
#
module AwsS3Service::Common
  include ApiService::Common

  include AwsS3Service::Properties

  # Get data from the API.
  #
  # @param [Symbol] operation         API method
  # @param [Array<AwsS3::Message::SubmissionRequest,Model,Hash,String>] items
  # @param [Hash]   opt               Passed to *operation*.
  #
  # @raise [AwsS3Service::RequestError]
  #
  # @return [any]                     Depends on *operation*.
  #
  # -
  # === Variations
  # +
  #
  # @overload api(operation, *items, **opt)
  #   @param [Symbol]        operation
  #   @param [Array<AwsS3::Message::SubmissionRequest,Model,Hash>] items
  #   @param [Hash]          opt
  #   @option opt [String] :bucket  Override bucket implied by *items*
  #
  # @overload api(operation, *sids, **opt)
  #   @param [Symbol]        operation
  #   @param [Array<String>] sids
  #   @param [Hash]          opt
  #   @option opt [String,Symbol] :repo     Used to determine S3 bucket.
  #   @option opt [String]        :bucket   To specify S3 bucket.
  #
  # === Usage Notes
  # Clears and/or sets @exception as a side-effect.
  #
  def api: (Symbol operation, *(AwsS3::Message::SubmissionRequest|Model|symHash|String) items, **untyped opt) -> untyped

  # Construct a message to be returned from the method that executed :api.
  # This provides a uniform call for initializing the object with information
  # needed to build the object to return, including error information.
  #
  # @param [Array<AwsS3::Message::SubmissionRequest,Model,String>] records
  # @param [Array<AwsS3::Message::SubmissionRequest,String>]       succeeded
  # @param [Hash]                                                  opt
  #
  # @return [AwsS3::Message::Response]
  #
  def api_return: (Array[AwsS3::Message::SubmissionRequest|Model|String] records, Array[AwsS3::Message::SubmissionRequest|String] succeeded, **untyped opt) -> AwsS3::Message::Response

  # The AWS S3 bucket associated with the item.
  #
  # @param [AwsS3::Message::SubmissionRequest, Model, Hash, String, Symbol, nil] item
  # @param [Symbol, String, nil] deployment     Def: `#aws_deployment`.
  #
  # @raise [AwsS3Service::RequestError]
  #
  # @return [String]
  #
  def bucket_for: ((AwsS3::Message::SubmissionRequest | Model | symHash | String | Symbol | nil) item, ?(Symbol|String|nil) deployment) -> String

  # Generate an array of submission package identifiers (AWS S3 object keys).
  #
  # @param [AwsS3::Message::SubmissionRequest, Model, Hash, String] item
  #
  # @return [String, nil]
  #
  def submission_id: ((AwsS3::Message::SubmissionRequest | Model | symHash | String) item) -> (String | nil)

  # Allowable AWS S3 Client initializer parameters.
  #
  # @return [Array<Symbol>]
  #
  def client_params: () -> symArray

  @client_params: symArray

  # Get an S3 client instance.
  #
  # @param [Hash] opt                 Passed to Aws::S3::Client#initialize
  #
  # @return [Aws::S3::Client]
  #
  def s3_client: (**untyped opt) -> Aws::S3::Client

  # Get an S3 resource instance.
  #
  # @param [Hash] opt                       Passed to #s3_client except for:
  #
  # @option opt [Aws::S3::Client] :client   Used rather than creating a new one
  #
  # @return [Aws::S3::Resource]
  #
  def s3_resource: (**untyped opt) -> Aws::S3::Resource

  # Get an S3 bucket instance.
  #
  # @param [String] bucket                  Bucket name.
  # @param [Hash]   opt                     Passed to #s3_resource except for:
  #
  # @option opt [Aws::S3::Client] :client   Used rather than creating a new one
  #
  # @return [Aws::S3::Bucket]
  #
  def s3_bucket: (String bucket, **untyped opt) -> Aws::S3::Bucket

  # Upload an individual file to an AWS S3 bucket.
  #
  # @param [String, Aws::S3::Bucket]                 bucket
  # @param [String]                                  key
  # @param [Aws::S3::Object, String, StringIO, File] content
  # @param [Hash]                                    opt
  #
  # @option opt [Symbol]          :meth     Calling method for logging
  # @option opt [Aws::S3::Client] :client
  #
  # @return [String]                  Uploaded object key.
  # @return [nil]                     If the operation failed.
  #
  def aws_put_file: (String|Aws::S3::Bucket bucket, String key, (Aws::S3::Object | String | StringIO | File) content, **untyped opt) -> (String | nil)

  # Download a single file from an AWS S3 bucket.
  #
  # @param [String, Aws::S3::Bucket] bucket
  # @param [String] key
  # @param [Hash]   opt               Passed to #get_object except for:
  #
  # @option opt [Symbol]          :meth     Calling method for logging
  # @option opt [Aws::S3::Client] :client
  #
  # @return [String]                  Content of requested file.
  # @return [nil]                     If the operation failed.
  #
  def aws_get_file: ((String | Aws::S3::Bucket) bucket, String key, **untyped opt) -> (String | nil)

  # Remove a single file from an AWS S3 bucket.
  #
  # @param [String, Aws::S3::Bucket] bucket
  # @param [String] key
  # @param [Hash]   opt               Passed to #get_object except for:
  #
  # @option opt [Symbol]          :meth     Calling method for logging
  # @option opt [Aws::S3::Client] :client
  #
  # @return [String]                  Removed object key.
  # @return [nil]                     If the operation failed.
  #
  def aws_delete_file: ((String | Aws::S3::Bucket) bucket, String key, **untyped opt) -> (String | nil)

  # List files (object keys) in an AWS S3 bucket.
  #
  # @param [String, Aws::S3::Bucket] bucket
  # @param [String, nil] filter       All objects if blank, missing, or '*'.
  # @param [Hash]        opt          Passed to #list_objects_v2 except for:
  #
  # @option opt [Symbol]          :meth     Calling method for logging
  # @option opt [Aws::S3::Client] :client
  #
  # @return [Array<Aws::S3::Object>]
  # @return [nil]                     If the operation failed.
  #
  def aws_list_objects: ((String | Aws::S3::Bucket) bucket, ?(String|nil) filter, **untyped opt) -> (Array[Aws::S3::Object] | nil)

  # Lookup matching AWS S3 object keys if "filter" appears to be a pattern and
  # not a specific filename and extension.
  #
  # @param [String, Aws::S3::Bucket] bucket
  # @param [String, nil]             filter
  # @param [Hash]                    opt      Passed to #aws_list_objects.
  #
  # @return [Array<String>]
  #
  # === Usage Notes
  # This should only be used when transforming a list of key name patterns into
  # actual key names -- use #aws_list_objects directly when checking on the
  # presence of the files themselves.
  #
  def aws_list_object_keys: ((String | Aws::S3::Bucket) bucket, ?(String|nil) filter, **untyped opt) -> strArray

  private

  # Include the shared data structure which holds the definition of the API
  # requests and parameters.
  #
  # @param [Module] base
  #
  def self.included: (Module base) -> void
end
