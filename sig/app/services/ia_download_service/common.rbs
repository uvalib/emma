# Service implementation methods.
#
module IaDownloadService::Common
  include ApiService::Common

  include IaDownloadService::Properties

  include Emma::Common

  include Emma::Json

  # Include user identification.
  #
  # @param [Hash, nil] params         Default: @params.
  #
  # @return [Hash]                    New API parameters.
  #
  def api_options: (?(symHash|nil) params) -> symHash

  # Include IA authorization headers.
  #
  # @param [Hash]         params      Default: @params.
  # @param [Hash]         headers     Default: {}.
  # @param [String, Hash] body        Default: *nil* unless `#update_request?`.
  #
  # @return [Array(Hash,Hash,String)] Message body plus headers for GET.
  # @return [Array(Hash,Hash,Hash)]   Query plus headers for PUT, POST, PATCH
  #
  def api_headers: (?(symHash|nil) params, ?(strHash|nil) headers, ?(String|strHash|nil) body) -> [symHash, strHash, (String|strHash)]

  # Send an Internet Archive "Printdisabled Unencrypted Ebook API" request.
  #
  # @param [Symbol]            verb     Should always be :get.
  # @param [String]            action   Path to IA download.
  # @param [Hash, String, nil] params   Should always be blank.
  # @param [Hash, nil]         headers
  # @param [Hash]              opt
  #
  # @option opt [Boolean]      :no_redirect
  # @option opt [Integer, nil] :redirection
  #
  # @raise [IaDownloadService::EmptyResultError]
  # @raise [IaDownloadService::HtmlResultError]
  # @raise [IaDownloadService::RedirectionError]
  # @raise [IaDownloadService::Error]
  #
  # @return [Faraday::Response]
  # @return [nil]
  #
  # === Usage Notes
  # Sets @response as a side-effect.
  #
  def transmit: (Symbol verb, String action, (symHash|String|nil) params, (strHash|nil) headers, **untyped opt) -> (Faraday::Response | nil)

  private

  # Include the shared data structure which holds the definition of the API
  # requests and parameters.
  #
  # @param [Module] base
  #
  def self.included: (Module base) -> void
end
