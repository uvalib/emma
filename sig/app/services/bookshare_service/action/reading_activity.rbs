# BookshareService::Action::ReadingActivity
#
# == Usage Notes
#
# === From API section 2.9 (Reading Activity):
# Reading activity refers to a set of events that mark a userâ€™s progress
# through a title. These events are location-based, referring to a span of text
# that could be a page, chapter, or an arbitrary set of continuous text.
#
module BookshareService::Action::ReadingActivity
  include BookshareService::Common

  include BookshareService::Testing

  # == POST /v2/readingEvents
  #
  # == 2.9.1. Submit a reading activity event
  # Submit reading activity events that mark different types of reading
  # activity.
  #
  # @param [Hash] opt                 Passed to #api.
  #
  # @option opt [String]       :bookshareId                          *REQUIRED*
  # @option opt [BsFormatType] :format                               *REQUIRED*
  # @option opt [String]       :location                             *REQUIRED*
  # @option opt [String]       :locationDescription
  # @option opt [Integer]      :metric                               *REQUIRED*
  # @option opt [BsMetricType] :metricType                           *REQUIRED*
  #
  # @return [Bs::Message::StatusModel]
  #
  # @see https://apidocs.bookshare.org/reference/index.html#_post-reading-activity-event
  #
  def create_reading_event: (**untyped opt) -> Bs::Message::StatusModel

  # == GET /v2/myReadingPosition/(bookshareId)/(format)
  #
  # == 2.9.2. Get my reading position
  # Get my reading position for a specific title format.
  #
  # @param [String]       bookshareId
  # @param [BsFormatType] format
  # @param [Hash]         opt         Passed to #api.
  #
  # @return [Bs::Message::ReadingPosition]
  #
  # @see https://apidocs.bookshare.org/reference/index.html#_get-reading-position
  #
  def get_reading_position: (bookshareId: String, format: BsFormatType, **untyped opt) -> Bs::Message::ReadingPosition
end
