# BookshareService::Request::MembershipOrganizations
#
# == Usage Notes
#
# === From Membership Management API 2.2 (Membership Assistant - Organizations)
# Membership Assistant users are able to view, create and update organization
# accounts.
#
module BookshareService::Request::MembershipOrganizations
  include BookshareService::Common

  include BookshareService::Testing

  # == GET /v2/organizations/(organizationId)
  #
  # == 2.2.2. Get organization information
  # Get details about the specified organization.
  #
  # @param [String] organization
  # @param [Hash]   opt               Passed to #api.
  #
  # @return [Bs::Message::Organization]
  #
  # @see https://apidocs.bookshare.org/membership/index.html#_get-organization
  #
  def get_organization: (organization: String, **untyped opt) -> Bs::Message::Organization

  # == POST /v2/organizations
  #
  # == 2.2.1. Create an organization
  # Create a new organization.
  #
  # @param [Hash] opt                 Passed to #api.
  #
  # @option opt [String]     :organizationName                      *REQUIRED*
  # @option opt [String]     :address1                              *REQUIRED*
  # @option opt [String]     :address2
  # @option opt [String]     :city                                  *REQUIRED*
  # @option opt [String]     :state
  # @option opt [String]     :country                               *REQUIRED*
  # @option opt [String]     :postalCode                            *REQUIRED*
  # @option opt [String]     :phoneNumber
  # @option opt [String]     :website
  # @option opt [String]     :organizationType                      *REQUIRED*
  # @option opt [String]     :subscriptionType
  # @option opt [BsSiteType] :site
  # @option opt [String]     :contactFirstName                      *REQUIRED*
  # @option opt [String]     :contactLastName                       *REQUIRED*
  # @option opt [String]     :contactPhoneNumber                    *REQUIRED*
  # @option opt [String]     :contactTitle                          *REQUIRED*
  # @option opt [String]     :contactEmailAddress                   *REQUIRED*
  #
  # @return [Bs::Message::Organization]
  #
  # @see https://apidocs.bookshare.org/membership/index.html#_create-organization
  #
  def create_organization: (**untyped opt) -> Bs::Message::Organization

  # == GET /v2/organizations/(organizationId)/members
  #
  # == 2.2.3. Get a list of members in an organization
  # Get a list of members of the given organization.
  #
  # @param [String] organization
  # @param [Hash]   opt               Passed to #api.
  #
  # @option opt [String]            :start
  # @option opt [Integer]           :limit      Default: 10
  # @option opt [BsMemberSortOrder] :sortOrder  Default: 'lastName'
  # @option opt [BsSortDirection]   :direction  Default: 'asc'
  #
  # @return [Bs::Message::UserAccountList]
  #
  # @see https://apidocs.bookshare.org/membership/index.html#_get-organization-members
  #
  def get_organization_members: (organization: String, **untyped opt) -> Bs::Message::UserAccountList

  # == POST /v2/organizations/(organizationId)/members
  #
  # == 2.2.4. Create a user for an organization
  # Create a new organization user account.
  #
  # @param [String] organization
  # @param [Hash]   opt               Passed to #api.
  #
  # @option opt [String]                    :firstName              *REQUIRED*
  # @option opt [String]                    :lastName               *REQUIRED*
  # @option opt [String]                    :dateOfBirth            *REQUIRED*
  # @option opt [String]                    :grade                  *REQUIRED*
  # @option opt [String]                    :username
  # @option opt [String]                    :password
  # @option opt [BsDisabilityType]          :disabilityType
  # @option opt [BsProofOfDisabilitySource] :proofSource
  # @option opt [Array<BsDisabilityPlan>]   :disabilityPlan
  #
  # @return [Bs::Message::UserAccount]
  #
  # @see https://apidocs.bookshare.org/membership/index.html#_create-organizationmember
  #
  def add_organization_member: (organization: String, **untyped opt) -> Bs::Message::UserAccount

  # == GET /v2/organizationTypes
  #
  # == 2.2.5. Get organization types
  # Get the list of organization types relevant to the current user.
  #
  # @param [Hash] opt                 Passed to #api.
  #
  # @return [Bs::Message::OrganizationTypeList]
  #
  # @see https://apidocs.bookshare.org/membership/index.html#_get-organization-types
  #
  def get_organization_types: (**untyped opt) -> Bs::Message::OrganizationTypeList
end
