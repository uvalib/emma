# Interface to the shared data structure which holds the definition of the API
# requests and parameters.
#
module SubmissionService::Definition
  include SubmissionService::Properties

  # Marshal data in preparation for the remote request.
  #
  # @param [SubmissionService::Request, Symbol, nil]           meth
  # @param [SubmissionService::Request, Manifest, String, nil] arg
  # @param [Array<String>, nil]                                items
  # @param [Hash]                                              opt
  #
  # @return [SubmissionService::Request]   The value for @request.
  #
  def pre_flight: (SubmissionService::Request|Symbol|nil meth, ?(SubmissionService::Request|Manifest|String|nil) arg, ?(strArray|nil) items, **untyped opt) -> SubmissionService::Request

  # Extract results from the remote response.
  #
  # @param [SubmissionService::Response, SubmissionService::Request, *] obj
  # @param [Boolean] extended         If *true*, include :diagnostic.
  #
  # @return [SubmissionService::Response] The value for @result.
  #
  def post_flight: (?untyped obj, ?extended: bool, **untyped opt) -> SubmissionService::Response

  private

  def self.included: (Module base) -> void
end
