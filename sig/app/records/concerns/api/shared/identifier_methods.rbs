# Methods mixed in to record elements related to standard identifiers.
#
module Api::Shared::IdentifierMethods
  include Api::Shared::CommonMethods

  extend ::Api::Shared::IdentifierMethods

  # Fields whose value(s) should be prefixed by standard identifier type.
  #
  # @type [Array<Symbol>]
  #
  IDENTIFIER_FIELDS: symArray

  # Fields whose value(s) should be prefixed by standard identifier type.
  #
  # @return [Array<Symbol>]
  #
  def identifier_fields: () -> symArray

  # Policy for how date multiple date values are handled.
  #
  # (Default is :required because this is what Ingest requires.)
  #
  # @return [Symbol]                  One of #ARRAY_MODES.
  #
  def id_array_mode: () -> Symbol

  # Produce standard identifiers of the form "(prefix):(value)".
  #
  # @param [Hash, nil] data           Default: *self*
  # @param [Symbol]    mode           Default: `#id_array_mode`.
  #
  # @return [void]
  #
  def normalize_identifier_fields!: (?symHash? data, ?Symbol? mode) -> void

  # Produce standard identifiers of the form "(prefix):(value)".
  #
  # @param [String, PublicationIdentifier, Array, nil] values
  #
  # @return [Array<String>]
  #
  def normalize_identifiers: (String|PublicationIdentifier|Array[String|PublicationIdentifier]|nil values) -> strArray

  # Produce a standard identifier of the form "(prefix):(value)".
  #
  # @param [String, PublicationIdentifier, nil] value
  #
  # @return [String]
  # @return [nil]                     If *value* is not a valid identifier.
  #
  def normalize_identifier: (String|PublicationIdentifier|nil value) -> String?

  # @private
  RELATION_FIELDS: symArray

  # Ensure that "related identifiers" doesn't include values which are already
  # included in the reported identifiers for the item.
  #
  # @param [Hash, nil] data           Default: *self*.
  #
  # @return [void]
  #
  def clean_dc_relation!: (?symHash? data) -> void

  # The ISBN.
  #
  # @return [String]
  # @return [nil]                     If the value cannot be determined.
  #
  def isbn: () -> String?

  # Related ISBNs omitting the main ISBN if part of the data array.
  #
  # @return [Array<String>]
  #
  def related_isbns: () -> strArray

  # The main and related ISBNs.
  #
  # @return [Array<String>]
  #
  def all_isbns: () -> strArray
end
