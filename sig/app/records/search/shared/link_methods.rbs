# Methods mixed in to record elements related to external repository links.
#
# Attributes supplied by the including module:
#
# @attr [DublinCoreFormat]  dc_format
# @attr [EmmaRepository]    emma_repository
# @attr [String]            emma_repositoryRecordId
# @attr [String]            emma_webPageLink
# @attr [String]            emma_retrievalLink
#
module Search::Shared::LinkMethods
  include Emma::Common

  include Api::Common

  include Search::Shared::CommonMethods

  # URL of the associated work on the web site of the original repository.
  #
  # @return [String, nil]
  #
  def record_title_url: () -> (String | nil)

  # Original repository content file download URL.
  #
  # @return [String, nil]
  #
  def record_download_url: () -> (String | nil)

  # Create a URL manufactured from 'en.emma.repository.*.title_path' for the
  # associated work on the web site of the original repository.
  #
  # @raise [RuntimeError]             If #REPOSITORY entry is invalid.
  #
  # @return [String, nil]
  #
  def generate_title_url: () -> (String | nil)

  # Create a URL on the original repository for acquiring the content file
  # associated with the item.
  #
  # @raise [RuntimeError]             If #REPOSITORY entry is invalid.
  #
  # @return [String, nil]
  #
  def generate_download_url: () -> (String | nil)

  # Form an absolute path from a relative path based on the current request and
  # the source repository.
  #
  # @param [String, nil]         path
  # @param [Symbol, String, nil] repo
  #
  # @return [String]                  Absolute path from *path*.
  # @return [nil]                     If *path* is not relative.
  #
  def absolute_path: (String|nil path, Symbol|String|nil repo) -> (String | nil)
end
