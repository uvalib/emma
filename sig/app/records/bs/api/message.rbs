# The base class for inbound messages from the Bookshare API.
#
# Bs::Api::Message instances must be created with data; if it is nil, :error
# option will be set and the derived class should modify its initialization
# accordingly.
#
class Bs::Api::Message < Bs::Api::Record
  include Api::Message

  include Bs::Shared::ResponseMethods

  # Initialize a new instance.
  #
  # @param [Faraday::Response, Model, Hash, String, nil] src
  # @param [Hash, nil]                                   opt
  #
  def initialize: ((Faraday::Response|Model|String|symHash|nil) src, ?(symHash|nil) opt) -> void

  # Strategy for pre-wrapping message data before de-serialization.
  #
  # @type [Hash{Symbol=>String,Boolean}]
  #
  WRAP_FORMATS: Hash[Symbol,(String|bool)]

  # Update *opt[:wrap]* according to the supplied formats.
  #
  # @param [Hash] opt                 May be modified.
  #
  # @return [void]
  #
  def apply_wrap!: (symHash opt) -> void
end
