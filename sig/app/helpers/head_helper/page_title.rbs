# View helper methods for setting/getting the '<title>' meta-tag.
#
module HeadHelper::PageTitle
  include HeadHelper::Common

  include HtmlHelper

  # @private
  META_TITLE_CONFIG: symHash

  # Text at the start of all page titles.
  #
  # @type [String]
  #
  META_TITLE_PREFIX: String

  # String prepended to all page titles.
  #
  # @type [String]
  #
  META_TITLE_LEADER: String

  # Text at the end of all page titles.
  #
  # @type [String]
  #
  META_TITLE_SUFFIX: String

  # String appended to all page titles.
  #
  # @type [String]
  #
  META_TITLE_TRAILER: String

  public

  @page_meta_title: strArray

  # Access the page title.
  #
  # If a block is given, this invocation is being used to accumulate text into
  # the title; otherwise this invocation is being used to emit the '<title>'
  # element.
  #
  # @return [ActiveSupport::SafeBuffer]   If no block given.
  # @return [Array<String>]               If block given.
  #
  # @yield To supply value(s) to #set_page_meta_title.
  # @yieldreturn [String, Array<String>]
  #
  def page_meta_title: () { () -> (String | strArray) } -> strArray
                     | ()                               -> ActiveSupport::SafeBuffer

  # Set the page title, eliminating any previous value.
  #
  # @param [Array] values
  #
  # @return [Array<String>]           The new @page_meta_title contents.
  #
  # @yield To supply additional values to @page_meta_title.
  # @yieldreturn [String, Array<String>]
  #
  def set_page_meta_title: (*anyArray values) { () -> (String | strArray) } -> strArray

  # Add to the page title.
  #
  # @param [Array] values
  #
  # @return [Array<String>]           The updated @page_meta_title contents.
  #
  # @yield To supply additional values to @page_meta_title.
  # @yieldreturn [String, Array<String>]
  #
  def append_page_meta_title: (*anyArray values) { () -> (String | strArray) } -> strArray

  # Emit the '<title>' element (within '<head>').
  #
  # @param [Hash] opt                 Passed to #html_tag.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  # == Implementation Notes
  # Emit the '<title>' element with 'data-turbolinks-eval="false"' so that it
  # is not included in Turbolinks' determination of whether the contents of
  # '<head>' have changed.
  #
  def emit_page_meta_title: (**untyped opt) -> ActiveSupport::SafeBuffer
end
