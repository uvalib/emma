# View helper methods supporting the creation of forms.
#
module FormHelper
  # Generate a hidden <input> which indicates a parameter for the new search
  # URL that will result from the associated facet value being removed from the
  # current search.
  #
  # @param [Symbol, String]      k
  # @param [String, Array]       v
  # @param [Symbol, String, nil] id
  # @param [String]              separator
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def hidden_input: (Symbol|String k, (String|anyArray)? v, ?id: (Symbol|String)?, ?separator: String) -> ActiveSupport::SafeBuffer

  # Create sets of hidden fields to accompany the *id* field.
  #
  # The field names are sorted so that the method returns zero or more
  # '<input type="hidden">' elements which should be inserted before the *id*
  # field and zero or more elements that should be inserted after.
  #
  # This ensures that the resulting search URL will be generated with
  # parameters in a consistent order.
  #
  # @param [Symbol, String, nil] id
  # @param [Hash]                fields
  #
  # @return [Array<(Array,Array)>]
  #
  # -
  # noinspection RubyNilAnalysis
  # +
  def hidden_parameters_for: (Symbol|String|nil id, anyHash fields) -> [Array[ActiveSupport::SafeBuffer], Array[ActiveSupport::SafeBuffer]]

  private

  def self.included: (untyped base) -> untyped
end
