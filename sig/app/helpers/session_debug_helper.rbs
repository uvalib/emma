# View helper support methods related to `#session`.
#
module SessionDebugHelper
  include DevHelper

  include GridHelper

  include IdentityHelper

  include ParamsHelper

  include SysHelper

  # Indicate whether on-screen debugging is applicable.
  #
  # @param [Symbol,String,nil] controller   Controller-specific debugging.
  #
  def session_debug?: (?(Symbol|String|nil) controller) -> bool

  # Session keys that are not reported in the session debug table.
  #
  # @type [Array<String>]
  #
  SESSION_SKIP_KEYS: strArray

  # Request headers that are not reported in the session debug table.
  #
  # @type [Array<String>]
  #
  REQUEST_SKIP_HDRS: strArray

  # Render a table of values from `#session`.
  #
  # @param [Boolean] extended         If *true* show request headers.
  # @param [String]  css              Characteristic CSS class/selector.
  # @param [Hash]    opt              Passed to #debug_table.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def session_debug_table: (?extended: bool, ?css: String|nil, **untyped opt) -> ActiveSupport::SafeBuffer

  # Show data-* attributes used within the page.
  # @private
  DEBUG_DATA_ATTR: bool

  # Show CSS classes used within the page.
  # @private
  DEBUG_CSS_CLASS: bool

  # Footer debug values which may be filled by client-side logic.
  #
  # @param [String]  css              Characteristic CSS class/selector.
  # @param [Hash]    opt              Passed to #debug_table.
  #
  # @return [ActiveSupport::SafeBuffer]
  # @return [nil]                     If the section would be empty.
  #
  def client_debug_table: (?extended: bool, ?css: String|nil, **untyped opt) -> (ActiveSupport::SafeBuffer | nil)

  # Render a table of values within the footer '.page-debug'.
  #
  # @param [Hash]   pairs             Key-value pairs to display.
  # @param [String] css               Characteristic CSS class/selector.
  # @param [Hash]   opt               Passed to outer #html_div.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def debug_table: (anyHash pairs, ?css: String|nil, **untyped opt) -> ActiveSupport::SafeBuffer

  private

  def self.included: (Module base) -> void
end
