# View helper methods for "/title" pages.
#
module TitleHelper
  include BookshareHelper

  include ImageHelper

  # Default link tooltip.
  #
  # @type [String]
  #
  TITLE_SHOW_TOOLTIP: String

  # Create a link to the details show page for the given item.
  #
  # @param [Bs::Api::Record, Model] item
  # @param [Hash]                   opt   Passed to #model_link.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def title_link: (Bs::Api::Record|Model item, **untyped opt) -> ActiveSupport::SafeBuffer

  # Thumbnail element for the given catalog title.
  #
  # @param [Model]           item
  # @param [Boolean, String] link         If *true* make the image a link to
  #                                         the show page for the item.
  # @param [Hash]            opt          Passed to #image_element.
  #
  # @return [ActiveSupport::SafeBuffer]   HTML image or placeholder element.
  # @return [nil]                         If *item* is *nil*.
  #
  # == Usage Notes
  # If *item* does not contain a thumbnail, the method returns a "blank" HTML
  # element.
  #
  def thumbnail: (nil item,   ?link: bool|String, **untyped opt) -> nil
               | (Model item, ?link: bool|String, **untyped opt) -> ActiveSupport::SafeBuffer

  # Cover image element for the given catalog title.
  #
  # @param [Bs::Api::Record, Model] item
  # @param [Boolean, String]        link  If *true* make the image a link to
  #                                         the show page for the item.
  # @param [Hash]                   opt   Passed to #image_element.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  # == Usage Notes
  # If *item* does not contain a cover image, the method returns a "blank" HTML
  # element.
  #
  def cover_image: (Bs::Api::Record|Model item, ?link: bool|String, **untyped opt) -> ActiveSupport::SafeBuffer

  # Item categories as search links.
  #
  # @param [Bs::Api::Record, Model] item
  # @param [Hash]                   opt   Passed to #title_search_links.
  #
  # @return [ActiveSupport::SafeBuffer] HTML link element(s).
  # @return [nil]                       If access method unsupported by *item*.
  #
  # Compare with:
  # PeriodicalHelper#periodical_category_links
  #
  def category_links: (Bs::Api::Record|Model item, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Item author(s) as search links.
  #
  # @param [Bs::Api::Record, Model] item
  # @param [Hash]                   opt   Passed to #title_search_links.
  #
  # @return [ActiveSupport::SafeBuffer] HTML link element(s).
  # @return [nil]                       If access method unsupported by *item*.
  #
  def author_links: (Bs::Api::Record|Model item, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Item editor(s) as search links.
  #
  # @param [Bs::Api::Record, Model] item
  # @param [Hash]                   opt   Passed to #title_search_links.
  #
  # @return [ActiveSupport::SafeBuffer] HTML link element(s).
  # @return [nil]                       If access method unsupported by *item*.
  #
  def editor_links: (Bs::Api::Record|Model item, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Item composer(s) as search links.
  #
  # @param [Bs::Api::Record, Model] item
  # @param [Hash]                   opt   Passed to #title_search_links.
  #
  # @return [ActiveSupport::SafeBuffer] HTML link element(s).
  # @return [nil]                       If access method unsupported by *item*.
  #
  def composer_links: (Bs::Api::Record|Model item, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Item narrator(s) as search links.
  #
  # @param [Bs::Api::Record, Model] item
  # @param [Hash]                   opt   Passed to #title_search_links.
  #
  # @return [ActiveSupport::SafeBuffer] HTML link element(s).
  # @return [nil]                       If access method unsupported by *item*.
  #
  def narrator_links: (Bs::Api::Record|Model item, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Item creator(s) as search links.
  #
  # @param [Bs::Api::Record, Model] item
  # @param [Hash]                   opt   Passed to #title_search_links.
  #
  # @return [ActiveSupport::SafeBuffer] HTML link element(s).
  # @return [nil]                       If access method unsupported by *item*.
  #
  def creator_links: (Bs::Api::Record|Model item, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Item formats as search links.
  #
  # @param [Bs::Api::Record, Model] item
  # @param [Hash]                   opt   Passed to #title_search_links.
  #
  # @return [ActiveSupport::SafeBuffer] HTML link element(s).
  # @return [nil]                       If access method unsupported by *item*.
  #
  # Compare with:
  # PeriodicalHelper#periodical_format_links
  #
  def format_links: (Bs::Api::Record|Model item, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Item languages as search links.
  #
  # @param [Bs::Api::Record, Model] item
  # @param [Hash]                   opt   Passed to #title_search_links.
  #
  # @return [ActiveSupport::SafeBuffer] HTML link element(s).
  # @return [nil]                       If access method unsupported by *item*.
  #
  # Compare with:
  # PeriodicalHelper#periodical_language_links
  #
  def language_links: (Bs::Api::Record|Model item, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Item countries as search links.
  #
  # NOTE: This is apparently not working in Bookshare.
  # Although an invalid country code will result in no results, all valid
  # country codes result in the same results.
  #
  # @param [Bs::Api::Record, Model] item
  # @param [Hash]                   opt   Passed to #title_search_links.
  #
  # @return [ActiveSupport::SafeBuffer] HTML link element(s).
  # @return [nil]                       If access method unsupported by *item*.
  #
  # Compare with:
  # PeriodicalHelper#periodical_country_links
  #
  def country_links: (Bs::Api::Record|Model item, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Catalog item search links.
  #
  # Items in returned in two separately sorted groups: actionable links (<a>
  # elements) followed by items which are not linkable (<span> elements).
  #
  # @param [Bs::Api::Record, Model] item
  # @param [Hash]                   opt   Passed to #search_links.
  #
  # @return [ActiveSupport::SafeBuffer] HTML link element(s).
  # @return [nil]                       If access method unsupported by *item*.
  #
  def title_search_links:(Bs::Api::Record|Model item, **untyped opt) -> ActiveSupport::SafeBuffer?

  # A link to the catalog item search results index page for the given term(s).
  #
  # @param [String] terms
  # @param [Hash]   opt                 Passed to #search_link.
  #
  # @return [ActiveSupport::SafeBuffer] An HTML link element.
  # @return [nil]                       If no *terms* were provided.
  #
  def title_search_link: (String terms, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Transform a field value for HTML rendering.
  #
  # @param [Bs::Api::Record] item
  # @param [Any]             value
  # @param [Hash]            opt      Passed to the render method.
  #
  # @return [Any]   HTML or scalar value.
  # @return [nil]   If *value* was *nil* or *item* resolved to *nil*.
  #
  # @see BookshareHelper#bookshare_render_value
  #
  def title_render_value: (Bs::Api::Record item, untyped value, **untyped opt) -> untyped?

  # Render a metadata listing for a title.
  #
  # @param [Bs::Api::Record] item
  # @param [Hash, nil]       pairs    Additional field mappings.
  # @param [Hash]            opt      Passed to #model_details.
  #
  def title_details: (Bs::Api::Record item, ?pairs: anyHash?, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Render a single entry for use within a list of items.
  #
  # @param [Bs::Api::Record] item
  # @param [Hash, nil]       pairs    Additional field mappings.
  # @param [Hash]            opt      Passed to #model_list_item.
  #
  def title_list_item: (Bs::Api::Record item, ?pairs: anyHash?, **untyped opt) -> ActiveSupport::SafeBuffer

  private

  def self.included: (Module base) -> void
end
