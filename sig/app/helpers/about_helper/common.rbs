# View helper methods for rendering application information.
#
module AboutHelper::Common
  include CssHelper

  include HtmlHelper

  include EmmaHelper

  # The number of days for "recent".
  #
  # @type [Integer]
  #
  RECENT: Integer

  # The past date indicated by the argument.
  #
  # @param [ActiveSupport::Duration, Date, Integer, nil] previous
  #
  # @return [Date, nil]
  #
  def recent_date: (?(ActiveSupport::Duration|Date|Integer|nil) previous) -> (Date | nil)

  # A faster way of grouping records containing a :user_id reference by
  # organization than the `has_one :org` association.
  #
  # @param [ActiveRecord::Relation] items
  #
  # @return [Hash{Org=>Array<ApplicationRecord>}]
  #
  def org_records: (ActiveRecord::Relation|ActiveRecord::QueryMethods::WhereChain[ActiveRecord::Relation] items) -> Hash[Org,Array[ApplicationRecord]]

  # Generate a table mapping User ID to Org.
  #
  # @return [Hash{Integer=>Org,nil}]
  #
  def user_org: () -> Hash[Integer,(Org|nil)]

  @user_org: Hash[Integer,(Org|nil)]

  # A fallback element indicating "NONE".
  #
  # @param [Hash] opt
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def none_placeholder: (**untyped opt) -> ActiveSupport::SafeBuffer

  # For use with #sort_by so that tables of total entries are sorted by name
  # and tables of recent entries are sorted by descending count with a
  # secondary sort by name.
  #
  # @param [*]                     key
  # @param [Hash{String=>Integer}] counts
  # @param [*]                     since
  #
  # @return [*]
  #
  def about_sort: (untyped key, Hash[String,Integer] counts, ?since: untyped, **untyped _ignored) -> untyped

  # Render the value for output as a table row header label.
  #
  # @param [*]      value
  # @param [Symbol] by
  #
  # @return [String]
  #
  def about_name: (untyped value, by: Symbol) -> String

  # Render a date value for a table row header label.
  #
  # @param [*] value
  #
  # @return [String, nil]
  #
  def about_date: (untyped value) -> (String, nil)

  # A list of items as a table where data row headers are generated by the
  # block.
  #
  # @param [Hash]          items
  # @param [Array<String>] cols
  # @param [String]        separator  Displayed between format counts.
  # @param [Hash]          opt
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  # @yield [key] Generate a row header label.
  # @yieldparam [*] key
  # @yieldreturn [String]
  #
  def about_table: (Hash[Symbol,Hash[untyped,Integer]] items, strArray cols, ?separator: String, **untyped opt) { (untyped key) -> String } -> ActiveSupport::SafeBuffer
end
