# View helper methods for "/member" pages.
#
module MemberHelper
  include BookshareHelper

  # Default link tooltip.
  #
  # @type [String]
  #
  MEMBER_SHOW_TOOLTIP: String

  # Create a link to the details show page for the given item.
  #
  # NOTE: Over-encoded to allow ID's with '.' to be passed to Rails.
  #
  # @param [Bs::Api::Record] item
  # @param [Hash]            opt      Passed to #model_link.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def member_link: (Bs::Api::Record item, **untyped opt) -> ActiveSupport::SafeBuffer

  # Configured member history record fields.
  #
  # @return [Hash{Symbol=>Hash}]      Frozen result.
  #
  def member_history_fields: (*untyped, **untyped) ?{ () -> untyped } -> Hash[Symbol,symHash]

  # Configured member preference record fields.
  #
  # @return [Hash{Symbol=>Hash}]      Frozen result.
  #
  def member_preference_fields: (*untyped, **untyped) ?{ () -> untyped } -> Hash[Symbol,symHash]

  # Transform a field value for HTML rendering.
  #
  # @param [Bs::Api::Record] item
  # @param [Any]             value
  # @param [Hash]            opt        Passed to the render method.
  #
  # @return [Any]   HTML or scalar value.
  # @return [nil]   If *value* was *nil* or *item* resolved to *nil*.
  #
  # @see BookshareHelper#bookshare_render_value
  #
  def member_render_value: (Bs::Api::Record item, untyped value, **untyped opt) -> untyped?

  # Render a metadata listing of a member account.
  #
  # @param [Bs::Api::Record] item
  # @param [Hash, nil]       pairs    Additional field mappings.
  # @param [Hash]            opt      Passed to #model_details.
  #
  def member_details: (Bs::Api::Record item, ?pairs: anyHash?, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Render a listing of member preferences.
  #
  # @param [Bs::Api::Record] item
  # @param [Hash, nil]       pairs    Additional field mappings.
  # @param [Hash]            opt      Passed to #render_field_values.
  #
  def member_preferences_values: (Bs::Api::Record item, ?pairs: anyHash?, **untyped opt) -> ActiveSupport::SafeBuffer

  # CSS class for the container of the history lis.
  #
  # @type [String]
  #
  MEMBER_HISTORY_CSS_CLASS: String

  # member_history_title
  #
  # @param [String, nil] label
  # @param [Hash]        opt          Passed to #html_tag except for:
  #
  # @option opt [Integer] :level      If missing, defaults to 'div'.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def member_history_title: (String|nil label, ?symHash? opt) -> ActiveSupport::SafeBuffer

  # member_history_title
  #
  # @param [String] id                Control ID (@see #member_history)
  # @param [Hash]   opt               Passed to #toggle_button.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def member_history_control: (id: String, **untyped opt) -> ActiveSupport::SafeBuffer

  # Render of list of member activity entries.
  #
  # @param [Bs::Api::Record, Array<Bs::Record::TitleDownload>] item
  # @param [String]    id             Control ID (@see #member_history_control)
  # @param [Hash, nil] pairs          Additional field mappings.
  # @param [Hash]      opt            Passed to #render_field_values.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def member_history: (Bs::Api::Record|Array[Bs::Record::TitleDownload] item, id: String, ?pairs: anyHash?, **untyped opt) -> ActiveSupport::SafeBuffer

  # Render a single entry for use within a list of items.
  #
  # @param [Bs::Api::Record] item
  # @param [Hash, nil]       pairs    Additional field mappings.
  # @param [Hash]            opt      Passed to #model_list_item.
  #
  def member_list_item: (Bs::Api::Record item, ?pairs: anyHash?, **untyped opt) -> ActiveSupport::SafeBuffer

  private

  def self.included: (Module base) -> void
end
