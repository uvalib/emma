# Methods for describing the EMMA grant and project.
#
module EmmaHelper
  include Emma::Project

  include LinkHelper

  # EMMA grant partner configurations.
  #
  # @type [Hash{Symbol=>any}]
  #
  EMMA_PARTNER_CONFIG: symHash

  # Past or present EMMA grant partners.
  #
  # @type [Hash{Symbol=>Hash}]
  #
  EMMA_PARTNER_ENTRY: symHash

  # Active EMMA grant partners.
  #
  # @type [Hash{Symbol=>Hash}]
  #
  EMMA_PARTNER: symHash

  # List EMMA academic partners.
  #
  # @param [Hash] opt                 To #emma_partner_list.
  #
  # @return [String]
  #
  # @note Currently unused.
  #
  def academic_partners: () -> String

  # List EMMA commercial partners.
  #
  # @param [Hash] opt                 To #emma_partner_list.
  #
  # @return [String]
  #
  # @note Currently unused.
  #
  def commercial_partners: (**untyped opt) -> String

  # Generate a textual list of EMMA partners.
  #
  # @param [Symbol] mode              One of :brief or :long (default).
  # @param [String] separator         Separator between items.
  # @param [String] final             Connector for final :long format item.
  # @param [Hash]   opt               Passed to #emma_partners.
  #
  # @return [String]
  #
  def emma_partner_list: (?mode: Symbol, ?separator: String, ?final: String, **untyped opt) -> String

  # Get a selection of EMMA partners.
  #
  # @param [Symbol]       type        One of :academic, :commercial, or :all.
  # @param [Boolean, nil] active      If *nil*, all partners past and present.
  #
  # @return [Hash{Symbol=>Hash}]
  #
  def emma_partners: (?type: Symbol, ?active: bool|nil, **untyped _ignored) -> symHash

  # A link to the project WordPress site.
  #
  # @param [String, nil] label        Link text instead of the URL.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def project_site: (?(String|nil) label) -> ActiveSupport::SafeBuffer

  # A simple "mailto:" link for project email contact.
  #
  # @param [String, nil] label        Link text instead of the email address.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  # @note Currently unused.
  #
  def project_email: (?(String|nil) label) -> ActiveSupport::SafeBuffer

  # A simple "mailto:" link for the general email contact.
  #
  # @param [String, nil] label        Link text instead of the email address.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def contact_email: (?(String|nil) label) -> ActiveSupport::SafeBuffer

  # A simple "mailto:" link for the support email.
  #
  # @param [String, nil] label        Link text instead of the email address.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def help_email: (?(String|nil) label) -> ActiveSupport::SafeBuffer

  # The "mailto:" link for the general email contact.
  #
  # @param [String, nil] label        Link text instead of the email address.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def emma_administrator: (?(String|nil) label) -> ActiveSupport::SafeBuffer

  # A simple "mailto:" link for the "emma-users" mailing list.
  #
  # @param [String, nil] label        Link text instead of the email address.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def mailing_list_email: (?(String|nil) label) -> ActiveSupport::SafeBuffer

  # A link to the "emma-users" mailing list site.
  #
  # @param [String, nil] label        Link text instead of the URL.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def mailing_list_site: (?(String|nil) label) -> ActiveSupport::SafeBuffer

  # A link to the EMMA white paper
  # "The Law and Accessible Texts: Reconciling Civil Rights and Copyrights".
  #
  # @param [String, nil] label        Link text instead of the title.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def white_paper: (?(String|nil) label) -> ActiveSupport::SafeBuffer

  private

  def self.included: (Module base) -> void
end
