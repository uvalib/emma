# View helper methods for "/periodical" pages.
#
module PeriodicalHelper
  include BookshareHelper

  include EditionHelper

  # Default link tooltip.
  #
  # @type [String]
  #
  PERIODICAL_SHOW_TOOLTIP: String

  # Create a link to the details show page for the given item.
  #
  # @param [Bs::Api::Record] item
  # @param [Hash]            opt      Passed to #model_link.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def periodical_link: (Bs::Api::Record item, **untyped opt) -> ActiveSupport::SafeBuffer

  # Item categories as search links.
  #
  # @param [Bs::Api::Record] item
  # @param [Hash]            opt        Passed to #periodical_search_links.
  #
  # @return [ActiveSupport::SafeBuffer] HTML link element(s).
  # @return [nil]                       If access method unsupported by *item*.
  #
  # Compare with:
  # TitleHelper#category_links
  #
  def periodical_category_links: (Bs::Api::Record item, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Item formats as search links.
  #
  # @param [Bs::Api::Record] item
  # @param [Hash]            opt        Passed to #periodical_search_links.
  #
  # @return [ActiveSupport::SafeBuffer] HTML link element(s).
  # @return [nil]                       If access method unsupported by *item*.
  #
  # Compare with:
  # TitleHelper#format_links
  #
  def periodical_format_links: (Bs::Api::Record item, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Item languages as search links.
  #
  # @param [Bs::Api::Record] item
  # @param [Hash]            opt        Passed to #periodical_search_links.
  #
  # @return [ActiveSupport::SafeBuffer] HTML link element(s).
  # @return [nil]                       If access method unsupported by *item*.
  #
  # Compare with:
  # TitleHelper#language_links
  #
  def periodical_language_links: (Bs::Api::Record item, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Item countries as search links.
  #
  # NOTE: This is apparently not working in Bookshare.
  # Although an invalid country code will result in no results, all valid
  # country codes result in the same results.
  #
  # @param [Bs::Api::Record] item
  # @param [Hash]            opt        Passed to #periodical_search_links.
  #
  # @return [ActiveSupport::SafeBuffer] HTML link element(s).
  # @return [nil]                       If access method unsupported by *item*.
  #
  # Compare with:
  # TitleHelper#country_links
  #
  def periodical_country_links: (Bs::Api::Record item, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Item terms as search links.
  #
  # @param [Bs::Api::Record] item
  # @param [Hash]            opt        Passed to #search_links.
  #
  # @return [ActiveSupport::SafeBuffer] HTML link element(s).
  # @return [nil]                       If access method unsupported by *item*.
  #
  def periodical_search_links: (Bs::Api::Record item, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Create a link to the search results index page for the given term(s).
  #
  # @param [String] terms
  # @param [Hash]   opt                 Passed to #search_link.
  #
  # @option opt [Symbol]  :field
  # @option opt [Boolean] :all_words
  # @option opt [Boolean] :no_link
  #
  # @return [ActiveSupport::SafeBuffer] An HTML link element.
  # @return [nil]                       If no *terms* were provided.
  #
  def periodical_search_link: (String terms, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Create a link to latest periodical edition.
  #
  # @param [Bs::Api::Record] item
  # @param [Hash]            opt      Passed to #edition_link.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def latest_edition_link: (Bs::Api::Record item, **untyped opt) -> ActiveSupport::SafeBuffer

  # Transform a field value for HTML rendering.
  #
  # @param [Bs::Api::Record] item
  # @param [Any]             value
  # @param [Hash]            opt      Passed to the render method.
  #
  # @return [Any]   HTML or scalar value.
  # @return [nil]   If *value* was *nil* or *item* resolved to *nil*.
  #
  # @see BookshareHelper#bookshare_render_value
  #
  def periodical_render_value: (Bs::Api::Record item, untyped value, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Render a metadata listing of a periodical.
  #
  # @param [Bs::Api::Record] item
  # @param [Hash, nil]       pairs    Additional field mappings.
  # @param [Hash]            opt      Passed to #model_details.
  #
  def periodical_details: (Bs::Api::Record item, ?pairs: anyHash?, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Render a single entry for use within a list of items.
  #
  # @param [Bs::Api::Record] item
  # @param [Hash, nil]       pairs    Additional field mappings.
  # @param [Hash]            opt      Passed to #model_list_item.
  #
  def periodical_list_item: (Bs::Api::Record item, ?pairs: anyHash?, **untyped opt) -> ActiveSupport::SafeBuffer

  private

  def self.included: (Module base) -> void
end
