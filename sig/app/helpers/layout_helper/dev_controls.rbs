# Control bar panel with developer-only affordances.
#
module LayoutHelper::DevControls
  include LayoutHelper::Common

  include ConfigurationHelper

  include ParamsHelper

  include RoleHelper

  include SessionDebugHelper

  # Indicate whether it is appropriate to show developer-only controls.
  #
  def show_dev_controls?: (*untyped _ignored) ?{ () -> untyped } -> bool

  # Indicate whether display of developer-only controls is not suppressed.
  #
  def allow_dev_controls?: (*untyped _ignored) ?{ () -> untyped } -> bool

  # Render a container with developer-only controls.
  #
  # @param [Hash]   outer             HTML options for outer div container.
  # @param [String] css               Characteristic CSS class/selector.
  # @param [Hash]   opt               Passed to label and control elements.
  #
  # @option opt [Hash]           :params        Default: `#request_parameters`
  # @option opt [String, Symbol] :controller    Optional override.
  # @option opt [String, Symbol] :action        Optional override.
  # @option opt [String]         :label_id
  #
  # @return [ActiveSupport::SafeBuffer] An HTML element.
  # @return [nil]                       If no dev_controls configured.
  #
  def render_dev_controls: (?outer: symHash|nil, ?css: String|nil, **untyped opt) -> (ActiveSupport::SafeBuffer | nil)

  # dev_controls_label
  #
  # @param [Hash] opt                 Passed to #config_lookup except:
  #
  # @option opt [Hash] :params
  #
  # @return [String]
  #
  def dev_controls_label: (**untyped opt) -> String

  # Generate developer-only controls.
  #
  # @param [String] css               Characteristic CSS class/selector.
  # @param [Hash]   opt
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def dev_controls: (?css: String|nil, **untyped opt) -> ActiveSupport::SafeBuffer

  # A control for turning off display of developer-only controls. # TODO: I18n
  #
  # For the sake of demos, where the presence of developer-only controls might
  # be confusing, this control redirects with "app.dev_controls=false".
  #
  # To restore developer-only controls, the URL parameter
  # "app.dev_controls=true" must be supplied manually.
  #
  # @param [Hash] opt                 Passed to #dev_toggle_debug except:
  #
  # @option opt [Hash] :params        Required to generate the link path.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def dev_hide_dev_controls: (**untyped opt) -> ActiveSupport::SafeBuffer

  # A control for toggling application debug status.
  #
  # @param [Boolean, nil] state       Default: `#session_debug?`.
  # @param [Hash]         opt         Passed to #dev_toggle_debug.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def dev_toggle_session_debug: (?state: bool|nil, **untyped opt) -> (ActiveSupport::SafeBuffer | nil)

  # A control for toggling debugging features for a specific controller.
  #
  # @param [Symbol, nil]  ctrlr       Default: `opt[:params][:controller]`.
  # @param [Boolean, nil] state       Default: `#session_debug?(ctrlr)`.
  # @param [Hash]         opt         Passed to #dev_toggle_debug.
  #
  # @return [ActiveSupport::SafeBuffer, nil]
  #
  def dev_toggle_controller_debug: (?ctrlr: Symbol|nil, ?state: bool|nil, **untyped opt) -> (ActiveSupport::SafeBuffer | nil)

  # A control for toggling a debug status. # TODO: I18n
  #
  # @param [Symbol, String, nil] ctrlr
  # @param [Boolean, nil]        state  Default: `#session_debug?(ctrlr)`.
  # @param [Symbol, String, nil] param  URL debug parameter (default: :debug).
  # @param [Hash]                opt    Passed to #link_to except:
  #
  # @option opt [Hash] :params          Required to generate the link path.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def dev_toggle_debug: (ctrlr: Symbol|nil, state: bool|nil, param: Symbol|String|nil, **untyped opt) -> ActiveSupport::SafeBuffer
end
