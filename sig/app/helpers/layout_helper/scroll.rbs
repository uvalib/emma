# View helper methods supporting page scrolling.
#
module LayoutHelper::Scroll
  include LayoutHelper::Common

  include Emma::Unicode

  include HtmlHelper

  # Properties for the element which is scrolled to the top.
  #
  # @type [Hash{Symbol=>String}]
  #
  SCROLL_TARGET: Hash[Symbol,String]

  # Default properties for the scroll-to-top button.
  #
  # @type [Hash{Symbol=>String}]
  #
  SCROLL_TOP: Hash[Symbol,String]

  # Modify the provided CSS options to indicate that the element is defined as
  # the target for the scroll-to-top button.
  #
  # @param [Hash] opt                 CSS options hash to modify.
  #
  # @return [Hash]                    The modified *opt*.
  #
  def scroll_to_top_target!: (symHash opt) -> symHash

  # Floating scroll-to-top button which starts hidden.
  #
  # @param [Hash] opt                 Passed to #button_tag except for:
  #
  # @option opt [String] :label       Override default label.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  # @see file:app/assets/javascripts/feature/scroll.js *scrollToTop()*
  #
  def scroll_to_top_button: (**untyped opt) -> ActiveSupport::SafeBuffer
end
