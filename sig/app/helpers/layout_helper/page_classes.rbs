# View helper methods support CSS class annotation of the '<body>' element.
#
module LayoutHelper::PageClasses
  include ParamsHelper

  attr_reader page_classes: strArray

  # Access the classes for the '<body>' element.
  #
  # If a block is given, this invocation is being used to accumulate CSS class
  # names; otherwise this invocation is being used to emit the CSS classes for
  # inclusion in the '<body>' element definition.
  #
  # @return [String]                      If no block given.
  # @return [Array<String>]               If block given.
  #
  # @yield To supply CSS class(es) to #set_page_classes.
  # @yieldreturn [String, Array<String>]
  #
  def page_classes: () { () -> (String|strArray) } -> strArray
                  | ()                             -> String

  # Set the classes for the '<body>' element, eliminating any previous value.
  #
  # @param [Array] values
  #
  # @return [Array<String>]           The current @page_classes contents.
  #
  # @yield To supply additional CSS classes to @page_classes.
  # @yieldreturn [String, Array<String>]
  #
  def set_page_classes: (*String values) { () -> (String|strArray) } -> strArray

  # Add to the classes for the '<body>' element.
  #
  # @param [Array] values
  #
  # @return [Array<String>]           The current @page_classes contents.
  #
  # @yield To supply additional CSS classes to @page_classes.
  # @yieldreturn [String, Array<String>]
  #
  def append_page_classes: (*String values) { () -> (String|strArray) } -> strArray

  # Emit the CSS classes for inclusion in the '<body>' element definition.
  #
  # @return [String]
  #
  # == Implementation Notes
  # Invalid CSS name characters are converted to '_'; e.g.:
  # 'user/sessions' -> 'user_sessions'.
  #
  def emit_page_classes: () -> String

  # default_page_classes
  #
  # @param [Hash, nil] p              Default: `#request_parameters`.
  #
  # @return [Array<String>]
  #
  def default_page_classes: (?(symHash|nil) p) -> strArray
end
