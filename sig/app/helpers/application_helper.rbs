# Common view helper methods.
#
module ApplicationHelper
  include Emma::Constants

  include Emma::Common

  include HtmlHelper

  include ConfigurationHelper

  # Raw configuration entries for each controller that supplies content (i.e.,
  # those controllers with a subdirectory in app/view) plus 'en.emma.generic'.
  #
  # @type [Hash{Symbol=>Any}]
  #
  # -
  # noinspection RailsI18nInspection
  # +
  CONTROLLER_CONFIGURATION: symHash

  # Configuration for application properties.
  #
  # @type [Hash{Symbol=>Any}]
  #
  # -
  # noinspection RailsI18nInspection
  # +
  APP_CONFIG: symHash

  # The controllers for the application.
  #
  # @type [Array<Symbol>]
  #
  APP_CONTROLLERS: symArray

  # The name of this application for display purposes.
  #
  # @return [String]
  #
  # @note Currently unused.
  #
  def app_name: () -> String

  # Indicate whether a view template partial exists.
  #
  # @param [String] path
  # @param [Array]  prefixes          Default: [params[:controller]].
  #
  # @option prefixes.last [Hash]      Hash values to use in place of `params`.
  #
  def partial_exists?: (String path, *(String|Symbol) prefixes) -> bool

  # Render a description for the page from configuration.
  #
  # @param [String, Symbol, nil] controller   Default: `params[:controller]`
  # @param [String, Symbol, nil] action       Default: `params[:action]`
  # @param [Hash]                opt          Passed to #html_div
  #
  # @return [ActiveSupport::SafeBuffer]
  # @return [nil]
  #
  def page_description: (?controller: (Symbol|String)?, ?action: (Symbol|String)?, **untyped opt) -> ActiveSupport::SafeBuffer?

  # Get the configured page description.
  #
  # @param [String, Symbol, nil] controller   Default: `params[:controller]`
  # @param [String, Symbol, nil] action       Default: `params[:action]`
  # @param [String, Symbol, nil] type         Optional type under action.
  #
  # @return [ActiveSupport::SafeBuffer]
  # @return [String]
  # @return [nil]
  #
  def page_text: (?controller: (Symbol|String)?, ?action: (Symbol|String)?, ?type: (Symbol|String)?) -> (ActiveSupport::SafeBuffer | String | nil)

  # The "mailto:" link for the general e-mail contact.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def contact_email: () -> ActiveSupport::SafeBuffer

  private

  def self.included: (Module base) -> void
end
