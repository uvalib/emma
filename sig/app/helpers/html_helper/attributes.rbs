# Shared view helper HTML support methods.
#
module HtmlHelper::Attributes
  include CssHelper

  # HTML attributes which indicate specification of an accessible name.
  #
  # @type [Array<Symbol>]
  #
  ARIA_LABEL_ATTRS: symArray

  # Indicate whether the HTML element to be created with the given arguments
  # appears to have an accessible name.
  #
  # @param [Array<*>] args
  # @param [Hash]     opt
  #
  def accessible_name?: (*untyped args, **untyped opt) -> bool

  # A line added to tooltips to indicate a .sign-in-required link.
  #
  # @type [String]
  #
  SIGN_IN: String

  # Augment with options that should be set/unset according to the context
  # (e.g. CSS classes present).
  #
  # @param [Symbol, String]  tag
  # @param [Hash{Symbol=>*}] options
  #
  # @return [Hash]
  #
  def add_inferred_attributes: (Symbol|String _tag, symHash options) -> symHash

  # Attributes that are expected for a given HTML tag and can be added
  # automatically.
  #
  # @param[Hash{Symbol=>Hash}]
  #
  # @see https://developer.mozilla.org/en-US/docs/Web/CSS/display#tables
  #
  ADDED_HTML_ATTRIBUTES: Hash[Symbol,symHash]

  # Augment with default options.
  #
  # @param [Symbol, String]  tag
  # @param [Hash{Symbol=>*}] options
  #
  # @return [Hash]
  #
  def add_required_attributes: (Symbol|String tag, symHash options) -> symHash

  # Attributes that are expected for a given HTML tag.
  #
  # @param[Hash{Symbol=>Array<Symbol>}]
  #
  REQUIRED_HTML_ATTRIBUTES: Hash[Symbol,symArray]

  # Expected :role values for a given HTML tag.
  #
  # @param[Hash{Symbol=>Array<String>}]
  #
  EXPECTED_ROLES: Hash[Symbol,strArray]

  # Verify that options have been included unless 'aria-hidden'.
  #
  # @param [Symbol, String]  tag
  # @param [Hash{Symbol=>*}] options
  # @param [Symbol, nil]     meth     Calling method for diagnostics.
  #
  # @return [Boolean]                 If *false* at least one was missing.
  #
  def check_required_attributes: (Symbol|String tag, symHash options, ?meth: Symbol|nil) -> bool
end
