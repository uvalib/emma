# Shared view helper HTML support methods.
#
module HtmlHelper::Options
  include HtmlHelper::Attributes

  include CssHelper

  # Make a copy which has only valid HTML attributes with coalesced "data-*"
  # and `data: { }` options.
  #
  # @param [Hash, nil] html_opt       The target options hash.
  #
  # @return [Hash]
  #
  # @note Currently unused.
  #
  def html_options: ((symHash|nil) html_opt) -> symHash

  # Retain only entries which are valid HTML attributes with coalesced "data-*"
  # and `data: { }` options.
  #
  # @param [Hash] html_opt            The target options hash.
  #
  # @return [Hash]                    The modified *html_opt* hash.
  #
  def html_options!: (symHash html_opt) -> symHash

  # Merge values from one or more options hashes.
  #
  # @param [Hash, nil]       html_opt   The target options hash.
  # @param [Array<Hash,nil>] args       Options hash(es) to merge into *opt*.
  #
  # @return [Hash]                      A new hash.
  #
  # @see #merge_html_options!
  #
  def merge_html_options: ((symHash|nil) html_opt, *(symHash|nil) args) -> symHash

  # Merge values from one or more hashes into an options hash.
  #
  # @param [Hash]            html_opt   The target options hash.
  # @param [Array<Hash,nil>] args       Options hash(es) to merge into *opt*.
  #
  # @return [Hash]                      The modified *opt* hash.
  #
  # @see #append_css!
  #
  def merge_html_options!: (symHash html_opt, *(symHash|nil) args) -> symHash

  # Append additional line(s) options[:title].
  #
  # @param [Hash]          options
  # @param [Array<String>] lines
  #
  # @return [Hash]                    The modified *options*.
  #
  def append_tooltip!: (symHash options, *String lines) -> symHash

  # Generate multi-line tooltip text, avoiding parts of *lines* that duplicate
  # the final part of *title*.
  #
  # @param [String, nil]   title
  # @param [Array<String>] lines
  #
  # @return [String]
  #
  def tooltip_text: ((String|nil) title, *String lines) -> String
end
