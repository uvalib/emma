# Support methods for working with authorization roles.
#
module IdentityHelper
  include Emma::Common

  # Indicate whether the current user has the :developer role.
  #
  # === Implementation Notes
  # Currently, the :developer role applies regardless of the model.
  #
  def developer?: () -> bool

  # Indicate whether the current user has the :administrator role.
  #
  def administrator?: () -> bool

  # Indicate whether the current user has the :manager role.
  #
  def manager?: () -> bool

  # Indicate whether the (current) user has the given role or role prototype.
  #
  # If *role* is blank then the method always returns *true*.
  #
  # @param [Symbol, String, nil] role
  # @param [User, nil]           user   Default: `current_user`.
  #
  def user_has_role?
    : (nil           role, ?(User|nil) user) -> true
    | (Symbol|String role, ?(User|nil) user) -> bool

  # The organization of the current user.
  #
  # @return [Org, nil]
  #
  def current_org: () -> (Org | nil)

  # The organization ID associated with the current user.
  #
  # @raise [RuntimeError]             The user should have an org and doesn't.
  #
  # @return [Integer, nil]
  #
  def current_org_id: () -> (Integer | nil)

  private

  def self.included: (Module base) -> void
end
