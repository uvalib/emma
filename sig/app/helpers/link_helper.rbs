# View helper methods supporting the creation of links.
#
module LinkHelper
  include Emma::Common

  include Emma::Unicode

  include ConfigurationHelper

  include HtmlHelper

  include RouteHelper

  # Create a link element to an application action target.
  #
  # @param [String, nil]    label         Label passed to #make_link.
  # @param [Symbol, String] ctrlr
  # @param [Symbol, String] action
  # @param [Hash]           link_opt      Options passed to #make_link.
  # @param [String]         css           Characteristic CSS class/selector.
  # @param [Hash]           path_opt      Path options.
  #
  # @return [ActiveSupport::SafeBuffer]   HTML link element.
  # @return [nil]                         A valid URL could not be determined.
  #
  def link_to_action: ((String|nil) label, ctrlr: Symbol|String, action: Symbol|String, ?link_opt: symHash|nil, ?css: String, **untyped path_opt) -> (ActiveSupport::SafeBuffer | nil)

  # Fallback Unicode symbol for icons.
  #
  # @type [String]
  #
  DEFAULT_ICON: String

  # Generate a symbol-based icon button or link which should be both accessible
  # and cater to the quirks of various accessibility scanners.
  #
  # @param [String, nil] icon         Default: DEFAULT_ICON
  # @param [String, nil] text         Default: 'Action'
  # @param [String, nil] url          Default: '#'
  # @param [Hash]        opt          To #make_link or #html_span except for:
  #
  # @option opt [String] :symbol      Overrides *symbol*
  # @option opt [String] :text        Overrides *text*
  # @option opt [String] :url         Overrides *url*
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  def icon_button: (?icon: String|nil, ?text: String|nil, ?url: String|nil, **untyped opt) -> ActiveSupport::SafeBuffer

  # Added to the tooltip of external links.
  #
  # @type [String]
  #
  NEW_TAB: String

  # Produce a link with appropriate accessibility settings.
  #
  # @param [String, Hash] path
  # @param [String, nil]  label       Default: *path*.
  # @param [Hash]         opt         Passed to #link_to except for:
  # @param [Proc]         blk         Passed to #link_to.
  #
  # @option opt [String] :label       Overrides *label* parameter if present.
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  # === Usage Notes
  # This method assumes that local paths are always relative.
  #
  def make_link: (String path, ?(String|nil) label, **untyped opt) { () -> String } -> ActiveSupport::SafeBuffer

  # Produce a link to an external site which opens in a new browser tab.
  #
  # @param [String]      path
  # @param [String, nil] label        Default: *path*.
  # @param [Hash]        opt
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  # @see #make_link
  #
  def external_link: (String path, ?(String|nil) label, **untyped opt) ?{ () -> String } -> ActiveSupport::SafeBuffer

  # Produce a link to download an item to the client's browser.
  #
  # @param [String]      path
  # @param [String, nil] label        Default: *path*.
  # @param [String]      css          Characteristic CSS class/selector.
  # @param [Hash]        opt
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  # @see #external_link
  #
  def download_link: (String path, ?(String|nil) label, ?css: String|nil, **untyped opt) ?{ () -> String } -> ActiveSupport::SafeBuffer

  # Base URL for references to the EMMA project repository.
  #
  # @type [String]
  #
  GITHUB_ROOT: String

  # Base URL for references to EMMA source code.
  #
  # @type [String]
  #
  SOURCE_CODE_ROOT: String

  # Produce a link to EMMA source code for display within the application.
  #
  # @param [String]      path
  # @param [String, nil] label        Derived from *path* if not given.
  # @param [Hash]        opt
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  # @see #external_link
  #
  def source_code_link: (String path, ?(String|nil) label, **untyped opt) ?{ () -> String } -> ActiveSupport::SafeBuffer

  # Base URL for references to the UVALIB configuration repository.
  #
  # @type [String]
  #
  TERRAFORM_ROOT: String

  # Base URL for references to EMMA UVALIB configuration.
  #
  # @type [String]
  #
  TERRAFORM_EMMA: String

  # Produce a link to EMMA UVALIB configuration for display within the
  # application.
  #
  # @param [String]      path
  # @param [String, nil] label        Derived from *path* if not given.
  # @param [Hash]        opt
  #
  # @return [ActiveSupport::SafeBuffer]
  #
  # @see #external_link
  #
  def terraform_link: (String path, ?(String|nil) label, **untyped opt) ?{ () -> String } -> ActiveSupport::SafeBuffer

  # If *text* is a URL return it directly; if *text* is HTML, locate the first
  # "href" and return the indicated value.
  #
  # @param [String, nil] text
  #
  # @return [String]                  A full URL.
  # @return [nil]                     No URL could be extracted.
  #
  def extract_url: ((String|nil) text) -> (String | nil)

  private

  def self.included: (Module base) -> void
end
