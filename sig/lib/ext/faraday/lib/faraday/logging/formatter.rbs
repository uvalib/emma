module Faraday
  # Override definitions to be prepended to Faraday::Logging::Formatter.
  #
  # By default, headers are dumped but bodies are not.
  #
  # @example Log request and response message bodies:
  # Faraday.new(...) do |bld|
  #   bld.response :logger, Log.logger, bodies: true
  # end
  #
  # @example Log only request message bodies:
  # Faraday.new(...) do |bld|
  #   bld.response :logger, Log.logger, bodies: { request: true }
  # end
  #
  # @example Log only response message bodies:
  # Faraday.new(...) do |bld|
  #   bld.response :logger, Log.logger, bodies: { response: true }
  # end
  #
  module Logging::FormatterExt
    # Override request log entry to prefix with `@logger.progname`.
    #
    # @param [Faraday::Env] env
    #
    def request: (Faraday::Env env) -> void

    # Override response log entry to prefix with `@logger.progname`.
    #
    # @param [Faraday::Env] env
    #
    def response: (Faraday::Env env) -> void

    # Override exception log entry to prefix with `@logger.progname`.
    #
    # @param [Faraday::Error] exc
    #
    def exception: (Faraday::Error exc) -> void

    # Render request headers.
    #
    # @param [Hash] headers
    #
    # @return [String]
    #
    # @see Faraday::Logging::Formatter#dump_headers
    #
    def dump_headers: (anyHash headers) -> String

    # Render request dump_body.
    #
    # @param [Hash] body
    #
    # @return [String]
    #
    # @see Faraday::Logging::Formatter#dump_body
    #
    def dump_body: (anyHash body) -> String
  end
end
