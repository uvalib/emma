class Shrine
  module Storage
    # Overrides adding extra debugging around method calls.
    #
    module S3Debug
      include Shrine::ExtensionDebugging

      # initialize
      #
      # @param [String]               bucket
      # @param [Aws::S3::Client, nil] client
      # @param [String, nil]          prefix
      # @param [Hash]                 upload_options
      # @param [Hash]                 multipart_threshold
      # @param [Any]                  signer
      # @param [Any]                  public
      # @param [Hash]                 s3_options
      #
      # This method overrides:
      # @see Shrine::Storage::S3#initialize
      #
      def initialize: (bucket: String, ?client: Aws::S3::Client|nil, ?prefix: String|nil, ?upload_options: symHash, ?multipart_threshold: symHash, ?signer: Integer|nil, ?public: symHash|nil, **untyped s3_options) -> void

      # upload
      #
      # @param [IO, StringIO] io
      # @param [String]       id
      # @param [Hash]         shrine_metadata
      # @param [Hash]         upload_options
      #
      # This method overrides:
      # @see Shrine::Storage::S3#upload
      #
      def upload: (IO|StringIO io, String id, ?shrine_metadata: symHash, **untyped upload_options) -> untyped

      # open
      #
      # @param [String]  id
      # @param [Boolean] rewindable
      # @param [Hash]    options
      #
      # This method overrides:
      # @see Shrine::Storage::S3#open
      #
      def open: (String id, ?rewindable: bool, **untyped options) -> untyped

      # delete
      #
      # @param [String] id
      #
      # This method overrides:
      # @see Shrine::Storage::S3#delete
      #
      def delete: (String id) -> untyped

      # put
      #
      # @param [IO, StringIO] io
      # @param [String]       id
      # @param [Hash]         options
      #
      # This method overrides:
      # @see Shrine::Storage::S3#put
      #
      def put: (IO|StringIO io, String id, **untyped options) -> untyped

      # copy
      #
      # @param [IO, StringIO] io
      # @param [String]       id
      # @param [Hash]         options
      #
      # This method overrides:
      # @see Shrine::Storage::S3#copy
      #
      def copy: (IO|StringIO io, String id, **untyped options) -> untyped

      # presign_put
      #
      # @param [String] id
      # @param [Hash]   options
      #
      # @return [Hash]
      #
      # This method overrides:
      # @see Shrine::Storage::S3#presign_put
      #
      def presign_post: (String id, untyped options) -> untyped

      # presign_put
      #
      # @param [String] id
      # @param [Hash]   options
      #
      # @return [Hash]
      #
      # This method overrides:
      # @see Shrine::Storage::S3#presign_put
      #
      def presign_put: (String id, untyped options) -> untyped

      # part_size
      #
      # @param [IO, StringIO] io
      #
      # @return [Integer]
      #
      # This method overrides:
      # @see Shrine::Storage::S3#part_size
      #
      def part_size: (IO|StringIO io) -> untyped

      # get_object
      #
      # @param [Any]  object
      # @param [Hash] params
      #
      # @return [Array<(Array,Integer)>]
      #
      # This method overrides:
      # @see Shrine::Storage::S3#get_object
      #
      def get_object: (untyped object, symHash params) -> [anyArray, Integer]

      # copyable?
      #
      # @param [IO, StringIO] io
      #
      # This method overrides:
      # @see Shrine::Storage::S3#copyable?
      #
      def copyable?: (IO|StringIO io) -> bool

      # delete_objects
      #
      # @param [Array] objects
      #
      # @return [void]
      #
      # This method overrides:
      # @see Shrine::Storage::S3#delete_objects
      #
      def delete_objects: (anyArray objects) -> void
    end
  end
end
