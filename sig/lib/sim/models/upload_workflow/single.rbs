module UploadWorkflow::Single::Simulation
  include UploadWorkflow::Single::Data

  # Stand-in for Upload properties.
  #
  # @!attribute [rw] item
  #   @return [Upload, Hash, nil]
  #
  # @!attribute [rw] file_valid
  #   @return [Boolean]
  #
  # @!attribute [rw] metadata_valid
  #   @return [Boolean]
  #
  # @!attribute [rw] emma_item
  #   @return [Boolean]
  #
  # @!attribute [rw] items
  #   @return [Array]
  #
  # @!attribute [rw] succeeded
  #   @return [Array]
  #
  # @!attribute [rw] failed
  #   @return [Array]
  #
  # @!attribute [rw] params
  #   @return [Upload, Hash, String, Array, nil]
  #
  # @!attribute [rw] data
  #   @return [Upload, Hash]
  #
  # @!attribute [rw] id
  #   @return [String, Upload, nil]
  #
  # @!attribute [rw] invalid_file
  #   @return [Boolean, nil]
  #
  # @!attribute [rw] invalid_entry
  #   @return [Boolean, nil]
  #
  # @!attribute [rw] db_failure
  #   @return [Boolean, nil]
  #
  # @!attribute [rw] no_review
  #   @return [Boolean, nil]
  #
  # @!attribute [rw] no_reviewers
  #   @return [Boolean, nil]
  #
  # @!attribute [rw] auto_review
  #   @return [Boolean, nil]
  #
  # @!attribute [rw] auto_approve
  #   @return [Boolean, nil]
  #
  # @!attribute [rw] auto_reject
  #   @return [Boolean, nil]
  #
  # @!attribute [rw] auto_submit
  #   @return [Boolean, nil]
  #
  # @!attribute [rw] auto_cancel
  #   @return [Boolean, nil]
  #
  class RecordProperties
    # Generated/retrieved Upload record.
    #
    # @return [Upload, Hash, nil]
    #
    attr_accessor item: untyped

    # Indicates that the item has a valid file.
    #
    # @return [Boolean]
    #
    attr_accessor file_valid: untyped

    # Indicates that the item has valid metadata.
    #
    # @return [Boolean]
    #
    attr_accessor metadata_valid: untyped

    # Whether the submission should be consider EMMA-native.
    #
    # @return [Boolean]
    #
    attr_accessor emma_item: untyped

    # Original items.
    #
    # @return [Array]
    #
    attr_accessor items: untyped

    # Original supplied data parameters.
    #
    # @return [Upload, Hash, String, Array, nil]
    #
    attr_accessor params: untyped

    # Parameter for :upload_create
    #
    # @return [Upload, Hash]
    #
    attr_accessor data: untyped

    # Parameter for :upload_edit
    #
    # @return [String, Upload, nil]
    #
    attr_accessor id: untyped

    alias emma_items emma_item

    # Properties used to drive simulated behavior.
    #
    # @type [Hash{Symbol=>Boolean,Integer}]
    #
    PROPERTY: untyped

    # Simulation property settings.
    #
    # @type [Array<Symbol>]
    #
    # -
    # noinspection LongLine
    # +
    PROP_NAME: symArray

    # Initial property settings specific to the workflow simulation branch.
    #
    # @type [Hash{Symbol=>Hash}]
    #
    PROP_SETTING: untyped

    # Initialize a new instance.
    #
    # @param [Upload, Hash, String, Array, nil] params
    #
    def initialize: (?untyped? params) -> void

    # set_params
    #
    # @param [Upload, Hash, String, Array, nil] params
    #
    def set_params: (?untyped? params) -> untyped

    # Apply simulation settings based on the primary workflow type.
    #
    # @param [Symbol] type
    #
    def set_simulation: (?::Symbol `type`) -> untyped

    # set_item
    #
    # @param [Upload, Hash, nil] values
    #
    def set_item: (?untyped? values) -> untyped

    def empty?: () -> untyped

    def file_valid?: () -> untyped

    def metadata_valid?: () -> untyped

    def complete?: () -> untyped
  end

  # Workflow methods to be augmented so that they report on :submission
  # instead of :record.
  #
  # @type [Array<Symbol>]
  #
  OVERRIDE_WORKFLOW_METHODS: symArray

  # Override workflow methods defined in terms of the Upload :record to check
  # the simulated submission.
  #
  # @param [Module] base
  #
  # @see #OVERRIDE_WORKFLOW_METHODS
  #
  def self.included: (untyped base) -> (nil | untyped)
end

module UploadWorkflow::Single::Events
  # The user initiates submission of a new entry.
  def create: () -> untyped

  # The user initiates modification of an existing entry.
  def edit: () -> untyped

  # The user initiates removal of an existing entry.
  def remove: () -> untyped

  # The system is resetting the workflow state.
  def reset: () -> untyped
end
