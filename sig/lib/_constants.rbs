# Indicate whether Shibboleth authorization is in use.
#
# @type [Boolean]
#
SHIBBOLETH: bool

# OmniAuth providers for Devise.
#
# @type [Array<Symbol>]
#
AUTH_PROVIDERS: symArray

# A special conditional for supporting test sign in.
#
# @type [Symbol, nil]
#
SIGN_IN_AS: Symbol | nil

MAILER_SENDER: String

MAILER_URL_HOST: String

# EMMA Unified Ingest API key.
#
# This does not have a default and *must* be provided through the environment.
#
# @type [String, nil]
#
INGEST_API_KEY: String | nil

# Current EMMA Unified Ingest API version.
#
# This is informational only; Ingest API URLs do not include it.
#
# @type [String]
#
# @see EmmaStatus#api_version
#
INGEST_API_VERSION: String

# Current EMMA Unified Search API version.
#
# This is informational only; Search API URLs do not include it.
#
# @type [String]
#
SEARCH_API_VERSION: String

# Indicate whether IA downloads should not be attempted.
#
# @type [Boolean]
#
IA_DOWNLOADS_FAILING: bool

# Indicate whether IA downloads should be allowable.
#
# @type [Boolean]
#
IA_DOWNLOADS_SUPPORTED: bool

# IA S3 access key generated when logged in as Internet Archive user
# "emma_pull@archive.org".
#
# @type [String, nil]
#
# @see IaDownloadConcern#IA_AUTH
#
IA_ACCESS: String | nil

# IA S3 secret generated when logged in as Internet Archive user
# "emma_pull@archive.org".
#
# @type [String, nil]
#
# @see IaDownloadConcern#IA_AUTH
#
IA_SECRET: String | nil

# Internet Archive "Printdisabled Unencrypted Ebook API" endpoint.
#
# @type [String]
#
IA_DOWNLOAD_API_URL: String

# Amazon AWS region.
#
# This should be supplied by the UVA cloud infrastructure on startup or from
# `Rails.application.credentials.s3`.
#
# @type [String]
#
AWS_REGION: String

# Amazon S3 storage.
#
# Defined in the "terraform-infrastructure" GitLab project in the files
# "emma.lib.virginia.edu/ecs-tasks/staging/environment.vars" and
# "emma.lib.virginia.edu/ecs-tasks/production/environment.vars".
#
# @type [String]
#
AWS_BUCKET: String

# Amazon identity access key.
#
# This should be supplied by the UVA cloud infrastructure on startup or from
# `Rails.application.credentials.s3`.
#
# @type [String, nil]
#
AWS_ACCESS_KEY_ID: String | nil

# Amazon identity secret.
#
# This should be supplied by the UVA cloud infrastructure on startup or from
# `Rails.application.credentials.s3`.
#
# @type [String, nil]
#
AWS_SECRET_KEY: String | nil

# Amazon AWS region for BiblioVault collections.
#
# This should be supplied by the UVA cloud infrastructure on startup or from
# `Rails.application.credentials.bibliovault`.
#
# @type [String]
#
BV_REGION: String

# Amazon S3 storage for BiblioVault collections.
#
# @type [String]
#
BV_BUCKET: String

# Amazon identity access key for BiblioVault collections.
#
# This should be supplied by the UVA cloud infrastructure on startup or from
# `Rails.application.credentials.bibliovault`.
#
# @type [String, nil]
#
BV_ACCESS_KEY_ID: String | nil

# Amazon identity secret for BiblioVault collections.
#
# This should be supplied by the UVA cloud infrastructure on startup or from
# `Rails.application.credentials.bibliovault`.
#
# @type [String, nil]
#
BV_SECRET_KEY: String | nil

# Indicate whether the 'silencer' gem is enabled.
#
# Currently, attempting to replace system loggers (via Log#replace) ends up
# defeating the ability of the 'silencer' gem to eliminate *all* log entries
# for the endpoints on which it operates.
#
# @type [bool]
#
LOG_SILENCER: bool

# Application endpoints which are intended to leave no footprint in the log.
#
# @type [Array<String,Regexp>]
#
LOG_SILENCER_ENDPOINTS: Array[String|Regexp]

# AWS healthcheck hosts whose activity is not logged for GET "/home/welcome".
#
# @type [Array<IPAddr>]
#
LOG_SILENCER_WELCOME: Array[IPAddr]

# Control creation of 'data-trace-*' attributes on HTML elements.
#
# @see BaseDecorator::Common#trace_attrs
#
DEBUG_ATTRS: bool

# When *true* invocation of each low-level IO operation triggers a log entry.
#
# @type [Boolean]
#
DEBUG_AWS: bool

# Set to debug ActionCable interactions.
#
# @type [Boolean]
#
DEBUG_CABLE: bool

# Set to debug YAML configuration.
#
# @type [Boolean]
#
DEBUG_CONFIGURATION: bool

# Set to set the :debug option for Rack::Cors.
#
# @type [Boolean]
#
DEBUG_CORS: bool

# Set to show low-level bulk import processing.
#
# @type [Boolean]
#
DEBUG_IMPORT: bool

# When *true* invocation of each low-level IO operation triggers a log debug
# entry.
#
# @type [Boolean]
#
DEBUG_IO: bool

# When *true* ActiveJob debugging callbacks are invoked.
#
# @type [Boolean]
#
DEBUG_JOB: bool

# Set to show registration of unique MIME types during startup.
#
# @type [Boolean]
#
DEBUG_MIME_TYPE: bool

# When *true* invocation of each low-level IO operation triggers a log entry.
#
# @type [Boolean]
#
DEBUG_OAUTH: bool

# When *true* invocation of each low-level IO operation triggers a log entry.
#
# @note This is different than 'PUMA_DEBUG', which causes Puma to turn on its
#   own internal debugging statements.
#
# @type [Boolean]
#
DEBUG_PUMA: bool

# Set internal debugging of Representable pipeline actions.
#
# - *false* for normal operation
# - *true*  for full debugging
# - :input  for debugging parsing/de-serialization.
# - :output for debugging rendering/serialization.
#
# @type [Boolean, Symbol]
#
DEBUG_REPRESENTABLE: bool | Symbol

# When *true* invocation of each low-level IO operation triggers a log entry.
#
# @type [Boolean]
#
DEBUG_SHRINE: bool

# When *true* debug asset pipeline timings in "rake 'assets:precompile'".
#
# @type [Boolean]
#
DEBUG_SPROCKETS: bool

# Set to show better information from Concurrent Ruby.
#
# @type [Boolean]
#
DEBUG_THREADS: bool

# Set to show headers and data being sent to external APIs.
#
# @type [Boolean]
#
DEBUG_TRANSMISSION: bool

# Indicate whether debugging of view files is active.
#
# @type [Boolean]
#
DEBUG_VIEW: bool

# Debug workflow steps.
#
# @type [Boolean]
#
DEBUG_WORKFLOW: bool

# Debug workflow steps.
#
# @type [Boolean]
#
DEBUG_RECORD: bool

# Set to show low-level XML parse logging.
#
# @type [Boolean]
#
DEBUG_XML_PARSE: bool

# When *true* debug loading at startup.
#
# @type [Boolean]
#
DEBUG_ZEITWERK: bool
