module Emma::Common::NumericMethods
  # Interpret *value* as a positive integer.
  #
  # @param [String, Symbol, Numeric, Any] value
  #
  # @return [Integer]
  # @return [nil]                     If *value* <= 0 or not a number.
  #
  def positive: (untyped value) -> (Integer | nil)

  # Interpret *value* as zero or a positive integer.
  #
  # @param [String, Symbol, Numeric, Any] value
  #
  # @return [Integer]
  # @return [nil]                     If *value* < 0 or not a number.
  #
  def non_negative: (untyped value) -> (Integer | nil)

  # Interpret *value* as a positive floating-point number.
  #
  # @param [String, Symbol, Numeric, Any] value
  # @param [Float]                        epsilon
  #
  # @return [Float]
  # @return [nil]                     If *value* <= 0 or not a number.
  #
  def positive_float: (untyped value) -> (Float | nil)

  # Interpret *value* as zero or a positive floating-point number.
  #
  # @param [String, Symbol, Numeric, Any] value
  # @param [Float]                        epsilon
  #
  # @return [Float]
  # @return [nil]                     If *value* <= 0 or not a number.
  #
  def non_negative_float: (untyped value) -> (Float | nil)

  # Indicate whether the given string value contains only decimal digits.
  #
  # @param [*] value
  #
  def digits_only?: (untyped value) -> bool

  # Generate a string of hex digits from a number-like value.
  #
  # @param [Integer, String, nil] value
  # @param [Integer]              digits  Left-zero filled if necessary.
  # @param [Boolean]              upper   If *false* show lowercase hex digits.
  #
  # @return [String]
  #
  def hex_format: (Integer|String|nil value, ?digits: Integer|nil, ?upper: bool|nil) -> String
end
