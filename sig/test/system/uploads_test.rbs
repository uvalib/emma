class UploadsTest < ApplicationSystemTestCase
  MODEL: Class

  CTRLR: Symbol

  PRM: symHash

  TITLE: String

  @file: Pathname

  @admin: User

  @manager: User

  @member: User

  @generate: UploadSampleGenerator

  # Perform a test to list EMMA submissions visible to *user*.
  #
  # @param [User, nil]    user
  # @param [Integer, nil] total       Expected total number of items.
  # @param [String, nil]  title       Default based on *user* and opt[:action].
  # @param [Symbol]       meth        Calling test method.
  # @param [Hash]         opt         URL parameters.
  #
  # @return [void]
  #
  def list_test: ((User|nil) user, ?total: Integer|nil, ?title: String|nil, ?meth: Symbol|nil, **untyped opt) -> void

  # Perform a test to show an EMMA submission visible to *user*.
  #
  # @param [User, nil]   user
  # @param [Upload, nil] target
  # @param [String, nil] title
  # @param [Symbol]      meth         Calling test method.
  # @param [Hash]        opt          URL parameters.
  #
  # @return [void]
  #
  def show_test: ((User|nil) user, ?target: Upload|nil, ?title: String|nil, ?meth: Symbol|nil, **untyped opt) -> void

  # Perform a test to invoke the menu for selecting a submission to display.
  #
  # @param [User, nil] user
  # @param [Hash]      opt            Passed to #page_select_test.
  #
  # @return [void]
  #
  def show_select_test: ((User|nil) user, **untyped opt) -> void

  # Perform a test to invoke the menu for selecting a submission to modify.
  #
  # @param [User, nil] user
  # @param [Hash]      opt            Passed to #page_select_test.
  #
  # @return [void]
  #
  def edit_select_test: ((User|nil) user, **untyped opt) -> void

  # Perform a test to invoke the menu for selecting a submission to remove.
  #
  # @param [User, nil] user
  # @param [Hash]      opt            Passed to #page_select_test.
  #
  # @return [void]
  #
  def delete_select_test: ((User|nil) user, **untyped opt) -> void

  # Perform a test to invoke the menu for selecting an EMMA submission.
  #
  # @param [User, nil]   user
  # @param [Symbol]      action
  # @param [String, nil] title
  # @param [Symbol]      meth         Calling test method.
  # @param [Hash]        opt          URL parameters.
  #
  # @return [void]
  #
  def page_select_test: ((User|nil) user, action: Symbol, ?title: String|nil, ?meth: Symbol|nil, **untyped opt) -> void

  # Perform a test to create a new EMMA submission.
  #
  # @param [User, nil]   user
  # @param [Symbol, nil] meth         Calling test method.
  # @param [Hash]        opt          Added to URL parameters.
  #
  # @return [void]
  #
  def new_test: ((User|nil) user, ?meth: Symbol|nil, **untyped opt) -> void

  # Perform a test to select then modify an EMMA submission.
  #
  # @param [User, nil]   user
  # @param [Symbol, nil] meth         Calling test method.
  # @param [Hash]        opt          Added to URL parameters.
  #
  # @return [void]
  #
  def edit_test: ((User|nil) user, ?meth: Symbol|nil, **untyped opt) -> void

  # Perform a test to select then remove an EMMA submission.
  #
  # @param [User, nil]   user
  # @param [Symbol, nil] meth         Calling test method.
  # @param [Hash]        opt          Added to URL parameters.
  #
  # @return [void]
  #
  def delete_test: ((User|nil) user, ?meth: Symbol|nil, **untyped opt) -> void

  # A minimal "/upload/records" list item.
  #
  # @type [Hash{Symbol=>nil,Hash}]
  #
  RECORD_TEMPLATE: Hash[Symbol,(nil|symHash)]

  # Verify that a "/upload/records" list item is well-formed.
  #
  # @param [Hash] item
  #
  def validate_record: (symHash item) -> void

  # The default :index action redirects to :list_own.
  #
  # @param [Hash] opt
  #
  # @return [String]
  #
  def index_redirect: (**untyped opt) ?{ () -> (Symbol|String|Proc|nil) } -> String
end
