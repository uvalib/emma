# Support for checking flash messages.
#
module TestHelper::SystemTests::Flash
  include TestHelper::SystemTests::Common

  # Indicate whether a flash message is present.  If neither :alert nor :notice
  # is specified then any element with *text* under '.flash-messages' will
  # match.
  #
  # If no text is given, the presence of any flash message is indicated.
  #
  # @param [String, nil]    content   Expect a flash of any kind with this.
  # @param [String]         alert     Expect a flash alert with this.
  # @param [String]         notice    Expect a flash notice with this.
  # @param [String]         text      Expect a flash of any kind with this.
  # @param [String|Boolean] without   Negate expectation.
  # @param [Boolean]        assert    If not *true*, return Boolean.
  # @param [Hash]           opt       Passed to Capybara method.
  #
  def flash?
    : (?(String|nil) content, ?alert: String|nil, ?notice: String|nil, ?text: String|nil, ?without: String|bool, assert: true,      **untyped opt) -> true
    | (?(String|nil) content, ?alert: String|nil, ?notice: String|nil, ?text: String|nil, ?without: String|bool, assert: false|nil, **untyped opt) -> bool

  # Indicate that a flash message not is present.
  #
  # @param [String, nil] content      Passed to #flash?.
  # @param [Hash]        opt          Passed to #flash?.
  #
  def no_flash?
    : (?(String|nil) content, assert: true, **untyped opt) -> true
    | (?(String|nil) content,               **untyped opt) -> bool

  # Assert that a flash message is present.
  #
  # @param [String, nil] content      Passed to #flash?.
  # @param [Hash]        opt          Passed to #flash?.
  #
  # @raise [Minitest::Assertion]
  #
  # @return [true]
  #
  def assert_flash: (?(String|nil) content, **untyped opt) -> true

  # Assert that a flash message is not present.
  #
  # @param [String, nil] content      Passed to #flash?.
  # @param [Hash]        opt          Passed to #flash?.
  #
  # @raise [Minitest::Assertion]
  #
  # @return [true]
  #
  def assert_no_flash: (?(String|nil) content, **untyped opt) -> true
end
