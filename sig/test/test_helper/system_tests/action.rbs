# Support for checking CRUD operation pages.
#
module TestHelper::SystemTests::Action
  include TestHelper::SystemTests::Common

  # Assert that the current page is for creating a model instance.
  #
  # @param [Symbol,String,Class,Model,nil] model
  # @param [Hash]                          opt    Passed to #assert_valid_page.
  #
  # @raise [Minitest::Assertion]
  #
  # @return [true]
  #
  # @note Currently unused.
  #
  def assert_valid_create_page: (Symbol|String|Class|Model|nil model, **untyped opt) -> true

  # Assert that the current page is for modifying a model instance.
  #
  # @param [Symbol,String,Class,Model,nil] model
  # @param [Hash]                          opt    Passed to #assert_valid_page.
  #
  # @option opt [String] :id          If missing, expect :edit_select.
  #
  # @raise [Minitest::Assertion]
  #
  # @return [true]
  #
  # @note Currently unused.
  #
  def assert_valid_update_page: (Symbol|String|Class|Model|nil model, **untyped opt) -> true

  # Assert that the current page is for removing a model instance.
  #
  # @param [Symbol,String,Class,Model,nil] model
  # @param [Hash]                          opt    Passed to #assert_valid_page.
  #
  # @option opt [String] :id          If missing, expect :delete_select.
  #
  # @raise [Minitest::Assertion]
  #
  # @return [true]
  #
  # @note Currently unused.
  #
  def assert_valid_delete_page: (Symbol|String|Class|Model|nil model, **untyped opt) -> true

  # Assert that the current page is a valid page for the given operation.
  #
  # @param [Symbol,String,Class,Model,nil] model
  # @param [Symbol]                        action
  # @param [Hash]                          opt    Passed to #assert_valid_page.
  #
  # @raise [Minitest::Assertion]
  #
  # @return [true]
  #
  def assert_valid_action_page: (Symbol|String|Class|Model|nil model, Symbol action, **untyped opt) -> true

  # Visit the page for creating a new model instance.
  #
  # @param [Symbol,String,Class,Model,nil] model
  # @param [Hash]                          opt
  # @param [Proc]                          blk
  #
  # @raise [Minitest::Assertion]
  #
  # @return [true]
  #
  # @note Currently unused.
  #
  def visit_new_page: (Symbol|String|Class|Model|nil model, **untyped opt) ?{ () -> void } -> true

  # Visit the page for modifying an existing model instance.
  #
  # @param [Symbol,String,Class,Model,nil] model
  # @param [Hash]                          opt
  # @param [Proc]                          blk
  #
  # @option opt [String] :id          If missing, visit :edit_select.
  #
  # @raise [Minitest::Assertion]
  #
  # @return [true]
  #
  # @note Currently unused.
  #
  def visit_edit_page: (Symbol|String|Class|Model|nil model, **untyped opt) ?{ () -> void } -> true

  # Visit the page for removing an existing model instance.
  #
  # @param [Symbol,String,Class,Model,nil] model
  # @param [Hash]                          opt
  # @param [Proc]                          blk
  #
  # @option opt [String] :id          If missing, visit :delete_select.
  #
  # @raise [Minitest::Assertion]
  #
  # @return [true]
  #
  # @note Currently unused.
  #
  def visit_delete_page: (Symbol|String|Class|Model|nil model, **untyped opt) ?{ () -> void } -> true

  # Visit the page for an action on a model.
  #
  # @param [Symbol,String,Class,Model,nil] model
  # @param [Symbol]                        action
  # @param [Hash]                          opt    To #assert_valid_action_page.
  #
  # @raise [Minitest::Assertion]
  #
  # @return [true]
  #
  # @yield Test code to run while on the page.
  # @yieldreturn [void]
  #
  def visit_action_page: (Symbol|String|Class|Model|nil model, Symbol action, **untyped opt) ?{ () -> void } -> true
end
