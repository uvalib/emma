# Support for checking index pages and search results.
#
module TestHelper::SystemTests::Index
  include TestHelper::SystemTests::Action

  SEARCH_COUNT_CLASS: String

  SEARCH_TERMS_CLASS: String

  VALUE_SELECTOR: String

  # Assert that the current page is a valid index page.
  #
  # @param [Symbol,String,Class,Model,nil] model
  # @param [Integer]                       index
  # @param [Integer]                       total
  # @param [Integer]                       page
  # @param [Integer]                       size
  # @param [Hash]                          terms
  # @param [Hash]                          opt    To #assert_valid_action_page.
  #
  # @raise [Minitest::Assertion]
  #
  # @return [true]
  #
  def assert_valid_index_page: (Symbol|String|Class|Model|nil model, ?index: Integer|nil, ?total: Integer|nil, ?page: Integer|nil, ?size: Integer|nil, ?terms: anyHash|nil, **untyped opt) -> true

  # Generate a string for search terms as they would appear in the '<title>'
  # element.
  #
  # @param [Symbol,String,Class,Model,nil] model
  # @param [Hash]                          terms
  #
  # @return [String]
  #
  def title_terms: (Symbol|String|Class|Model|nil model, **untyped terms) -> String

  # Assert that each active search term is displayed on the index page.
  #
  # @param [Hash] terms
  #
  # @raise [Minitest::Assertion]
  #
  # @return [true]
  #
  # NOTE: The active search terms are no longer displayed on the page.
  #
  def assert_search_terms: (**untyped terms) -> true

  # Assert that a search count is displayed on the index page.
  #
  # @param [Symbol,String,Class,Model,nil] model
  # @param [Integer]                       total
  # @param [String]                        records
  #
  # @raise [Minitest::Assertion]      If the count is not displayed.
  # @raise [RuntimeError]             If *records* is not given or found.
  #
  # @return [true]
  #
  def assert_search_count: (Symbol|String|Class|Model|nil model, ?total: Integer|nil, ?records: String|nil, **untyped _ignored) -> true

  # visit_index
  #
  # @param [Symbol, String] target
  # @param [Symbol]         action
  # @param [Symbol, nil]    model
  # @param [Hash]           opt       Passed to #assert_valid_index_page.
  #
  # @raise [Minitest::Assertion]
  #
  # @return [true]
  #
  # @yield Test code to run while on the page.
  # @yieldreturn [void]
  #
  def visit_index: ((Symbol|String) target, ?action: Symbol, ?model: Symbol|nil, **untyped opt) ?{ () -> void } -> true

  # visit_each_show_page
  #
  # @param [Symbol,String,Class,Model,nil] model
  # @param [String]                        entry_css
  #
  # @raise [Minitest::Assertion]
  #
  # @return [void]
  #
  # @yield [index, title] Exposes each visited page for additional actions.
  # @yieldparam [Integer] index
  # @yieldparam [String]  title
  # @yieldreturn [void]
  #
  def visit_each_show_page: (Symbol|String|Class|Model|nil model, ?entry_css: String|nil) ?{ (Integer, String) -> void } -> void
end
