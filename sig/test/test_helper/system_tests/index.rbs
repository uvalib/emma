# Support for checking index pages and search results.
#
module TestHelper::SystemTests::Index
  include TestHelper::SystemTests::Common

  SEARCH_COUNT_CLASS: String

  SEARCH_TERMS_CLASS: String

  VALUE_SELECTOR: String

  # Assert that the current page is a valid index page.
  #
  # @param [Symbol, nil] model
  # @param [String]      title
  # @param [String]      heading
  # @param [Integer]     index
  # @param [Integer]     page
  # @param [Integer]     size
  # @param [Hash]        terms
  # @param [Hash]        opt          Passed to #assert_valid_page.
  #
  # @return [void]
  #
  def assert_valid_index_page: (Symbol|nil model, ?title: String|nil, ?heading: String|nil, ?index: Integer|nil, ?page: Integer|nil, ?size: Integer|nil, ?terms: anyHash|nil, **untyped opt) -> void

  # Generate a string for search terms as they would appear in the '<title>'
  # element.
  #
  # @param [Hash] terms               Except:
  #
  # @option terms [Boolean] :label    Default: *true*.
  # @option terms [Boolean] :quote    Default: *true*
  #
  # @return [String]
  #
  def title_terms: (**untyped terms) -> String

  # Assert that each active search term is displayed on the index page.
  #
  # @param [Hash] terms
  #
  # @return [void]
  #
  # NOTE: The active search terms are no longer displayed on the page.
  #
  def assert_search_terms: (**untyped terms) -> void

  # Assert that a search count is displayed on the index page.
  #
  # @param [Symbol, nil] model
  # @param [Integer]     total
  # @param [String]      count
  #
  # @return [void]
  #
  def assert_search_count: (Symbol|nil model, ?total: Integer|nil, ?count: String|nil) -> void

  # visit_index
  #
  # @param [Symbol, String] url
  # @param [Hash]           opt       Passed to #assert_valid_index_page.
  #
  # @return [void]
  #
  # @yield Test code to run while on the page.
  # @yieldreturn [void]
  #
  def visit_index: (Symbol|String url, **untyped opt) { () -> void } -> void

  # visit_each_show_page
  #
  # @param [Symbol] model
  # @param [String] entry_class
  #
  # @return [void]
  #
  # @yield [index, title] Exposes each visited page for additional actions.
  # @yieldparam [Integer] index
  # @yieldparam [String]  title
  # @yieldreturn [void]
  #
  def visit_each_show_page: (Symbol model, ?entry_class: String|nil) { (Integer, String) -> void } -> void
end
