# General utility methods.
#
module TestHelper::Utility
  include TestHelper::Common

  CDN_URL: String

  # The URL for a catalog title thumbnail.
  #
  # @param [String] bookshare_id
  #
  # @return [String]
  #
  def cdn_thumbnail: (String bookshare_id) -> String

  # Return a User instance from the given identification.
  #
  # @param [String, Symbol, User, *] user
  #
  # @return [User]
  # @return [nil]                     If *user* could not be converted.
  #
  def find_user: (untyped user) -> (User | nil)

  # Return multiple User instances.
  #
  # @param [Array] users
  #
  # @return [Array<User>]
  #
  def find_users: (*untyped users) -> Array[User|nil]

  # The number of fixture records for the given model.
  #
  # @param [Symbol, String, Class, Model] model
  #
  # @return [Integer]
  #
  def fixture_count: (Symbol|String|Class|Model model) -> Integer

  # Extract the EMMA index entry identifier from the item.
  #
  # @param [SearchResult, nil] item
  # @param [String, nil]       repo
  # @param [String, nil]       rid
  # @param [String, nil]       format
  # @param [String, nil]       ver
  #
  # @return [String]
  #
  def record_id
    : ( SearchResult item, ?repo: String|nil, ?rid: String|nil, ?format: String|nil, ?ver: String|nil) -> String
    | (?nil          item,  repo: String,      rid: String,      format: String,     ?ver: String|nil) -> String

  # Note in the output that a test was skipped because it was not applicable.
  #
  # @param [String, nil] note         Additional annotation.
  #
  # @return [true]
  #
  def not_applicable: (?(String|nil) note) -> true

  # Note in the output that a test was skipped because the given format was not
  # applicable (or if none was given whether any of the currently configured
  # formats in #TEST_FORMATS are applicable).
  #
  # @param [Array, Symbol, nil] fmt
  # @param [String, nil]        note  Additional annotation.
  # @param [Array, Symbol, nil] only  Applicable format(s) or :all; default:
  #                                     #TEST_FORMATS.
  #
  # @return [true]                    If the test should proceed.
  # @return [false]                   If the test should be skipped.
  #
  def allowed_format
    : ((Symbol|symArray|nil) fmt, ?(String|nil) note, only: Symbol|symArray|nil) -> bool
    | (                           ?(String|nil) note, only: Symbol|symArray|nil) -> bool
end
